{"mappings":"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","sources":["node_modules/kaboom/src/math.ts","node_modules/kaboom/src/utils.ts","node_modules/kaboom/src/gfx.ts","node_modules/kaboom/src/app.ts","node_modules/kaboom/src/audio.ts","node_modules/kaboom/src/assets.ts","node_modules/kaboom/src/logger.ts","node_modules/kaboom/src/plugins/kaboom.ts","node_modules/kaboom/src/kaboom.ts","src/app.js"],"sourcesContent":["import {\n\tVec2,\n\tVec3,\n\tVec4,\n\tMat4,\n\tColor,\n\tQuad,\n\tPoint,\n\tRect,\n\tCircle,\n\tPolygon,\n\tLine,\n\tArea,\n\tRNG,\n} from \"./types\";\n\nfunction deg2rad(deg: number): number {\n\treturn deg * Math.PI / 180;\n}\n\nfunction rad2deg(rad: number): number {\n\treturn rad * 180 / Math.PI;\n}\n\nfunction clamp(\n\tval: number,\n\tmin: number,\n\tmax: number,\n): number {\n\tif (min > max) {\n\t\treturn clamp(val, max, min);\n\t}\n\treturn Math.min(Math.max(val, min), max);\n}\n\nfunction lerp(\n\ta: number,\n\tb: number,\n\tt: number,\n): number {\n\treturn a + (b - a) * t;\n}\n\nfunction map(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn l2 + (v - l1) / (h1 - l1) * (h2 - l2);\n}\n\nfunction mapc(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn clamp(map(v, l1, h1, l2, h2), l2, h2);\n}\n\nfunction vec2(...args): Vec2 {\n\n\tif (args.length === 0) {\n\t\treturn vec2(0, 0);\n\t}\n\n\tif (args.length === 1) {\n\t\tif (typeof args[0] === \"number\") {\n\t\t\treturn vec2(args[0], args[0]);\n\t\t} else if (isVec2(args[0])) {\n\t\t\treturn vec2(args[0].x, args[0].y);\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 2) {\n\t\t\treturn vec2.apply(null, args[0]);\n\t\t}\n\t}\n\n\treturn {\n\t\tx: args[0],\n\t\ty: args[1],\n\t\tclone(): Vec2 {\n\t\t\treturn vec2(this.x, this.y);\n\t\t},\n\t\tadd(...args): Vec2 {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn vec2(this.x + p2.x, this.y + p2.y);\n\t\t},\n\t\tsub(...args): Vec2 {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn vec2(this.x - p2.x, this.y - p2.y);\n\t\t},\n\t\tscale(...args): Vec2 {\n\t\t\tconst s = vec2(...args);\n\t\t\treturn vec2(this.x * s.x, this.y * s.y);\n\t\t},\n\t\tdist(...args): number {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn Math.sqrt(\n\t\t\t\t(this.x - p2.x) * (this.x - p2.x)\n\t\t\t\t+ (this.y - p2.y) * (this.y - p2.y)\n\t\t\t);\n\t\t},\n\t\tlen(): number {\n\t\t\treturn this.dist(vec2(0, 0));\n\t\t},\n\t\tunit(): Vec2 {\n\t\t\treturn this.scale(1 / this.len());\n\t\t},\n\t\tnormal(): Vec2 {\n\t\t\treturn vec2(this.y, -this.x);\n\t\t},\n\t\tdot(p2: Vec2): number {\n\t\t\treturn this.x * p2.x + this.y * p2.y;\n\t\t},\n\t\tangle(...args): number {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn rad2deg(Math.atan2(this.y - p2.y, this.x - p2.x));\n\t\t},\n\t\tlerp(p2: Vec2, t: number): Vec2 {\n\t\t\treturn vec2(lerp(this.x, p2.x, t), lerp(this.y, p2.y, t));\n\t\t},\n\t\ttoFixed(n: number): Vec2 {\n\t\t\treturn vec2(this.x.toFixed(n), this.y.toFixed(n));\n\t\t},\n\t\teq(other: Vec2): boolean {\n\t\t\treturn this.x === other.x && this.y === other.y;\n\t\t},\n\t\tstr(): string {\n\t\t\treturn `(${this.x.toFixed(2)}, ${this.y.toFixed(2)})`;\n\t\t},\n\t};\n}\n\nfunction dir(deg: number): Vec2 {\n\tconst angle = deg2rad(deg);\n\treturn vec2(Math.cos(angle), Math.sin(angle));\n}\n\nfunction vec3(x: number, y: number, z: number): Vec3 {\n\treturn {\n\t\tx: x,\n\t\ty: y,\n\t\tz: z,\n\t\txy(): Vec2 {\n\t\t\treturn vec2(this.x, this.y);\n\t\t},\n\t};\n}\n\nfunction isVec2(p: any): boolean {\n\treturn p !== undefined\n\t\t&& p.x !== undefined\n\t\t&& p.y !== undefined\n\t\t;\n}\n\nfunction isVec3(p: any): boolean {\n\treturn p !== undefined\n\t\t&& p.x !== undefined\n\t\t&& p.y !== undefined\n\t\t&& p.z !== undefined\n\t\t;\n}\n\nfunction isColor(c: any): boolean {\n\treturn c !== undefined\n\t\t&& c.r !== undefined\n\t\t&& c.g !== undefined\n\t\t&& c.b !== undefined\n\t\t;\n}\n\nfunction isMat4(m: any): Mat4 {\n\tif (\n\t\tm !== undefined\n\t\t&& Array.isArray(m.m)\n\t\t&& m.m.length === 16\n\t) {\n\t\treturn m;\n\t}\n}\n\nfunction rgb(...args): Color {\n\n\tif (args.length === 0) {\n\t\treturn rgb(255, 255, 255);\n\t} else if (args.length === 1) {\n\t\tif (isColor(args[0])) {\n\t\t\treturn rgb(args[0].r, args[0].g, args[0].b);\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 3) {\n\t\t\treturn rgb.apply(null, args[0]);\n\t\t}\n\t}\n\n\treturn {\n\t\tr: clamp(~~args[0], 0, 255),\n\t\tg: clamp(~~args[1], 0, 255),\n\t\tb: clamp(~~args[2], 0, 255),\n\t\tclone(): Color {\n\t\t\treturn rgb(this.r, this.g, this.b);\n\t\t},\n\t\tlighten(a: number): Color {\n\t\t\treturn rgb(this.r + a, this.g + a, this.b + a);\n\t\t},\n\t\tdarken(a: number): Color {\n\t\t\treturn this.lighten(-a);\n\t\t},\n\t\tinvert(): Color {\n\t\t\treturn rgb(255 - this.r, 255 - this.g, 255 - this.b);\n\t\t},\n\t\tmult(other: Color): Color {\n\t\t\treturn rgb(\n\t\t\t\tthis.r * other.r / 255,\n\t\t\t\tthis.g * other.g / 255,\n\t\t\t\tthis.b * other.b / 255,\n\t\t\t);\n\t\t},\n\t\teq(other: Color): boolean {\n\t\t\treturn this.r === other.r\n\t\t\t\t&& this.g === other.g\n\t\t\t\t&& this.b === other.g\n\t\t\t\t;\n\t\t},\n\t\tstr(): string {\n\t\t\treturn `(${this.r}, ${this.g}, ${this.b})`;\n\t\t},\n\t};\n\n}\n\nfunction hsl2rgb(h: number, s: number, l: number): Color {\n\n\tif (s == 0){\n\t\treturn rgb(255 * l, 255 * l, 255 * l);\n\t}\n\n\tconst hue2rgb = (p, q, t) => {\n\t\tif (t < 0) t += 1;\n\t\tif (t > 1) t -= 1;\n\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\n\t\tif (t < 1 / 2) return q;\n\t\tif (t < 2 / 3) return p + (q - p) * (2/3 - t) * 6;\n\t\treturn p;\n\t}\n\n\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\tconst p = 2 * l - q;\n\tconst r = hue2rgb(p, q, h + 1 / 3);\n\tconst g = hue2rgb(p, q, h);\n\tconst b = hue2rgb(p, q, h - 1 / 3);\n\n\treturn rgb(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255));\n\n}\n\nfunction quad(x: number, y: number, w: number, h: number): Quad {\n\treturn {\n\t\tx: x ?? 0,\n\t\ty: y ?? 0,\n\t\tw: w ?? 1,\n\t\th: h ?? 1,\n\t\tscale(other: Quad): Quad {\n\t\t\treturn quad(\n\t\t\t\tthis.x + this.w * other.x,\n\t\t\t\tthis.y + this.h * other.y,\n\t\t\t\tthis.w * other.w,\n\t\t\t\tthis.h * other.h\n\t\t\t);\n\t\t},\n\t\tclone(): Quad {\n\t\t\treturn quad(this.x, this.y, this.w, this.h);\n\t\t},\n\t\teq(other: Quad): boolean {\n\t\t\treturn this.x === other.x\n\t\t\t\t&& this.y === other.y\n\t\t\t\t&& this.w === other.w\n\t\t\t\t&& this.h === other.h;\n\t\t},\n\t};\n}\n\nfunction mat4(m?: number[]): Mat4 {\n\n\treturn {\n\n\t\tm: m ? [...m] : [\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t],\n\n\t\tclone(): Mat4 {\n\t\t\treturn mat4(this.m);\n\t\t},\n\n\t\tmult(other: Mat4): Mat4 {\n\n\t\t\tconst out = [];\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\t\tout[i * 4 + j] =\n\t\t\t\t\t\tthis.m[0 * 4 + j] * other.m[i * 4 + 0] +\n\t\t\t\t\t\tthis.m[1 * 4 + j] * other.m[i * 4 + 1] +\n\t\t\t\t\t\tthis.m[2 * 4 + j] * other.m[i * 4 + 2] +\n\t\t\t\t\t\tthis.m[3 * 4 + j] * other.m[i * 4 + 3];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mat4(out);\n\n\t\t},\n\n\t\tmultVec4(p: Vec4): Vec4 {\n\t\t\treturn {\n\t\t\t\tx: p.x * this.m[0] + p.y * this.m[4] + p.z * this.m[8] + p.w * this.m[12],\n\t\t\t\ty: p.x * this.m[1] + p.y * this.m[5] + p.z * this.m[9] + p.w * this.m[13],\n\t\t\t\tz: p.x * this.m[2] + p.y * this.m[6] + p.z * this.m[10] + p.w * this.m[14],\n\t\t\t\tw: p.x * this.m[3] + p.y * this.m[7] + p.z * this.m[11] + p.w * this.m[15]\n\t\t\t};\n\t\t},\n\n\t\tmultVec3(p: Vec3): Vec3 {\n\t\t\tconst p4 = this.multVec4({\n\t\t\t\tx: p.x,\n\t\t\t\ty: p.y,\n\t\t\t\tz: p.z,\n\t\t\t\tw: 1.0,\n\t\t\t});\n\t\t\treturn vec3(p4.x, p4.y, p4.z);\n\t\t},\n\n\t\tmultVec2(p: Vec2): Vec2 {\n\t\t\treturn vec2(\n\t\t\t\tp.x * this.m[0] + p.y * this.m[4] + 0 * this.m[8] + 1 * this.m[12],\n\t\t\t\tp.x * this.m[1] + p.y * this.m[5] + 0 * this.m[9] + 1 * this.m[13],\n\t\t\t);\n\t\t},\n\n\t\ttranslate(p: Vec2): Mat4 {\n\t\t\treturn this.mult(mat4([\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\tp.x, p.y, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\tscale(s: Vec2): Mat4 {\n\t\t\treturn this.mult(mat4([\n\t\t\t\ts.x, 0, 0, 0,\n\t\t\t\t0, s.y, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateX(a: number): Mat4 {\n\t\t\ta = deg2rad(-a);\n\t\t\treturn this.mult(mat4([\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, Math.cos(a), -Math.sin(a), 0,\n\t\t\t\t0, Math.sin(a), Math.cos(a), 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateY(a: number): Mat4 {\n\t\t\ta = deg2rad(-a);\n\t\t\treturn this.mult(mat4([\n\t\t\t\tMath.cos(a), 0, Math.sin(a), 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t-Math.sin(a), 0, Math.cos(a), 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateZ(a: number): Mat4 {\n\t\t\ta = deg2rad(-a);\n\t\t\treturn this.mult(mat4([\n\t\t\t\tMath.cos(a), -Math.sin(a), 0, 0,\n\t\t\t\tMath.sin(a), Math.cos(a), 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\tinvert(): Mat4 {\n\n\t\t\tconst out = [];\n\n\t\t\tconst f00 = this.m[10] * this.m[15] - this.m[14] * this.m[11];\n\t\t\tconst f01 = this.m[9] * this.m[15] - this.m[13] * this.m[11];\n\t\t\tconst f02 = this.m[9] * this.m[14] - this.m[13] * this.m[10];\n\t\t\tconst f03 = this.m[8] * this.m[15] - this.m[12] * this.m[11];\n\t\t\tconst f04 = this.m[8] * this.m[14] - this.m[12] * this.m[10];\n\t\t\tconst f05 = this.m[8] * this.m[13] - this.m[12] * this.m[9];\n\t\t\tconst f06 = this.m[6] * this.m[15] - this.m[14] * this.m[7];\n\t\t\tconst f07 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\t\tconst f08 = this.m[5] * this.m[14] - this.m[13] * this.m[6];\n\t\t\tconst f09 = this.m[4] * this.m[15] - this.m[12] * this.m[7];\n\t\t\tconst f10 = this.m[4] * this.m[14] - this.m[12] * this.m[6];\n\t\t\tconst f11 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\t\tconst f12 = this.m[4] * this.m[13] - this.m[12] * this.m[5];\n\t\t\tconst f13 = this.m[6] * this.m[11] - this.m[10] * this.m[7];\n\t\t\tconst f14 = this.m[5] * this.m[11] - this.m[9] * this.m[7];\n\t\t\tconst f15 = this.m[5] * this.m[10] - this.m[9] * this.m[6];\n\t\t\tconst f16 = this.m[4] * this.m[11] - this.m[8] * this.m[7];\n\t\t\tconst f17 = this.m[4] * this.m[10] - this.m[8] * this.m[6];\n\t\t\tconst f18 = this.m[4] * this.m[9] - this.m[8] * this.m[5];\n\n\t\t\tout[0] = this.m[5] * f00 - this.m[6] * f01 + this.m[7] * f02;\n\t\t\tout[4] = -(this.m[4] * f00 - this.m[6] * f03 + this.m[7] * f04);\n\t\t\tout[8] = this.m[4] * f01 - this.m[5] * f03 + this.m[7] * f05;\n\t\t\tout[12] = -(this.m[4] * f02 - this.m[5] * f04 + this.m[6] * f05);\n\n\t\t\tout[1] = -(this.m[1] * f00 - this.m[2] * f01 + this.m[3] * f02);\n\t\t\tout[5] = this.m[0] * f00 - this.m[2] * f03 + this.m[3] * f04;\n\t\t\tout[9] = -(this.m[0] * f01 - this.m[1] * f03 + this.m[3] * f05);\n\t\t\tout[13] = this.m[0] * f02 - this.m[1] * f04 + this.m[2] * f05;\n\n\t\t\tout[2] = this.m[1] * f06 - this.m[2] * f07 + this.m[3] * f08;\n\t\t\tout[6] = -(this.m[0] * f06 - this.m[2] * f09 + this.m[3] * f10);\n\t\t\tout[10] = this.m[0] * f11 - this.m[1] * f09 + this.m[3] * f12;\n\t\t\tout[14] = -(this.m[0] * f08 - this.m[1] * f10 + this.m[2] * f12);\n\n\t\t\tout[3] = -(this.m[1] * f13 - this.m[2] * f14 + this.m[3] * f15);\n\t\t\tout[7] = this.m[0] * f13 - this.m[2] * f16 + this.m[3] * f17;\n\t\t\tout[11] = -(this.m[0] * f14 - this.m[1] * f16 + this.m[3] * f18);\n\t\t\tout[15] = this.m[0] * f15 - this.m[1] * f17 + this.m[2] * f18;\n\n\t\t\tconst det =\n\t\t\t\tthis.m[0] * out[0] +\n\t\t\t\tthis.m[1] * out[4] +\n\t\t\t\tthis.m[2] * out[8] +\n\t\t\t\tthis.m[3] * out[12];\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\t\tout[i * 4 + j] *= (1.0 / det);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mat4(out);\n\n\t\t},\n\n\t};\n\n}\n\nfunction wave(lo: number, hi: number, t: number, f = Math.sin): number {\n\treturn lo + (f(t) + 1) / 2 * (hi - lo);\n}\n\n// basic ANSI C LCG\nconst A = 1103515245;\nconst C = 12345;\nconst M = 2147483648;\n// TODO: let user pass seed\nconst defRNG = rng(Date.now());\n\nfunction rng(seed: number): RNG {\n\treturn {\n\t\tseed: seed,\n\t\tgen(...args) {\n\t\t\tif (args.length === 0) {\n\t\t\t\tthis.seed = (A * this.seed + C) % M;\n\t\t\t\treturn this.seed / M;\n\t\t\t} else if (args.length === 1) {\n\t\t\t\tif (typeof args[0] === \"number\") {\n\t\t\t\t\treturn this.gen(0, args[0]);\n\t\t\t\t} else if (isVec2(args[0])) {\n\t\t\t\t\treturn this.gen(vec2(0, 0), args[0]);\n\t\t\t\t} else if (isColor(args[0])) {\n\t\t\t\t\treturn this.gen(rgb(0, 0, 0), args[0]);\n\t\t\t\t}\n\t\t\t} else if (args.length === 2) {\n\t\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\t\treturn (this.gen() * (args[1] - args[0])) + args[0];\n\t\t\t\t} else if (isVec2(args[0]) && isVec2(args[1])) {\n\t\t\t\t\treturn vec2(\n\t\t\t\t\t\tthis.gen(args[0].x, args[1].x),\n\t\t\t\t\t\tthis.gen(args[0].y, args[1].y),\n\t\t\t\t\t);\n\t\t\t\t} else if (isColor(args[0]) && isColor(args[1])) {\n\t\t\t\t\treturn rgb(\n\t\t\t\t\t\tthis.gen(args[0].r, args[1].r),\n\t\t\t\t\t\tthis.gen(args[0].g, args[1].g),\n\t\t\t\t\t\tthis.gen(args[0].b, args[1].b),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction randSeed(seed?: number): number {\n\tif (seed != null) {\n\t\tdefRNG.seed = seed;\n\t}\n\treturn defRNG.seed;\n}\n\nfunction rand(...args) {\n\t// @ts-ignore\n\treturn defRNG.gen(...args);\n}\n\n// TODO: randi() to return 0 / 1?\nfunction randi(...args) {\n\treturn Math.floor(rand(...args));\n}\n\nfunction chance(p: number): boolean {\n\treturn rand() <= p;\n}\n\nfunction choose<T>(list: T[]): T {\n\treturn list[randi(list.length)];\n}\n\n// TODO: better name\nfunction testRectRect2(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x >= r2.p1.x\n\t\t&& r1.p1.x <= r2.p2.x\n\t\t&& r1.p2.y >= r2.p1.y\n\t\t&& r1.p1.y <= r2.p2.y;\n}\n\nfunction testRectRect(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x > r2.p1.x\n\t\t&& r1.p1.x < r2.p2.x\n\t\t&& r1.p2.y > r2.p1.y\n\t\t&& r1.p1.y < r2.p2.y;\n}\n\n// TODO: better name\nfunction testLineLineT(l1: Line, l2: Line): number | null {\n\n\tif ((l1.p1.x === l1.p2.x && l1.p1.y === l1.p2.y) || (l2.p1.x === l2.p2.x && l2.p1.y === l2.p2.y)) {\n\t\treturn null;\n\t}\n\n\tconst denom = ((l2.p2.y - l2.p1.y) * (l1.p2.x - l1.p1.x) - (l2.p2.x - l2.p1.x) * (l1.p2.y - l1.p1.y));\n\n\t// parallel\n\tif (denom === 0) {\n\t\treturn null;\n\t}\n\n\tconst ua = ((l2.p2.x - l2.p1.x) * (l1.p1.y - l2.p1.y) - (l2.p2.y - l2.p1.y) * (l1.p1.x - l2.p1.x)) / denom;\n\tconst ub = ((l1.p2.x - l1.p1.x) * (l1.p1.y - l2.p1.y) - (l1.p2.y - l1.p1.y) * (l1.p1.x - l2.p1.x)) / denom;\n\n\t// is the intersection on the segments\n\tif (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n\t\treturn null;\n\t}\n\n\treturn ua;\n\n}\n\nfunction testLineLine(l1: Line, l2: Line): Vec2 | null {\n\tconst t = testLineLineT(l1, l2);\n\tif (!t) return null;\n\treturn vec2(\n\t\tl1.p1.x + t * (l1.p2.x - l1.p1.x),\n\t\tl1.p1.y + t * (l1.p2.y - l1.p1.y),\n\t);\n}\n\nfunction testRectLine(r: Rect, l: Line): boolean {\n\tif (testRectPoint(r, l.p1) || testRectPoint(r, l.p2)) {\n\t\treturn true;\n\t}\n\treturn !!testLineLine(l, makeLine(r.p1, vec2(r.p2.x, r.p1.y)))\n\t\t|| !!testLineLine(l, makeLine(vec2(r.p2.x, r.p1.y), r.p2))\n\t\t|| !!testLineLine(l, makeLine(r.p2, vec2(r.p1.x, r.p2.y)))\n\t\t|| !!testLineLine(l, makeLine(vec2(r.p1.x, r.p2.y), r.p1));\n}\n\nfunction testRectPoint2(r: Rect, pt: Point): boolean {\n\treturn pt.x >= r.p1.x && pt.x <= r.p2.x && pt.y >= r.p1.y && pt.y <= r.p2.y;\n}\n\nfunction testRectPoint(r: Rect, pt: Point): boolean {\n\treturn pt.x > r.p1.x && pt.x < r.p2.x && pt.y > r.p1.y && pt.y < r.p2.y;\n}\n\n// TODO\nfunction testRectCircle(r: Rect, c: Circle): boolean {\n\treturn false;\n}\n\nfunction testRectPolygon(r: Rect, p: Polygon): boolean {\n\treturn testPolygonPolygon(p, [\n\t\tr.p1,\n\t\tvec2(r.p2.x, r.p1.y),\n\t\tr.p2,\n\t\tvec2(r.p1.x, r.p2.y),\n\t]);\n}\n\n// TODO\nfunction testLinePoint(l: Line, pt: Vec2): boolean {\n\treturn false;\n}\n\n// TODO\nfunction testLineCircle(l: Line, c: Circle): boolean {\n\treturn false;\n}\n\nfunction testLinePolygon(l: Line, p: Polygon): boolean {\n\n\t// test if line is inside\n\tif (testPolygonPoint(p, l.p1) || testPolygonPoint(p, l.p2)) {\n\t\treturn true;\n\t}\n\n\t// test each line\n\tfor (let i = 0; i < p.length; i++) {\n\t\tconst p1 = p[i];\n\t\tconst p2 = p[(i + 1) % p.length];\n\t\tif (testLineLine(l, { p1, p2 })) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n\n}\n\nfunction testCirclePoint(c: Circle, p: Point): boolean {\n\treturn c.center.dist(p) < c.radius;\n}\n\nfunction testCircleCircle(c1: Circle, c2: Circle): boolean {\n\treturn c1.center.dist(c2.center) < c1.radius + c2.radius;\n}\n\n// TODO\nfunction testCirclePolygon(c: Circle, p: Polygon): boolean {\n\treturn false;\n}\n\nfunction testPolygonPolygon(p1: Polygon, p2: Polygon): boolean {\n\tfor (let i = 0; i < p1.length; i++) {\n\t\tconst l = {\n\t\t\tp1: p1[i],\n\t\t\tp2: p1[(i + 1) % p1.length],\n\t\t};\n\t\tif (testLinePolygon(l, p2)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction testPolygonPoint(p: Polygon, pt: Point): boolean {\n\n\tlet has = false;\n\n\tfor (let i = 0; i < p.length; i++) {\n\n\t\tconst p1 = p[i];\n\t\tconst p2 = p[(i + 1) % p.length];\n\n\t\tif (\n\t\t\t((p1.y > pt.y && p2.y < pt.y) || (p1.y < pt.y && p2.y > pt.y))\n\t\t\t&& (pt.x < (p2.x - p1.x) * (pt.y - p1.y) / (p2.y - p1.y) + p1.x)\n\t\t) {\n\t\t\thas = !has;\n\t\t}\n\n\t}\n\n\treturn has;\n\n}\n\nfunction testPointPoint(p1: Point, p2: Point): boolean {\n\treturn p1.eq(p2);\n}\n\nfunction testAreaRect(a: Area, r: Rect): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectRect(r, a);\n\t\tcase \"line\": return testRectLine(r, a);\n\t\tcase \"circle\": return testRectCircle(r, a);\n\t\tcase \"polygon\": return testRectPolygon(r, a.pts);\n\t\tcase \"point\": return testRectPoint(r, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nfunction testAreaLine(a: Area, l: Line): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectLine(a, l);\n\t\tcase \"line\": return Boolean(testLineLine(a, l));\n\t\tcase \"circle\": return testLineCircle(l, a);\n\t\tcase \"polygon\": return testLinePolygon(l, a.pts);\n\t\tcase \"point\": return testLinePoint(l, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nfunction testAreaCircle(a: Area, c: Circle): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectCircle(a, c);\n\t\tcase \"line\": return testLineCircle(a, c);\n\t\tcase \"circle\": return testCircleCircle(a, c);\n\t\tcase \"polygon\": return testCirclePolygon(c, a.pts);\n\t\tcase \"point\": return testCirclePoint(c, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nfunction testAreaPolygon(a: Area, p: Polygon): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectPolygon(a, p);\n\t\tcase \"line\": return testLinePolygon(a, p);\n\t\tcase \"circle\": return testCirclePolygon(a, p);\n\t\tcase \"polygon\": return testPolygonPolygon(p, a.pts);\n\t\tcase \"point\": return testPolygonPoint(p, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nfunction testAreaPoint(a: Area, p: Point): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectPoint(a, p);\n\t\tcase \"line\": return testLinePoint(a, p);\n\t\tcase \"circle\": return testCirclePoint(a, p);\n\t\tcase \"polygon\": return testPolygonPoint(a.pts, p);\n\t\tcase \"point\": return testPointPoint(a.pt, p);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nfunction testAreaArea(a1: Area, a2: Area): boolean {\n\tswitch (a2.shape) {\n\t\tcase \"rect\": return testAreaRect(a1, a2);\n\t\tcase \"line\": return testAreaLine(a1, a2);\n\t\tcase \"circle\": return testAreaCircle(a1, a2);\n\t\tcase \"polygon\": return testAreaPolygon(a1, a2.pts);\n\t\tcase \"point\": return testAreaPoint(a1, a2.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a2 as Area).shape}`);\n}\n\nfunction minkDiff(r1: Rect, r2: Rect): Rect {\n\treturn {\n\t\tp1: vec2(r1.p1.x - r2.p2.x, r1.p1.y - r2.p2.y),\n\t\tp2: vec2(r1.p2.x - r2.p1.x, r1.p2.y - r2.p1.y),\n\t};\n}\n\nfunction makeLine(p1: Vec2, p2: Vec2): Line {\n\treturn {\n\t\tp1: p1.clone(),\n\t\tp2: p2.clone(),\n\t};\n}\n\nexport {\n\tvec2,\n\tvec3,\n\tmat4,\n\tquad,\n\trgb,\n\thsl2rgb,\n\trng,\n\trand,\n\trandi,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\tdeg2rad,\n\trad2deg,\n\ttestAreaRect,\n\ttestAreaLine,\n\ttestAreaCircle,\n\ttestAreaPolygon,\n\ttestAreaPoint,\n\ttestAreaArea,\n\ttestLineLineT,\n\ttestRectRect2,\n\ttestLineLine,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestLinePolygon,\n\ttestPolygonPolygon,\n\ttestCircleCircle,\n\ttestCirclePoint,\n\ttestRectPolygon,\n\tminkDiff,\n\tdir,\n\tisVec2,\n\tisVec3,\n\tisColor,\n\tisMat4,\n};\n","class IDList<T> extends Map<number, T> {\n\t_lastID: number;\n\tconstructor(...args) {\n\t\tsuper(...args);\n\t\tthis._lastID = 0;\n\t}\n\tpush(v: T): number {\n\t\tconst id = this._lastID;\n\t\tthis.set(id, v);\n\t\tthis._lastID++;\n\t\treturn id;\n\t}\n\tpushd(v: T): () => void {\n\t\tconst id = this.push(v);\n\t\treturn () => this.delete(id);\n\t}\n}\n\nfunction deepEq(o1: any, o2: any): boolean {\n\tconst t1 = typeof o1;\n\tconst t2 = typeof o2;\n\tif (t1 !== t2) {\n\t\treturn false;\n\t}\n\tif (t1 === \"object\" && t2 === \"object\") {\n\t\tconst k1 = Object.keys(o1);\n\t\tconst k2 = Object.keys(o2);\n\t\tif (k1.length !== k2.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (const k of k1) {\n\t\t\tconst v1 = o1[k];\n\t\t\tconst v2 = o2[k];\n\t\t\tif (!(typeof v1 === \"function\" && typeof v2 === \"function\")) {\n\t\t\t\tif (!deepEq(v1, v2)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\treturn o1 === o2;\n}\n\nfunction downloadURL(url: string, filename: string) {\n\tconst a = document.createElement(\"a\");\n\tdocument.body.appendChild(a);\n\ta.setAttribute(\"style\", \"display: none\");\n\ta.href = url;\n\ta.download = filename;\n\ta.click();\n\tdocument.body.removeChild(a);\n}\n\nfunction downloadBlob(blob: Blob, filename: string) {\n\tconst url = URL.createObjectURL(blob);\n\tdownloadURL(url, filename);\n\tURL.revokeObjectURL(url);\n}\n\nexport {\n\tdeepEq,\n\tIDList,\n\tdownloadBlob,\n\tdownloadURL,\n};\n","import {\n\tvec2,\n\tvec3,\n\tquad,\n\trgb,\n\tmat4,\n\tdir,\n\tdeg2rad,\n\tisVec2,\n\tisVec3,\n\tisColor,\n\tisMat4,\n} from \"./math\";\n\nimport {\n\tdeepEq,\n} from \"./utils\";\n\nimport {\n\tColor,\n\tVec2,\n\tMat4,\n\tQuad,\n\tOrigin,\n\tGfxShader,\n\tGfxTexture,\n\tGfxTexData,\n\tGfxFont,\n\tUniform,\n\tTexFilter,\n\tRenderProps,\n\tCharTransform,\n\tTexWrap,\n\tFormattedText,\n\tDrawRectOpt,\n\tDrawLineOpt,\n\tDrawLinesOpt,\n\tDrawTriangleOpt,\n\tDrawPolygonOpt,\n\tDrawCircleOpt,\n\tDrawEllipseOpt,\n\tDrawUVQuadOpt,\n\tVertex,\n\tDrawTextOpt,\n} from \"./types\";\n\ntype GfxCtx = {\n\tvbuf: WebGLBuffer,\n\tibuf: WebGLBuffer,\n\tvqueue: number[],\n\tiqueue: number[],\n\tbackground: Color,\n\tdefShader: GfxShader,\n\tcurShader: GfxShader,\n\tdefTex: GfxTexture,\n\tcurTex: GfxTexture,\n\tbgTex: GfxTexture,\n\tcurUniform: Uniform,\n\ttransform: Mat4,\n\ttransformStack: Mat4[],\n\tdrawCalls: number,\n\tlastDrawCalls: number,\n\twidth: number,\n\theight: number,\n};\n\ntype GfxOpt = {\n\tbackground?: Color,\n\twidth?: number,\n\theight?: number,\n\tscale?: number,\n\ttexFilter?: TexFilter,\n    stretch?: boolean,\n    letterbox?: boolean,\n};\n\ntype DrawTextureOpt = RenderProps & {\n\ttex: GfxTexture,\n\twidth?: number,\n\theight?: number,\n\ttiled?: boolean,\n\tflipX?: boolean,\n\tflipY?: boolean,\n\tquad?: Quad,\n\torigin?: Origin | Vec2,\n}\n\n// TODO: name\ntype DrawTextOpt2 = RenderProps & {\n\ttext: string,\n\tfont?: GfxFont,\n\tsize?: number,\n\twidth?: number,\n\torigin?: Origin | Vec2,\n\ttransform?: (idx: number, ch: string) => CharTransform,\n}\n\ninterface GfxTexOpt {\n\tfilter?: TexFilter,\n\twrap?: TexWrap,\n}\n\ntype Gfx = {\n\twidth(): number,\n\theight(): number,\n\tscale(): number,\n\tbackground(): Color,\n\tmakeTex(data: GfxTexData, opt?: GfxTexOpt): GfxTexture,\n\tmakeShader(vert: string, frag: string): GfxShader,\n\tmakeFont(\n\t\ttex: GfxTexture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t): GfxFont,\n\tdrawTexture(opt: DrawTextureOpt),\n\tdrawText(opt: DrawTextOpt2),\n\tdrawFmtText(ftext: FormattedText),\n\tdrawRect(opt: DrawRectOpt),\n\tdrawLine(opt: DrawLineOpt),\n\tdrawLines(opt: DrawLinesOpt),\n\tdrawTriangle(opt: DrawTriangleOpt),\n\tdrawCircle(opt: DrawCircleOpt),\n\tdrawEllipse(opt: DrawEllipseOpt),\n\tdrawPolygon(opt: DrawPolygonOpt),\n\tdrawUVQuad(opt: DrawUVQuadOpt),\n\tfmtText(opt: DrawTextOpt2): FormattedText,\n\tframeStart(),\n\tframeEnd(),\n\tpushTransform(): void,\n\tpopTransform(): void,\n\tpushTranslate(x: number, y: number): void,\n\tpushTranslate(p: Vec2): void,\n\tpushScale(sx: number, sy: number): void,\n\tpushScale(s: number): void,\n\tpushScale(s: Vec2): void,\n\tpushRotateX(angle: number): void,\n\tpushRotateY(angle: number): void,\n\tpushRotateZ(angle: number): void,\n\tapplyMatrix(m: Mat4),\n\tdrawCalls(): number,\n};\n\nconst DEF_ORIGIN = \"topleft\";\nconst STRIDE = 9;\nconst QUEUE_COUNT = 65536;\nconst BG_GRID_SIZE = 64;\n\nconst VERT_TEMPLATE = `\nattribute vec3 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvec4 def_vert() {\n\treturn vec4(a_pos, 1.0);\n}\n\n{{user}}\n\nvoid main() {\n\tvec4 pos = vert(a_pos, a_uv, a_color);\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tgl_Position = pos;\n}\n`;\n\nconst FRAG_TEMPLATE = `\nprecision mediump float;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nuniform sampler2D u_tex;\n\nvec4 def_frag() {\n\treturn v_color * texture2D(u_tex, v_uv);\n}\n\n{{user}}\n\nvoid main() {\n\tgl_FragColor = frag(v_pos, v_uv, v_color, u_tex);\n\tif (gl_FragColor.a == 0.0) {\n\t\tdiscard;\n\t}\n}\n`;\n\nconst DEF_VERT = `\nvec4 vert(vec3 pos, vec2 uv, vec4 color) {\n\treturn def_vert();\n}\n`;\n\nconst DEF_FRAG = `\nvec4 frag(vec3 pos, vec2 uv, vec4 color, sampler2D tex) {\n\treturn def_frag();\n}\n`;\n\nfunction originPt(orig: Origin | Vec2): Vec2 {\n\tswitch (orig) {\n\t\tcase \"topleft\": return vec2(-1, -1);\n\t\tcase \"top\": return vec2(0, -1);\n\t\tcase \"topright\": return vec2(1, -1);\n\t\tcase \"left\": return vec2(-1, 0);\n\t\tcase \"center\": return vec2(0, 0);\n\t\tcase \"right\": return vec2(1, 0);\n\t\tcase \"botleft\": return vec2(-1, 1);\n\t\tcase \"bot\": return vec2(0, 1);\n\t\tcase \"botright\": return vec2(1, 1);\n\t\tdefault: return orig;\n\t}\n}\n\nfunction gfxInit(gl: WebGLRenderingContext, gopt: GfxOpt): Gfx {\n\n\tconst gfx: GfxCtx = (() => {\n\n\t\tconst defShader = makeShader(DEF_VERT, DEF_FRAG);\n\t\tconst emptyTex = makeTex(\n\t\t\tnew ImageData(new Uint8ClampedArray([ 255, 255, 255, 255, ]), 1, 1)\n\t\t);\n\n\t\tconst c = gopt.background ?? rgb(0, 0, 0);\n\n\t\tgl.clearColor(c.r / 255, c.g / 255, c.b / 255, 1);\n\t\tgl.enable(gl.BLEND);\n\t\tgl.enable(gl.SCISSOR_TEST);\n\t\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n\t\tconst vbuf = gl.createBuffer();\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vbuf);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, QUEUE_COUNT * 4, gl.DYNAMIC_DRAW);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n\t\tconst ibuf = gl.createBuffer();\n\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibuf);\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, QUEUE_COUNT * 2, gl.DYNAMIC_DRAW);\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\t\t// a checkerboard texture\n\t\tconst bgTex = makeTex(\n\t\t\tnew ImageData(new Uint8ClampedArray([\n\t\t\t\t128, 128, 128, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t128, 128, 128, 255,\n\t\t\t]), 2, 2), {\n\t\t\t\twrap: \"repeat\",\n\t\t\t\tfilter: \"nearest\",\n\t\t\t},\n\t\t);\n\n\t\treturn {\n\t\t\tdrawCalls: 0,\n\t\t\tlastDrawCalls: 0,\n\t\t\tdefShader: defShader,\n\t\t\tcurShader: defShader,\n\t\t\tdefTex: emptyTex,\n\t\t\tcurTex: emptyTex,\n\t\t\tcurUniform: {},\n\t\t\tvbuf: vbuf,\n\t\t\tibuf: ibuf,\n\t\t\tvqueue: [],\n\t\t\tiqueue: [],\n\t\t\ttransform: mat4(),\n\t\t\ttransformStack: [],\n\t\t\tbackground: c,\n\t\t\tbgTex: bgTex,\n\t\t\twidth: gopt.width,\n\t\t\theight: gopt.height,\n\t\t};\n\n\t})();\n\n\tfunction powerOfTwo(n) {\n\t\treturn (Math.log(n) / Math.log(2)) % 1 === 0;\n\t}\n\n\tfunction makeTex(data: GfxTexData, opt: GfxTexOpt = {}): GfxTexture {\n\n\t\tconst id = gl.createTexture();\n\n\t\tgl.bindTexture(gl.TEXTURE_2D, id);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n\n\t\tconst filter = (() => {\n\t\t\tswitch (opt.filter ?? gopt.texFilter) {\n\t\t\t\tcase \"linear\": return gl.LINEAR;\n\t\t\t\tcase \"nearest\": return gl.NEAREST;\n\t\t\t\tdefault: return gl.NEAREST;\n\t\t\t}\n\t\t})();\n\n\t\tconst wrap = (() => {\n\t\t\tswitch (opt.wrap) {\n\t\t\t\tcase \"repeat\": return gl.REPEAT;\n\t\t\t\tcase \"clampToEdge\": return gl.CLAMP_TO_EDGE;\n\t\t\t\tdefault: return gl.CLAMP_TO_EDGE;\n\t\t\t}\n\t\t})();\n\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap);\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\n\t\treturn {\n\t\t\twidth: data.width,\n\t\t\theight: data.height,\n\t\t\tbind() {\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, id);\n\t\t\t},\n\t\t\tunbind() {\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\t\t},\n\t\t};\n\n\t}\n\n\tfunction makeShader(\n\t\tvertSrc: string | null = DEF_VERT,\n\t\tfragSrc: string | null = DEF_FRAG,\n\t): GfxShader {\n\n\t\tlet msg;\n\t\tconst vcode = VERT_TEMPLATE.replace(\"{{user}}\", vertSrc ?? DEF_VERT);\n\t\tconst fcode = FRAG_TEMPLATE.replace(\"{{user}}\", fragSrc ?? DEF_FRAG);\n\t\tconst vertShader = gl.createShader(gl.VERTEX_SHADER);\n\t\tconst fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n\n\t\tgl.shaderSource(vertShader, vcode);\n\t\tgl.shaderSource(fragShader, fcode);\n\t\tgl.compileShader(vertShader);\n\t\tgl.compileShader(fragShader);\n\n\t\tif ((msg = gl.getShaderInfoLog(vertShader))) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tif ((msg = gl.getShaderInfoLog(fragShader))) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tconst id = gl.createProgram();\n\n\t\tgl.attachShader(id, vertShader);\n\t\tgl.attachShader(id, fragShader);\n\n\t\tgl.bindAttribLocation(id, 0, \"a_pos\");\n\t\tgl.bindAttribLocation(id, 1, \"a_uv\");\n\t\tgl.bindAttribLocation(id, 2, \"a_color\");\n\n\t\tgl.linkProgram(id);\n\n\t\tif ((msg = gl.getProgramInfoLog(id))) {\n\t\t\t// for some reason on safari it always has a \"\\n\" msg\n\t\t\tif (msg !== \"\\n\") {\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\n\t\t\tbind() {\n\t\t\t\tgl.useProgram(id);\n\t\t\t},\n\n\t\t\tunbind() {\n\t\t\t\tgl.useProgram(null);\n\t\t\t},\n\n\t\t\tbindAttribs() {\n\t\t\t\tgl.vertexAttribPointer(0, 3, gl.FLOAT, false, STRIDE * 4, 0);\n\t\t\t\tgl.enableVertexAttribArray(0);\n\t\t\t\tgl.vertexAttribPointer(1, 2, gl.FLOAT, false, STRIDE * 4, 12);\n\t\t\t\tgl.enableVertexAttribArray(1);\n\t\t\t\tgl.vertexAttribPointer(2, 4, gl.FLOAT, false, STRIDE * 4, 20);\n\t\t\t\tgl.enableVertexAttribArray(2);\n\t\t\t},\n\n\t\t\tsend(uniform: Uniform) {\n\t\t\t\tthis.bind();\n\t\t\t\tfor (const name in uniform) {\n\t\t\t\t\tconst val = uniform[name];\n\t\t\t\t\tconst loc = gl.getUniformLocation(id, name);\n\t\t\t\t\tif (typeof val === \"number\") {\n\t\t\t\t\t\tgl.uniform1f(loc, val);\n\t\t\t\t\t} else if (isMat4(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniformMatrix4fv(loc, false, new Float32Array(val.m));\n\t\t\t\t\t} else if (isColor(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniform4f(loc, val.r, val.g, val.b, val.a);\n\t\t\t\t\t} else if (isVec3(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniform3f(loc, val.x, val.y, val.z);\n\t\t\t\t\t} else if (isVec2(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniform2f(loc, val.x, val.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.unbind();\n\t\t\t},\n\n\t\t};\n\n\t}\n\n\tfunction makeFont(\n\t\ttex: GfxTexture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t): GfxFont {\n\n\t\tconst cols = tex.width / gw;\n\t\tconst rows = tex.height / gh;\n\t\tconst qw = 1.0 / cols;\n\t\tconst qh = 1.0 / rows;\n\t\tconst map: Record<string, Vec2> = {};\n\t\tconst charMap = chars.split(\"\").entries();\n\n\t\tfor (const [i, ch] of charMap) {\n\t\t\tmap[ch] = vec2(\n\t\t\t\t(i % cols) * qw,\n\t\t\t\tMath.floor(i / cols) * qh,\n\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\ttex: tex,\n\t\t\tmap: map,\n\t\t\tqw: qw,\n\t\t\tqh: qh,\n\t\t};\n\n\t}\n\n\t// TODO: expose\n\tfunction drawRaw(\n\t\tverts: Vertex[],\n\t\tindices: number[],\n\t\ttex: GfxTexture = gfx.defTex,\n\t\tshader: GfxShader = gfx.defShader,\n\t\tuniform: Uniform = {},\n\t) {\n\n\t\ttex = tex ?? gfx.defTex;\n\t\tshader = shader ?? gfx.defShader;\n\n\t\t// flush on texture / shader change and overflow\n\t\tif (\n\t\t\ttex !== gfx.curTex\n\t\t\t|| shader !== gfx.curShader\n\t\t\t|| !deepEq(gfx.curUniform, uniform)\n\t\t\t|| gfx.vqueue.length + verts.length * STRIDE > QUEUE_COUNT\n\t\t\t|| gfx.iqueue.length + indices.length > QUEUE_COUNT\n\t\t) {\n\t\t\tflush();\n\t\t}\n\n\t\tgfx.curTex = tex;\n\t\tgfx.curShader = shader;\n\t\tgfx.curUniform = uniform;\n\n\t\tindices.forEach((i) => {\n\t\t\tgfx.iqueue.push(i + gfx.vqueue.length / STRIDE);\n\t\t});\n\n\t\tverts.forEach((v) => {\n\t\t\tconst pt = toNDC(gfx.transform.multVec2(v.pos.xy()));\n\t\t\tgfx.vqueue.push(\n\t\t\t\tpt.x, pt.y, v.pos.z,\n\t\t\t\tv.uv.x, v.uv.y,\n\t\t\t\tv.color.r / 255, v.color.g / 255, v.color.b / 255, v.opacity,\n\t\t\t);\n\t\t});\n\n\t}\n\n\tfunction flush() {\n\n\t\tif (\n\t\t\t!gfx.curTex\n\t\t\t|| !gfx.curShader\n\t\t\t|| gfx.vqueue.length === 0\n\t\t\t|| gfx.iqueue.length === 0\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tgfx.curShader.send(gfx.curUniform);\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, gfx.vbuf);\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(gfx.vqueue));\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gfx.ibuf);\n\t\tgl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, new Uint16Array(gfx.iqueue));\n\t\tgfx.curShader.bind();\n\t\tgfx.curShader.bindAttribs();\n\t\tgfx.curTex.bind();\n\t\tgl.drawElements(gl.TRIANGLES, gfx.iqueue.length, gl.UNSIGNED_SHORT, 0);\n\t\tgfx.curTex.unbind();\n\t\tgfx.curShader.unbind();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\t\tgfx.iqueue = [];\n\t\tgfx.vqueue = [];\n\n\t\tgfx.drawCalls++;\n\n\t}\n\n\tfunction frameStart() {\n\n\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\n\t\tif (!gopt.background) {\n\t\t\tdrawUVQuad({\n\t\t\t\twidth: width(),\n\t\t\t\theight: height(),\n\t\t\t\tquad: quad(\n\t\t\t\t\t0,\n\t\t\t\t\t0,\n\t\t\t\t\twidth() * scale() / BG_GRID_SIZE,\n\t\t\t\t\theight() * scale() / BG_GRID_SIZE,\n\t\t\t\t),\n\t\t\t\ttex: gfx.bgTex,\n\t\t\t})\n\t\t}\n\n\t\tgfx.drawCalls = 0;\n\t\tgfx.transformStack = [];\n\t\tgfx.transform = mat4();\n\n\t}\n\n\tfunction frameEnd() {\n\t\tflush();\n\t\tgfx.lastDrawCalls = gfx.drawCalls;\n\t}\n\n\tfunction drawCalls() {\n\t\treturn gfx.lastDrawCalls;\n\t}\n\n\tfunction toNDC(pt: Vec2): Vec2 {\n\t\treturn vec2(\n\t\t\tpt.x / width() * 2 - 1,\n\t\t\t-pt.y / height() * 2 + 1,\n\t\t);\n\t}\n\n\tfunction applyMatrix(m: Mat4) {\n\t\tgfx.transform = m.clone();\n\t}\n\n\tfunction pushTranslate(...args) {\n\t\tif (args[0] === undefined) return;\n\t\tconst p = vec2(...args);\n\t\tif (p.x === 0 && p.y === 0) return;\n\t\tgfx.transform = gfx.transform.translate(p);\n\t}\n\n\tfunction pushScale(...args) {\n\t\tif (args[0] === undefined) return;\n\t\tconst p = vec2(...args);\n\t\tif (p.x === 1 && p.y === 1) return;\n\t\tgfx.transform = gfx.transform.scale(p);\n\t}\n\n\tfunction pushRotateX(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateX(a);\n\t}\n\n\tfunction pushRotateY(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateY(a);\n\t}\n\n\tfunction pushRotateZ(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateZ(a);\n\t}\n\n\tfunction pushTransform() {\n\t\tgfx.transformStack.push(gfx.transform.clone());\n\t}\n\n\tfunction popTransform() {\n\t\tif (gfx.transformStack.length > 0) {\n\t\t\tgfx.transform = gfx.transformStack.pop();\n\t\t}\n\t}\n\n\t// draw a uv textured quad\n\tfunction drawUVQuad(opt: DrawUVQuadOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new Error(\"drawUVQuad() requires property \\\"width\\\" and \\\"height\\\".\");\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst w = opt.width;\n\t\tconst h = opt.height;\n\t\tconst origin = originPt(opt.origin || DEF_ORIGIN);\n\t\tconst offset = origin.scale(vec2(w, h).scale(-0.5));\n\t\tconst q = opt.quad || quad(0, 0, 1, 1);\n\t\tconst color = opt.color || rgb(255, 255, 255);\n\t\tconst opacity = opt.opacity ?? 1;\n\n\t\tpushTransform();\n\t\tpushTranslate(opt.pos);\n\t\tpushRotateZ(opt.angle);\n\t\tpushScale(opt.scale);\n\t\tpushTranslate(offset);\n\n\t\tdrawRaw([\n\t\t\t{\n\t\t\t\tpos: vec3(-w / 2, h / 2, 0),\n\t\t\t\tuv: vec2(opt.flipX ? q.x + q.w : q.x, opt.flipY ? q.y : q.y + q.h),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(-w / 2, -h / 2, 0),\n\t\t\t\tuv: vec2(opt.flipX ? q.x + q.w : q.x, opt.flipY ? q.y + q.h : q.y),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(w / 2, -h / 2, 0),\n\t\t\t\tuv: vec2(opt.flipX ? q.x : q.x + q.w, opt.flipY ? q.y + q.h : q.y),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(w / 2, h / 2, 0),\n\t\t\t\tuv: vec2(opt.flipX ? q.x : q.x + q.w, opt.flipY ? q.y : q.y + q.h),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t], [0, 1, 3, 1, 2, 3], opt.tex, opt.shader, opt.uniform);\n\n\t\tpopTransform();\n\n\t}\n\n\t// TODO: clean\n\tfunction drawTexture(\n\t\topt: DrawTextureOpt,\n\t) {\n\n\t\tif (!opt.tex) {\n\t\t\tthrow new Error(\"drawTexture() requires property \\\"tex\\\".\");\n\t\t}\n\n\t\tconst q = opt.quad ?? quad(0, 0, 1, 1);\n\t\tconst w = opt.tex.width * q.w;\n\t\tconst h = opt.tex.height * q.h;\n\t\tconst scale = vec2(1);\n\n\t\tif (opt.tiled) {\n\n\t\t\t// TODO: draw fract\n\t\t\tconst repX = Math.ceil((opt.width || w) / w);\n\t\t\tconst repY = Math.ceil((opt.height || h) / h);\n\t\t\tconst origin = originPt(opt.origin || DEF_ORIGIN).add(vec2(1, 1)).scale(0.5);\n\t\t\tconst offset = origin.scale(repX * w, repY * h);\n\n\t\t\t// TODO: rotation\n\t\t\tfor (let i = 0; i < repX; i++) {\n\t\t\t\tfor (let j = 0; j < repY; j++) {\n\t\t\t\t\tdrawUVQuad({\n\t\t\t\t\t\t...opt,\n\t\t\t\t\t\tpos: (opt.pos || vec2(0)).add(vec2(w * i, h * j)).sub(offset),\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tscale: scale.scale(opt.scale || vec2(1)),\n\t\t\t\t\t\ttex: opt.tex,\n\t\t\t\t\t\tquad: q,\n\t\t\t\t\t\twidth: w,\n\t\t\t\t\t\theight: h,\n\t\t\t\t\t\torigin: \"topleft\",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\n\t\t\t// TODO: should this ignore scale?\n\t\t\tif (opt.width && opt.height) {\n\t\t\t\tscale.x = opt.width / w;\n\t\t\t\tscale.y = opt.height / h;\n\t\t\t} else if (opt.width) {\n\t\t\t\tscale.x = opt.width / w;\n\t\t\t\tscale.y = scale.x;\n\t\t\t} else if (opt.height) {\n\t\t\t\tscale.y = opt.height / h;\n\t\t\t\tscale.x = scale.y;\n\t\t\t}\n\n\t\t\tdrawUVQuad({\n\t\t\t\t...opt,\n\t\t\t\t// @ts-ignore\n\t\t\t\tscale: scale.scale(opt.scale || vec2(1)),\n\t\t\t\ttex: opt.tex,\n\t\t\t\tquad: q,\n\t\t\t\twidth: w,\n\t\t\t\theight: h,\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t// generate vertices to form an arc\n\tfunction getArcPts(\n\t\tpos: Vec2,\n\t\tradiusX: number,\n\t\tradiusY: number,\n\t\tstart: number,\n\t\tend: number,\n\t\tres: number = 1,\n\t): Vec2[] {\n\n\t\t// normalize and turn start and end angles to radians\n\t\tstart = deg2rad(start % 360);\n\t\tend = deg2rad(end % 360);\n\t\tif (end <= start) end += Math.PI * 2;\n\n\t\t// TODO: better way to get this?\n\t\t// the number of vertices is sqrt(r1 + r2) * 3 * res with a minimum of 16\n\t\tconst nverts = Math.ceil(Math.max(Math.sqrt(radiusX + radiusY) * 3 * (res || 1), 16));\n\t\tconst step = (end - start) / nverts;\n\t\tconst pts = [];\n\n\t\t// calculate vertices\n\t\tfor (let a = start; a < end; a += step) {\n\t\t\tpts.push(pos.add(radiusX * Math.cos(a), radiusY * Math.sin(a)));\n\t\t}\n\n\t\t// doing this on the side due to possible floating point inaccuracy\n\t\tpts.push(pos.add(radiusX * Math.cos(end), radiusY * Math.sin(end)));\n\n\t\treturn pts;\n\n\t}\n\n\tfunction drawRect(opt: DrawRectOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new Error(\"drawRect() requires property \\\"width\\\" and \\\"height\\\".\");\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst w = opt.width;\n\t\tconst h = opt.height;\n\t\tconst origin = originPt(opt.origin || DEF_ORIGIN).add(1, 1);\n\t\tconst offset = origin.scale(vec2(w, h).scale(-0.5));\n\n\t\tlet pts = [\n\t\t\tvec2(0, 0),\n\t\t\tvec2(w, 0),\n\t\t\tvec2(w, h),\n\t\t\tvec2(0, h),\n\t\t];\n\n\t\t// TODO: drawPolygon should handle generic rounded corners\n\t\tif (opt.radius) {\n\n\t\t\t// maxium radius is half the shortest side\n\t\t\tconst r = Math.min(Math.min(w, h) / 2, opt.radius);\n\n\t\t\tpts = [\n\t\t\t\tvec2(r, 0),\n\t\t\t\tvec2(w - r, 0),\n\t\t\t\t...getArcPts(vec2(w - r, r), r, r, 270, 360),\n\t\t\t\tvec2(w, r),\n\t\t\t\tvec2(w, h - r),\n\t\t\t\t...getArcPts(vec2(w - r, h - r), r, r, 0, 90),\n\t\t\t\tvec2(w - r, h),\n\t\t\t\tvec2(r, h),\n\t\t\t\t...getArcPts(vec2(r, h - r), r, r, 90, 180),\n\t\t\t\tvec2(0, h - r),\n\t\t\t\tvec2(0, r),\n\t\t\t\t...getArcPts(vec2(r, r), r, r, 180, 270),\n\t\t\t];\n\n\t\t}\n\n\t\tdrawPolygon({ ...opt, offset, pts });\n\n\t}\n\n\tfunction drawLine(opt: DrawLineOpt) {\n\n\t\tconst { p1, p2 } = opt;\n\n\t\tif (!p1 || !p2) {\n\t\t\tthrow new Error(\"drawLine() requires properties \\\"p1\\\" and \\\"p2\\\".\");\n\t\t}\n\n\t\tconst w = opt.width || 1;\n\n\t\t// the displacement from the line end point to the corner point\n\t\tconst dis = p2.sub(p1).unit().normal().scale(w * 0.5);\n\n\t\t// calculate the 4 corner points of the line polygon\n\t\tconst verts = [\n\t\t\tp1.sub(dis),\n\t\t\tp1.add(dis),\n\t\t\tp2.add(dis),\n\t\t\tp2.sub(dis),\n\t\t].map((p) => ({\n\t\t\tpos: vec3(p.x, p.y, 0),\n\t\t\tuv: vec2(0),\n\t\t\tcolor: opt.color ?? rgb(),\n\t\t\topacity: opt.opacity ?? 1,\n\t\t}));\n\n\t\tdrawRaw(verts, [0, 1, 3, 1, 2, 3], gfx.defTex, opt.shader, opt.uniform);\n\n\t}\n\n\tfunction drawLines(opt: DrawLinesOpt) {\n\n\t\tconst pts = opt.pts;\n\n\t\tif (!pts) {\n\t\t\tthrow new Error(\"drawLines() requires property \\\"pts\\\".\");\n\t\t}\n\n\t\tif (pts.length < 2) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (opt.radius && pts.length >= 3) {\n\n\t\t\t// TODO: rounded vertices for arbitury polygonic shape\n\t\t\tlet minLen = pts[0].dist(pts[1]);\n\n\t\t\tfor (let i = 1; i < pts.length - 1; i++) {\n\t\t\t\tminLen = Math.min(pts[i].dist(pts[i + 1]), minLen);\n\t\t\t}\n\n\t\t\tconst radius = Math.min(opt.radius, minLen / 2);\n\n\t\t\tdrawLine({ ...opt, p1: pts[0], p2: pts[1], });\n\n\t\t\tfor (let i = 1; i < pts.length - 2; i++) {\n\t\t\t\tconst p1 = pts[i];\n\t\t\t\tconst p2 = pts[i + 1];\n\t\t\t\tdrawLine({\n\t\t\t\t\t...opt,\n\t\t\t\t\tp1: p1,\n\t\t\t\t\tp2: p2,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tdrawLine({ ...opt, p1: pts[pts.length - 2], p2: pts[pts.length - 1], });\n\n\t\t} else {\n\n\t\t\tfor (let i = 0; i < pts.length - 1; i++) {\n\t\t\t\tdrawLine({\n\t\t\t\t\t...opt,\n\t\t\t\t\tp1: pts[i],\n\t\t\t\t\tp2: pts[i + 1],\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction drawTriangle(opt: DrawTriangleOpt) {\n\t\tif (!opt.p1 || !opt.p2 || !opt.p3) {\n\t\t\tthrow new Error(\"drawPolygon() requires properties \\\"p1\\\", \\\"p2\\\" and \\\"p3\\\".\");\n\t\t}\n\t\treturn drawPolygon({\n\t\t\t...opt,\n\t\t\tpts: [opt.p1, opt.p2, opt.p3],\n\t\t});\n\t}\n\n\t// TODO: origin\n\tfunction drawCircle(opt: DrawCircleOpt) {\n\n\t\tif (!opt.radius) {\n\t\t\tthrow new Error(\"drawCircle() requires property \\\"radius\\\".\");\n\t\t}\n\n\t\tif (opt.radius === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tdrawEllipse({\n\t\t\t...opt,\n\t\t\tradiusX: opt.radius,\n\t\t\tradiusY: opt.radius,\n\t\t\tangle: 0,\n\t\t});\n\n\t}\n\n\t// TODO: use fan-like triangulation\n\tfunction drawEllipse(opt: DrawEllipseOpt) {\n\n\t\tif (opt.radiusX === undefined || opt.radiusY === undefined) {\n\t\t\tthrow new Error(\"drawEllipse() requires properties \\\"radiusX\\\" and \\\"radiusY\\\".\");\n\t\t}\n\n\t\tif (opt.radiusX === 0 || opt.radiusY === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tdrawPolygon({\n\t\t\t...opt,\n\t\t\tpts: getArcPts(\n\t\t\t\tvec2(0),\n\t\t\t\topt.radiusX,\n\t\t\t\topt.radiusY,\n\t\t\t\topt.start ?? 0,\n\t\t\t\topt.end ?? 360,\n\t\t\t\topt.resolution\n\t\t\t),\n\t\t\tradius: 0,\n\t\t});\n\n\t}\n\n\tfunction drawPolygon(opt: DrawPolygonOpt) {\n\n\t\tif (!opt.pts) {\n\t\t\tthrow new Error(\"drawPolygon() requires property \\\"pts\\\".\");\n\t\t}\n\n\t\tconst npts = opt.pts.length;\n\n\t\tif (npts < 3) {\n\t\t\treturn;\n\t\t}\n\n\t\tpushTransform();\n\t\tpushTranslate(opt.pos);\n\t\tpushScale(opt.scale);\n\t\tpushRotateZ(opt.angle);\n\t\tpushTranslate(opt.offset);\n\n\t\tif (opt.fill !== false) {\n\n\t\t\tconst color = opt.color ?? rgb();\n\n\t\t\tconst verts = opt.pts.map((pt) => ({\n\t\t\t\tpos: vec3(pt.x, pt.y, 0),\n\t\t\t\tuv: vec2(0, 0),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opt.opacity ?? 1,\n\t\t\t}));\n\n\t\t\t// TODO: better triangulation\n\t\t\tconst indices = [...Array(npts - 2).keys()]\n\t\t\t\t.map((n) => [0, n + 1, n + 2])\n\t\t\t\t.flat();\n\n\t\t\tdrawRaw(verts, opt.indices ?? indices, gfx.defTex, opt.shader, opt.uniform);\n\n\t\t}\n\n\t\tif (opt.outline) {\n\t\t\tdrawLines({\n\t\t\t\tpts: [ ...opt.pts, opt.pts[0] ],\n\t\t\t\tradius: opt.radius,\n\t\t\t\twidth: opt.outline.width,\n\t\t\t\tcolor: opt.outline.color,\n\t\t\t});\n\t\t}\n\n\t\tpopTransform();\n\n\t}\n\n\t// format text and return a list of chars with their calculated position\n\tfunction fmtText(opt: DrawTextOpt2): FormattedText {\n\n\t\tif (opt.text === undefined) {\n\t\t\tthrow new Error(\"fmtText() requires property \\\"text\\\".\");\n\t\t}\n\n\t\tconst font = opt.font;\n\t\tconst chars = (opt.text + \"\").split(\"\");\n\t\tconst gw = font.qw * font.tex.width;\n\t\tconst gh = font.qh * font.tex.height;\n\t\tconst size = opt.size || gh;\n\t\tconst scale = vec2(size / gh).scale(vec2(opt.scale || 1));\n\t\tconst cw = scale.x * gw;\n\t\tconst ch = scale.y * gh;\n\t\tlet curX = 0;\n\t\tlet th = ch;\n\t\tlet tw = 0;\n\t\tconst flines = [];\n\t\tlet curLine = [];\n\t\tlet lastSpace = null;\n\t\tlet cursor = 0;\n\n\t\twhile (cursor < chars.length) {\n\n\t\t\tlet char = chars[cursor];\n\n\t\t\t// check new line\n\t\t\tif (char === \"\\n\") {\n\t\t\t\t// always new line on '\\n'\n\t\t\t\tth += ch;\n\t\t\t\tcurX = 0;\n\t\t\t\tlastSpace = null;\n\t\t\t\tflines.push(curLine);\n\t\t\t\tcurLine = [];\n\t\t\t} else if ((opt.width ? (curX + cw > opt.width) : false)) {\n\t\t\t\t// new line on last word if width exceeds\n\t\t\t\tth += ch;\n\t\t\t\tcurX = 0;\n\t\t\t\tif (lastSpace != null) {\n\t\t\t\t\tcursor -= curLine.length - lastSpace;\n\t\t\t\t\tchar = chars[cursor];\n\t\t\t\t\tcurLine = curLine.slice(0, lastSpace);\n\t\t\t\t}\n\t\t\t\tlastSpace = null;\n\t\t\t\tflines.push(curLine);\n\t\t\t\tcurLine = [];\n\t\t\t}\n\n\t\t\t// push char\n\t\t\tif (char !== \"\\n\") {\n\t\t\t\tcurLine.push(char);\n\t\t\t\tcurX += cw;\n\t\t\t\tif (char === \" \") {\n\t\t\t\t\tlastSpace = curLine.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttw = Math.max(tw, curX);\n\t\t\tcursor++;\n\n\t\t}\n\n\t\tflines.push(curLine);\n\n\t\tif (opt.width) {\n\t\t\ttw = opt.width;\n\t\t}\n\n\t\t// whole text offset\n\t\tconst fchars = [];\n\t\tconst pos = vec2(opt.pos || 0);\n\t\tconst offset = originPt(opt.origin || DEF_ORIGIN).scale(0.5);\n\t\t// this math is complicated i forgot how it works instantly\n\t\tconst ox = -offset.x * cw - (offset.x + 0.5) * (tw - cw);\n\t\tconst oy = -offset.y * ch - (offset.y + 0.5) * (th - ch);\n\t\tlet idx = 0;\n\n\t\tflines.forEach((line, ln) => {\n\n\t\t\t// line offset\n\t\t\tconst oxl = (tw - line.length * cw) * (offset.x + 0.5);\n\n\t\t\tline.forEach((char, cn) => {\n\t\t\t\tconst qpos = font.map[char];\n\t\t\t\tconst x = cn * cw;\n\t\t\t\tconst y = ln * ch;\n\t\t\t\tidx += 1;\n\t\t\t\tif (qpos) {\n\t\t\t\t\tconst fchar = {\n\t\t\t\t\t\ttex: font.tex,\n\t\t\t\t\t\tquad: quad(qpos.x, qpos.y, font.qw, font.qh),\n\t\t\t\t\t\tch: char,\n\t\t\t\t\t\tpos: vec2(pos.x + x + ox + oxl, pos.y + y + oy),\n\t\t\t\t\t\topacity: opt.opacity,\n\t\t\t\t\t\tcolor: opt.color ?? rgb(255, 255, 255),\n\t\t\t\t\t\torigin: opt.origin,\n\t\t\t\t\t\tscale: scale,\n\t\t\t\t\t\tangle: 0,\n\t\t\t\t\t}\n\t\t\t\t\tif (opt.transform) {\n\t\t\t\t\t\tconst tr = opt.transform(idx, char) ?? {};\n\t\t\t\t\t\tif (tr.pos) fchar.pos = fchar.pos.add(tr.pos);\n\t\t\t\t\t\tif (tr.scale) fchar.scale = fchar.scale.scale(vec2(tr.scale));\n\t\t\t\t\t\tif (tr.angle) fchar.angle += tr.angle;\n\t\t\t\t\t\tif (tr.color) fchar.color = fchar.color.mult(tr.color);\n\t\t\t\t\t\tif (tr.opacity) fchar.opacity *= tr.opacity;\n\t\t\t\t\t}\n\t\t\t\t\tfchars.push(fchar);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn {\n\t\t\twidth: tw,\n\t\t\theight: th,\n\t\t\tchars: fchars,\n\t\t};\n\n\t}\n\n\tfunction drawText(opt: DrawTextOpt2) {\n\t\tdrawFmtText(fmtText(opt));\n\t}\n\n\t// TODO: rotation\n\tfunction drawFmtText(ftext: FormattedText) {\n\t\tfor (const ch of ftext.chars) {\n\t\t\tdrawUVQuad({\n\t\t\t\ttex: ch.tex,\n\t\t\t\twidth: ch.tex.width * ch.quad.w,\n\t\t\t\theight: ch.tex.height * ch.quad.h,\n\t\t\t\tpos: ch.pos,\n\t\t\t\tscale: ch.scale,\n\t\t\t\tangle: ch.angle,\n\t\t\t\tcolor: ch.color,\n\t\t\t\topacity: ch.opacity,\n\t\t\t\tquad: ch.quad,\n\t\t\t\t// TODO: topleft\n\t\t\t\torigin: \"center\",\n\t\t\t});\n\t\t}\n\t}\n\n//  \twindow.addEventListener(\"resize\", updateSize);\n\n\tfunction updateSize() {\n\t\tif (gopt.width && gopt.height && gopt.stretch) {\n\t\t\tif (gopt.letterbox) {\n\t\t\t\t// TODO: not working\n\t\t\t\tconst r1 = gl.drawingBufferWidth / gl.drawingBufferHeight;\n\t\t\t\tconst r2 = gopt.width / gopt.height;\n\t\t\t\tif (r1 > r2) {\n\t\t\t\t\tgfx.width = gopt.height * r1;\n\t\t\t\t\tgfx.height = gopt.height;\n\t\t\t\t\tconst sw = gl.drawingBufferHeight * r2;\n\t\t\t\t\tconst sh = gl.drawingBufferHeight;\n\t\t\t\t\tconst x = (gl.drawingBufferWidth - sw) / 2;\n\t\t\t\t\tgl.scissor(x, 0, sw, sh);\n\t\t\t\t\tgl.viewport(x, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t\t\t} else {\n\t\t\t\t\tgfx.width = gopt.width;\n\t\t\t\t\tgfx.height = gopt.width / r1;\n\t\t\t\t\tconst sw = gl.drawingBufferWidth;\n\t\t\t\t\tconst sh = gl.drawingBufferWidth / r2;\n\t\t\t\t\tconst y = (gl.drawingBufferHeight - sh) / 2;\n\t\t\t\t\tgl.scissor(0, gl.drawingBufferHeight - sh - y, sw, sh);\n\t\t\t\t\tgl.viewport(0, -y, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgfx.width = gopt.width;\n\t\t\t\tgfx.height = gopt.height;\n\t\t\t\tgl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t\t}\n\t\t} else {\n\t\t\tgfx.width = gl.drawingBufferWidth / scale();\n\t\t\tgfx.height = gl.drawingBufferHeight / scale();\n\t\t\tgl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t}\n\t}\n\n\t// get game width\n\tfunction width(): number {\n\t\treturn gfx.width;\n\t}\n\n\t// get game height\n\tfunction height(): number {\n\t\treturn gfx.height;\n\t}\n\n\tfunction scale(): number {\n\t\treturn gopt.scale ?? 1;\n\t}\n\n\tfunction background(): Color {\n\t\treturn gfx.background.clone();\n\t}\n\n\tupdateSize();\n\tframeStart();\n\tframeEnd();\n\n\treturn {\n\t\twidth,\n\t\theight,\n\t\tscale,\n\t\tmakeTex,\n\t\tmakeShader,\n\t\tmakeFont,\n\t\tdrawTexture,\n\t\tdrawText,\n\t\tdrawFmtText,\n\t\tdrawRect,\n\t\tdrawLine,\n\t\tdrawLines,\n\t\tdrawTriangle,\n\t\tdrawCircle,\n\t\tdrawEllipse,\n\t\tdrawPolygon,\n\t\tdrawUVQuad,\n\t\tfmtText,\n\t\tframeStart,\n\t\tframeEnd,\n\t\tpushTranslate,\n\t\tpushScale,\n\t\tpushRotateX,\n\t\tpushRotateY,\n\t\tpushRotateZ,\n\t\tpushTransform,\n\t\tpopTransform,\n\t\tapplyMatrix,\n\t\tdrawCalls,\n\t\tbackground,\n\t};\n\n}\n\nexport {\n\tGfx,\n\toriginPt,\n\tgfxInit,\n};\n","import {\n\tvec2,\n} from \"./math\";\n\nimport {\n\tKey,\n\tMouseButton,\n\tVec2,\n\tCursor,\n} from \"./types\";\n\ntype ButtonState =\n\t\"up\"\n\t| \"pressed\"\n\t| \"rpressed\"\n\t| \"down\"\n\t| \"released\"\n\t;\n\ntype AppOpt = {\n\twidth?: number,\n\theight?: number,\n\tstretch?: boolean,\n\tscale?: number,\n\tcrisp?: boolean,\n\tcanvas?: HTMLCanvasElement,\n\troot?: HTMLElement,\n\ttouchToMouse?: boolean,\n\taudioCtx?: AudioContext,\n};\n\ntype AppCtx = {\n\tcanvas: HTMLCanvasElement,\n\tmousePos: Vec2,\n\tmouseDeltaPos: Vec2,\n\tmouseStates: Record<string, ButtonState>,\n\tkeyStates: Record<string, ButtonState>,\n\tcharInputted: string[],\n\tisMouseMoved: boolean,\n\ttime: number,\n\tdt: number,\n\trealTime: number,\n\tskipTime: boolean,\n\tscale: number,\n\tisTouch: boolean,\n\tloopID: number | null,\n\tstopped: boolean,\n\tfps: number,\n\tfpsBuf: number[],\n\tfpsTimer: number,\n\tisKeyPressed: boolean,\n\tisKeyPressedRepeat: boolean,\n};\n\ntype App = {\n\tgl: WebGLRenderingContext,\n\tmousePos(): Vec2,\n\tmouseDeltaPos(): Vec2,\n\tisKeyDown(k?: Key): boolean,\n\tisKeyPressed(k?: Key): boolean,\n\tisKeyPressedRepeat(k?: Key): boolean,\n\tisKeyReleased(k?: Key): boolean,\n\tisMouseDown(m?: MouseButton): boolean,\n\tisMousePressed(m?: MouseButton): boolean,\n\tisMouseReleased(m?: MouseButton): boolean,\n\tisMouseMoved(m?: MouseButton): boolean,\n\tcharInputted(): string[],\n\tcursor(c?: Cursor): Cursor,\n\tfullscreen(f?: boolean): void,\n\tisFullscreen(): boolean,\n\tdt(): number,\n\tfps(): number,\n\ttime(): number,\n\tscreenshot(): string,\n\trun(f: () => void),\n\tquit(),\n\tisFocused(): boolean,\n\tfocus(),\n\tcanvas: HTMLCanvasElement,\n\tisTouch: boolean,\n\tscale: number,\n};\n\nfunction processBtnState(s: ButtonState): ButtonState {\n\tif (s === \"pressed\" || s === \"rpressed\") {\n\t\treturn \"down\";\n\t}\n\tif (s === \"released\") {\n\t\treturn \"up\";\n\t}\n\treturn s;\n}\n\nfunction enterFullscreen(el: HTMLElement) {\n\tif (el.requestFullscreen) el.requestFullscreen();\n\t// @ts-ignore\n\telse if (el.webkitRequestFullscreen) el.webkitRequestFullscreen();\n};\n\nfunction exitFullscreen() {\n\tif (document.exitFullscreen) document.exitFullscreen();\n\t// @ts-ignore\n\telse if (document.webkitExitFullScreen) document.webkitExitFullScreen();\n};\n\nfunction getFullscreenElement(): Element | void {\n\treturn document.fullscreenElement\n\t\t// @ts-ignore\n\t\t|| document.webkitFullscreenElement\n\t\t;\n};\n\nfunction appInit(gopt: AppOpt = {}): App {\n\n    const root = gopt.root ?? document.body;\n\n\tif (root === document.body) {\n\t\tdocument.body.style[\"width\"] = \"100%\";\n\t\tdocument.body.style[\"height\"] = \"100%\";\n\t\tdocument.body.style[\"margin\"] = \"0px\";\n\t\tdocument.documentElement.style[\"width\"] = \"100%\";\n\t\tdocument.documentElement.style[\"height\"] = \"100%\";\n\t}\n\n\tconst app: AppCtx = {\n\t\tcanvas: gopt.canvas ?? (() => {\n\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\troot.appendChild(canvas);\n\t\t\treturn canvas;\n\t\t})(),\n\t\tkeyStates: {},\n\t\tcharInputted: [],\n\t\tisMouseMoved: false,\n\t\tisKeyPressed: false,\n\t\tisKeyPressedRepeat: false,\n\t\tmouseStates: {},\n\t\tmousePos: vec2(0, 0),\n\t\tmouseDeltaPos: vec2(0, 0),\n\t\ttime: 0,\n\t\trealTime: 0,\n\t\tskipTime: false,\n\t\tdt: 0.0,\n\t\tscale: gopt.scale ?? 1,\n\t\tisTouch: false,\n\t\tloopID: null,\n\t\tstopped: false,\n\t\tfps: 0,\n\t\tfpsBuf: [],\n\t\tfpsTimer: 0,\n\t};\n\n\tconst keyMap = {\n\t\t\"ArrowLeft\": \"left\",\n\t\t\"ArrowRight\": \"right\",\n\t\t\"ArrowUp\": \"up\",\n\t\t\"ArrowDown\": \"down\",\n\t\t\" \": \"space\",\n\t};\n\n\tconst preventDefaultKeys = [\n\t\t\"space\",\n\t\t\"left\",\n\t\t\"right\",\n\t\t\"up\",\n\t\t\"down\",\n\t\t\"tab\",\n\t\t\"f1\",\n\t\t\"f2\",\n\t\t\"f3\",\n\t\t\"f4\",\n\t\t\"f5\",\n\t\t\"f6\",\n\t\t\"f7\",\n\t\t\"f8\",\n\t\t\"f9\",\n\t\t\"f10\",\n\t\t\"f11\",\n\t\t\"s\",\n\t];\n\n\tif (gopt.width && gopt.height && !gopt.stretch) {\n\t\tapp.canvas.width = gopt.width * app.scale;\n\t\tapp.canvas.height = gopt.height * app.scale;\n\t} else {\n\t\tapp.canvas.width = app.canvas.parentElement.offsetWidth;\n\t\tapp.canvas.height = app.canvas.parentElement.offsetHeight;\n\t}\n\n\tconst styles = [\n\t\t\"outline: none\",\n\t\t\"cursor: default\",\n\t];\n\n\tif (gopt.crisp) {\n\t\tstyles.push(\"image-rendering: pixelated\");\n\t\tstyles.push(\"image-rendering: crisp-edges\");\n\t}\n\n\t// @ts-ignore\n\tapp.canvas.style = styles.join(\";\");\n\tapp.canvas.setAttribute(\"tabindex\", \"0\");\n\n\tconst gl = app.canvas\n\t\t.getContext(\"webgl\", {\n\t\t\tantialias: true,\n\t\t\tdepth: true,\n\t\t\tstencil: true,\n\t\t\talpha: true,\n\t\t\tpreserveDrawingBuffer: true,\n\t\t});\n\n\tapp.isTouch = (\"ontouchstart\" in window) || navigator.maxTouchPoints > 0;\n\n\tapp.canvas.addEventListener(\"mousemove\", (e) => {\n\t\tif (isFullscreen()) {\n\t\t\t// in fullscreen mode browser adds letter box to preserve original canvas aspect ratio, but won't give us the transformed mouse position\n\t\t\t// TODO\n\t\t\tapp.mousePos = vec2(e.offsetX, e.offsetY).scale(1 / app.scale);\n\t\t} else {\n\t\t\tapp.mousePos = vec2(e.offsetX, e.offsetY).scale(1 / app.scale);\n\t\t}\n\t\tapp.mouseDeltaPos = vec2(e.movementX, e.movementY).scale(1 / app.scale);\n\t\tapp.isMouseMoved = true;\n\t});\n\n\t// according to https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n\tconst mouseButtons = [\n\t\t\"left\",\n\t\t\"middle\",\n\t\t\"right\",\n\t\t\"back\",\n\t\t\"forward\",\n\t];\n\n\tapp.canvas.addEventListener(\"mousedown\", (e) => {\n\t\tconst m = mouseButtons[e.button];\n\t\tif (m) {\n\t\t\tapp.mouseStates[m] = \"pressed\";\n\t\t}\n\t});\n\n\tapp.canvas.addEventListener(\"mouseup\", (e) => {\n\t\tconst m = mouseButtons[e.button];\n\t\tif (m) {\n\t\t\tapp.mouseStates[m] = \"released\";\n\t\t}\n\t});\n\n\tapp.canvas.addEventListener(\"keydown\", (e) => {\n\n\t\tconst k = keyMap[e.key] || e.key.toLowerCase();\n\n\t\tif (preventDefaultKeys.includes(k)) {\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tif (k.length === 1) {\n\t\t\tapp.charInputted.push(e.key);\n\t\t}\n\n\t\tif (k === \"space\") {\n\t\t\tapp.charInputted.push(\" \");\n\t\t}\n\n\t\tif (e.repeat) {\n\t\t\tapp.isKeyPressedRepeat = true;\n\t\t\tapp.keyStates[k] = \"rpressed\";\n\t\t} else {\n\t\t\tapp.isKeyPressed = true;\n\t\t\tapp.keyStates[k] = \"pressed\";\n\t\t}\n\n\t});\n\n\tapp.canvas.addEventListener(\"keyup\", (e: KeyboardEvent) => {\n\t\tconst k = keyMap[e.key] || e.key.toLowerCase();\n\t\tapp.keyStates[k] = \"released\";\n\t});\n\n\tapp.canvas.addEventListener(\"touchstart\", (e) => {\n\t\tif (!gopt.touchToMouse) return;\n\t\t// disable long tap context menu\n\t\te.preventDefault();\n\t\tconst t = e.touches[0];\n\t\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\t\tapp.mouseStates[\"left\"] = \"pressed\";\n\t});\n\n\tapp.canvas.addEventListener(\"touchmove\", (e) => {\n\t\tif (!gopt.touchToMouse) return;\n\t\t// disable scrolling\n\t\te.preventDefault();\n\t\tconst t = e.touches[0];\n\t\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\t\tapp.isMouseMoved = true;\n\t});\n\n\tapp.canvas.addEventListener(\"touchend\", (e) => {\n\t\tif (!gopt.touchToMouse) return;\n\t\tapp.mouseStates[\"left\"] = \"released\";\n\t});\n\n\tapp.canvas.addEventListener(\"touchcancel\", (e) => {\n\t\tif (!gopt.touchToMouse) return;\n\t\tapp.mouseStates[\"left\"] = \"released\";\n\t});\n\n\tapp.canvas.addEventListener(\"contextmenu\", function (e) {\n\t\te.preventDefault();\n\t});\n\n\tdocument.addEventListener(\"visibilitychange\", () => {\n\t\tswitch (document.visibilityState) {\n\t\t\tcase \"visible\":\n\t\t\t\t// prevent a surge of dt() when switch back after the tab being hidden for a while\n\t\t\t\tapp.skipTime = true;\n\t\t\t\t// TODO: don't resume if debug.paused\n\t\t\t\tgopt.audioCtx?.resume();\n\t\t\t\tbreak;\n\t\t\tcase \"hidden\":\n\t\t\t\tgopt.audioCtx?.suspend();\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\t// TODO: not quite working\n//  \twindow.addEventListener(\"resize\", () => {\n//  \t\tif (!(gopt.width && gopt.height && !gopt.stretch)) {\n//  \t\t\tapp.canvas.width = app.canvas.parentElement.offsetWidth;\n//  \t\t\tapp.canvas.height = app.canvas.parentElement.offsetHeight;\n//  \t\t}\n//  \t});\n\n\tfunction mousePos(): Vec2 {\n\t\treturn app.mousePos.clone();\n\t}\n\n\tfunction mouseDeltaPos(): Vec2 {\n\t\treturn app.mouseDeltaPos.clone();\n\t}\n\n\tfunction isMousePressed(m = \"left\"): boolean {\n\t\treturn app.mouseStates[m] === \"pressed\";\n\t}\n\n\tfunction isMouseDown(m = \"left\"): boolean {\n\t\treturn app.mouseStates[m] === \"pressed\" || app.mouseStates[m] === \"down\";\n\t}\n\n\tfunction isMouseReleased(m = \"left\"): boolean {\n\t\treturn app.mouseStates[m] === \"released\";\n\t}\n\n\tfunction isMouseMoved(): boolean {\n\t\treturn app.isMouseMoved;\n\t}\n\n\tfunction isKeyPressed(k?: string): boolean {\n\t\tif (k === undefined) {\n\t\t\treturn app.isKeyPressed;\n\t\t} else {\n\t\t\treturn app.keyStates[k] === \"pressed\";\n\t\t}\n\t}\n\n\tfunction isKeyPressedRepeat(k: string): boolean {\n\t\tif (k === undefined) {\n\t\t\treturn app.isKeyPressedRepeat;\n\t\t} else {\n\t\t\treturn app.keyStates[k] === \"pressed\" || app.keyStates[k] === \"rpressed\";\n\t\t}\n\t}\n\n\tfunction isKeyDown(k: string): boolean {\n\t\treturn app.keyStates[k] === \"pressed\"\n\t\t\t|| app.keyStates[k] === \"rpressed\"\n\t\t\t|| app.keyStates[k] === \"down\";\n\t}\n\n\tfunction isKeyReleased(k: string): boolean {\n\t\treturn app.keyStates[k] === \"released\";\n\t}\n\n\tfunction charInputted(): string[] {\n\t\treturn [...app.charInputted];\n\t}\n\n\t// get delta time between last frame\n\tfunction dt(): number {\n\t\treturn app.dt;\n\t}\n\n\t// get current running time\n\tfunction time(): number {\n\t\treturn app.time;\n\t}\n\n\tfunction fps(): number {\n\t\treturn app.fps;\n\t}\n\n\t// get a base64 png image of canvas\n\tfunction screenshot(): string {\n\t\treturn app.canvas.toDataURL();\n\t}\n\n\t// TODO: custom cursor\n\tfunction cursor(c?: Cursor): Cursor {\n\t\tif (c) {\n\t\t\tapp.canvas.style.cursor = c;\n\t\t}\n\t\treturn app.canvas.style.cursor;\n\t}\n\n\tfunction fullscreen(f: boolean = true) {\n\t\tif (f) {\n\t\t\tenterFullscreen(app.canvas);\n\t\t} else {\n\t\t\texitFullscreen();\n\t\t}\n\t}\n\n\tfunction isFullscreen(): boolean {\n\t\treturn Boolean(getFullscreenElement());\n\t}\n\n\tfunction run(f: () => void) {\n\n\t\tconst frame = (t: number) => {\n\n\t\t\tif (document.visibilityState !== \"visible\") {\n\t\t\t\tapp.loopID = requestAnimationFrame(frame);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst realTime = t / 1000;\n\t\t\tconst realDt = realTime - app.realTime;\n\n\t\t\tapp.realTime = realTime;\n\n\t\t\tif (!app.skipTime) {\n\t\t\t\tapp.dt = realDt;\n\t\t\t\tapp.time += app.dt;\n\t\t\t\tapp.fpsBuf.push(1 / app.dt);\n\t\t\t\tapp.fpsTimer += app.dt;\n\t\t\t\tif (app.fpsTimer >= 1) {\n\t\t\t\t\tapp.fpsTimer = 0;\n\t\t\t\t\tapp.fps = Math.round(app.fpsBuf.reduce((a, b) => a + b) / app.fpsBuf.length);\n\t\t\t\t\tapp.fpsBuf = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tapp.skipTime = false;\n\n\t\t\tf();\n\n\t\t\tfor (const k in app.keyStates) {\n\t\t\t\tapp.keyStates[k] = processBtnState(app.keyStates[k]);\n\t\t\t}\n\n\t\t\tfor (const m in app.mouseStates) {\n\t\t\t\tapp.mouseStates[m] = processBtnState(app.mouseStates[m]);\n\t\t\t}\n\n\t\t\tapp.charInputted = [];\n\t\t\tapp.isMouseMoved = false;\n\t\t\tapp.isKeyPressed = false;\n\t\t\tapp.isKeyPressedRepeat = false;\n\t\t\tapp.loopID = requestAnimationFrame(frame);\n\n\t\t};\n\n\t\tapp.stopped = false;\n\t\tapp.loopID = requestAnimationFrame(frame);\n\n\t}\n\n\tfunction quit() {\n\t\tcancelAnimationFrame(app.loopID);\n\t\tapp.stopped = true;\n\t}\n\n\treturn {\n\t\tgl,\n\t\tmousePos,\n\t\tmouseDeltaPos,\n\t\tisKeyDown,\n\t\tisKeyPressed,\n\t\tisKeyPressedRepeat,\n\t\tisKeyReleased,\n\t\tisMouseDown,\n\t\tisMousePressed,\n\t\tisMouseReleased,\n\t\tisMouseMoved,\n\t\tcharInputted,\n\t\tcursor,\n\t\tdt,\n\t\ttime,\n\t\tfps,\n\t\tscreenshot,\n\t\trun,\n\t\tquit,\n\t\tisFocused: () => document.activeElement === app.canvas,\n\t\tfocus: () => app.canvas.focus(),\n\t\tcanvas: app.canvas,\n\t\tisTouch: app.isTouch,\n\t\tscale: app.scale,\n\t\tfullscreen,\n\t\tisFullscreen,\n\t};\n\n}\n\nexport {\n\tApp,\n\tappInit,\n};\n","// TODO: onend event\n\nimport {\n\tclamp,\n} from \"./math\";\n\nimport {\n\tSoundData,\n\tAudioPlay,\n\tAudioPlayOpt,\n} from \"./types\";\n\ntype Audio = {\n\tctx: AudioContext,\n\tmasterNode: GainNode,\n\tvolume(v: number): number,\n\tplay(snd: SoundData, opt?: AudioPlayOpt): AudioPlay,\n\tburp(opt?: AudioPlayOpt): AudioPlay,\n};\n\nconst MIN_GAIN = 0;\nconst MAX_GAIN = 3;\nconst MIN_SPEED = 0;\nconst MAX_SPEED = 3;\nconst MIN_DETUNE = -1200;\nconst MAX_DETUNE = 1200;\n\n// @ts-ignore\nimport burpBytes from \"./burp.mp3\";\n\nfunction audioInit(): Audio {\n\t// TODO handle audio unavailable\n\tconst ctx = new (window.AudioContext || (window as any).webkitAudioContext)() as AudioContext\n\tconst masterNode = ctx.createGain();\n\tmasterNode.connect(ctx.destination);\n\n\n\tconst burpSnd = {\n\t\tbuf: new AudioBuffer({\n\t\t\tlength: 1,\n\t\t\tnumberOfChannels: 1,\n\t\t\tsampleRate: 44100\n\t\t}),\n\t};\n\n\tctx.decodeAudioData(burpBytes.buffer.slice(0), (buf) => {\n\t\tburpSnd.buf = buf;\n\t}, () => {\n\t\tthrow new Error(\"failed to make burp\")\n\t});\n\n\t// get / set master volume\n\tfunction volume(v?: number): number {\n\t\tif (v !== undefined) {\n\t\t\tmasterNode.gain.value = clamp(v, MIN_GAIN, MAX_GAIN);\n\t\t}\n\t\treturn masterNode.gain.value;\n\t}\n\n\t// plays a sound, returns a control handle\n\tfunction play(\n\t\tsnd: SoundData,\n\t\topt: AudioPlayOpt = {\n\t\t\tloop: false,\n\t\t\tvolume: 1,\n\t\t\tspeed: 1,\n\t\t\tdetune: 0,\n\t\t\tseek: 0,\n\t\t},\n\t): AudioPlay {\n\n\t\tlet stopped = false;\n\t\tlet srcNode = ctx.createBufferSource();\n\n\t\tsrcNode.buffer = snd.buf;\n\t\tsrcNode.loop = opt.loop ? true : false;\n\n\t\tconst gainNode = ctx.createGain();\n\n\t\tsrcNode.connect(gainNode);\n\t\tgainNode.connect(masterNode);\n\n\t\tconst pos = opt.seek ?? 0;\n\n\t\tsrcNode.start(0, pos);\n\n\t\tlet startTime = ctx.currentTime - pos;\n\t\tlet stopTime: number | null = null;\n\n\t\tconst handle = {\n\n\t\t\tstop() {\n\t\t\t\tif (stopped) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.pause();\n\t\t\t\tstartTime = ctx.currentTime;\n\t\t\t},\n\n\t\t\tplay(seek?: number) {\n\n\t\t\t\tif (!stopped) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst oldNode = srcNode;\n\n\t\t\t\tsrcNode = ctx.createBufferSource();\n\t\t\t\tsrcNode.buffer = oldNode.buffer;\n\t\t\t\tsrcNode.loop = oldNode.loop;\n\t\t\t\tsrcNode.playbackRate.value = oldNode.playbackRate.value;\n\n\t\t\t\tif (srcNode.detune) {\n\t\t\t\t\tsrcNode.detune.value = oldNode.detune.value;\n\t\t\t\t}\n\n\t\t\t\tsrcNode.connect(gainNode);\n\n\t\t\t\tconst pos = seek ?? this.time();\n\n\t\t\t\tsrcNode.start(0, pos);\n\t\t\t\tstartTime = ctx.currentTime - pos;\n\t\t\t\tstopped = false;\n\t\t\t\tstopTime = null;\n\n\t\t\t},\n\n\t\t\tpause() {\n\t\t\t\tif (stopped) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tsrcNode.stop();\n\t\t\t\tstopped = true;\n\t\t\t\tstopTime = ctx.currentTime;\n\t\t\t},\n\n\t\t\tisPaused(): boolean {\n\t\t\t\treturn stopped;\n\t\t\t},\n\n\t\t\tpaused(): boolean {\n\t\t\t\treturn this.isPaused();\n\t\t\t},\n\n\t\t\tisStopped(): boolean {\n\t\t\t\treturn stopped;\n\t\t\t},\n\n\t\t\tstopped(): boolean {\n\t\t\t\treturn this.isStopped();\n\t\t\t},\n\n\t\t\t// TODO: affect time()\n\t\t\tspeed(val?: number): number {\n\t\t\t\tif (val !== undefined) {\n\t\t\t\t\tsrcNode.playbackRate.value = clamp(val, MIN_SPEED, MAX_SPEED);\n\t\t\t\t}\n\t\t\t\treturn srcNode.playbackRate.value;\n\t\t\t},\n\n\t\t\tdetune(val?: number): number {\n\t\t\t\tif (!srcNode.detune) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif (val !== undefined) {\n\t\t\t\t\tsrcNode.detune.value = clamp(val, MIN_DETUNE, MAX_DETUNE);\n\t\t\t\t}\n\t\t\t\treturn srcNode.detune.value;\n\t\t\t},\n\n\t\t\tvolume(val?: number): number {\n\t\t\t\tif (val !== undefined) {\n\t\t\t\t\tgainNode.gain.value = clamp(val, MIN_GAIN, MAX_GAIN);\n\t\t\t\t}\n\t\t\t\treturn gainNode.gain.value;\n\t\t\t},\n\n\t\t\tloop() {\n\t\t\t\tsrcNode.loop = true;\n\t\t\t},\n\n\t\t\tunloop() {\n\t\t\t\tsrcNode.loop = false;\n\t\t\t},\n\n\t\t\tduration(): number {\n\t\t\t\treturn snd.buf.duration;\n\t\t\t},\n\n\t\t\ttime(): number {\n\t\t\t\tif (stopped) {\n\t\t\t\t\treturn stopTime - startTime;\n\t\t\t\t} else {\n\t\t\t\t\treturn ctx.currentTime - startTime;\n\t\t\t\t}\n\t\t\t},\n\n\t\t};\n\n\t\thandle.speed(opt.speed);\n\t\thandle.detune(opt.detune);\n\t\thandle.volume(opt.volume);\n\n\t\treturn handle;\n\n\t}\n\n\tfunction burp(opt?: AudioPlayOpt): AudioPlay {\n\t\treturn play(burpSnd, opt);\n\t}\n\n\treturn {\n\t\tctx,\n\t\tmasterNode,\n\t\tvolume,\n\t\tplay,\n\t\tburp,\n\t};\n\n}\n\nexport {\n\tAudio,\n\taudioInit,\n};\n","import {\n\tquad,\n} from \"./math\";\n\nimport {\n\tAudio,\n} from \"./audio\";\n\nimport {\n\tGfx,\n} from \"./gfx\";\n\nimport {\n\tSpriteData,\n\tSoundData,\n\tFontData,\n\tShaderData,\n\tSpriteLoadSrc,\n\tSpriteLoadOpt,\n\tSpriteAtlasData,\n\tFontLoadOpt,\n\tQuad,\n\tGfxTexData,\n} from \"./types\";\n\n// @ts-ignore\nimport apl386Src from \"./apl386.png\";\n// @ts-ignore\nimport apl386oSrc from \"./apl386o.png\";\n// @ts-ignore\nimport sinkSrc from \"./sink.png\";\n// @ts-ignore\nimport sinkoSrc from \"./sinko.png\";\n// @ts-ignore\nimport beanSrc from \"./bean.png\";\n\ntype AssetsOpt = {\n\terrHandler?: (err: string) => void,\n};\n\ntype LoaderID = number;\n\ntype AssetsCtx = {\n\tlastLoaderID: LoaderID,\n\tloadRoot: string,\n\t// TODO: just use a counter?\n\tloaders: Record<number, boolean>,\n\t// TODO: allow Promise<SoundData>?\n\tsprites: Record<string, SpriteData>,\n\tsounds: Record<string, SoundData>,\n\tfonts: Record<string, FontData>,\n\tshaders: Record<string, ShaderData>,\n};\n\ntype Assets = {\n\tloadRoot(path?: string): string,\n\tloadSprite(\n\t\tname: string | null,\n\t\tsrc: SpriteLoadSrc,\n\t\topt?: SpriteLoadOpt,\n\t): Promise<SpriteData>,\n\tloadSpriteAtlas(\n\t\tsrc: SpriteLoadSrc,\n\t\tdata: SpriteAtlasData,\n\t): Promise<Record<string, SpriteData>>,\n\tloadSpriteAtlas(\n\t\tsrc: SpriteLoadSrc,\n\t\turl: string,\n\t): Promise<Record<string, SpriteData>>,\n\tloadAseprite(\n\t\tname: string | null,\n\t\timgSrc: SpriteLoadSrc,\n\t\tjsonSrc: string\n\t): Promise<SpriteData>,\n\tloadPedit(name: string | null, src: string): Promise<SpriteData>,\n\tloadBean(name?: string): Promise<SpriteData>,\n\tloadSound(\n\t\tname: string | null,\n\t\tsrc: string,\n\t): Promise<SoundData>,\n\tloadFont(\n\t\tname: string | null,\n\t\tsrc: string,\n\t\tgw: number,\n\t\tgh: number,\n\t\topt?: FontLoadOpt,\n\t): Promise<FontData>,\n\tloadShader(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t\tisUrl?: boolean,\n\t): Promise<ShaderData>,\n\tloadProgress(): number,\n\tload<T>(prom: Promise<T>),\n\tsprites: Record<string, SpriteData>,\n\tfonts: Record<string, FontData>,\n\tsounds: Record<string, SoundData>,\n\tshaders: Record<string, ShaderData>,\n};\n\nconst ASCII_CHARS = \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\";\nconst CP437_CHARS = \" ☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■\";\n\nfunction loadImg(src: string): Promise<HTMLImageElement> {\n\tconst img = new Image();\n\timg.src = src;\n\timg.crossOrigin = \"anonymous\";\n\treturn new Promise<HTMLImageElement>((resolve, reject) => {\n\t\timg.onload = () => {\n\t\t\tresolve(img);\n\t\t};\n\t\timg.onerror = () => {\n\t\t\treject(`failed to load ${src}`);\n\t\t};\n\t});\n}\n\nfunction isDataUrl(src: string): boolean {\n\treturn src.startsWith(\"data:\");\n}\n\nfunction assetsInit(gfx: Gfx, audio: Audio, gopt: AssetsOpt = {}): Assets {\n\n\tconst assets: AssetsCtx = {\n\t\tlastLoaderID: 0,\n\t\tloadRoot: \"\",\n\t\tloaders: {},\n\t\tsprites: {},\n\t\tsounds: {},\n\t\tfonts: {},\n\t\tshaders: {},\n\t};\n\n\tfunction load<T>(prom: Promise<T>): Promise<T> {\n\t\tconst id = assets.lastLoaderID;\n\t\tassets.loaders[id] = false;\n\t\tassets.lastLoaderID++;\n\t\treturn prom\n\t\t\t.catch(gopt.errHandler ?? console.error)\n\t\t\t.finally(() => assets.loaders[id] = true) as Promise<T>;\n\t}\n\n\t// get current load progress\n\tfunction loadProgress(): number {\n\n\t\tlet total = 0;\n\t\tlet loaded = 0;\n\n\t\tfor (const id in assets.loaders) {\n\t\t\ttotal += 1;\n\t\t\tif (assets.loaders[id]) {\n\t\t\t\tloaded += 1;\n\t\t\t}\n\t\t}\n\n\t\treturn loaded / total;\n\n\t}\n\n\t// global load path prefix\n\tfunction loadRoot(path?: string): string {\n\t\tif (path !== undefined) {\n\t\t\tassets.loadRoot = path;\n\t\t}\n\t\treturn assets.loadRoot;\n\t}\n\n\t// TODO: support SpriteLoadSrc\n\tfunction loadFont(\n\t\tname: string | null,\n\t\tsrc: string,\n\t\tgw: number,\n\t\tgh: number,\n\t\topt: FontLoadOpt = {},\n\t): Promise<FontData> {\n\t\treturn load(new Promise<FontData>((resolve, reject) => {\n\t\t\tconst path = isDataUrl(src) ? src : assets.loadRoot + src;\n\t\t\tloadImg(path)\n\t\t\t\t.then((img) => {\n\t\t\t\t\tconst font = gfx.makeFont(gfx.makeTex(img, opt), gw, gh, opt.chars ?? ASCII_CHARS);\n\t\t\t\t\tif (name) {\n\t\t\t\t\t\tassets.fonts[name] = font;\n\t\t\t\t\t}\n\t\t\t\t\tresolve(font);\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\t\t}));\n\t}\n\n\tfunction getSprite(name: string): SpriteData | null {\n\t\treturn assets.sprites[name] ?? null;\n\t}\n\n\tfunction getSound(name: string): SoundData | null {\n\t\treturn assets.sounds[name] ?? null;\n\t}\n\n\tfunction getFont(name: string): FontData | null {\n\t\treturn assets.fonts[name] ?? null;\n\t}\n\n\tfunction getShader(name: string): ShaderData | null {\n\t\treturn assets.shaders[name] ?? null;\n\t}\n\n\tfunction slice(x = 1, y = 1, dx = 0, dy = 0, w = 1, h = 1): Quad[] {\n\t\tconst frames = [];\n\t\tconst qw = w / x;\n\t\tconst qh = h / y;\n\t\tfor (let j = 0; j < y; j++) {\n\t\t\tfor (let i = 0; i < x; i++) {\n\t\t\t\tframes.push(quad(\n\t\t\t\t\tdx + i * qw,\n\t\t\t\t\tdy + j * qh,\n\t\t\t\t\tqw,\n\t\t\t\t\tqh,\n\t\t\t\t));\n\t\t\t}\n\t\t}\n\t\treturn frames;\n\t}\n\n\tfunction loadSpriteAtlas(\n\t\tsrc: SpriteLoadSrc,\n\t\tdata: SpriteAtlasData | string\n\t): Promise<Record<string, SpriteData>> {\n\t\tif (typeof data === \"string\") {\n\t\t\t// TODO: this adds a new loader asyncly\n\t\t\treturn load(fetch(loadRoot() + data)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((data2) => loadSpriteAtlas(src, data2)));\n\t\t}\n\t\treturn load(loadSprite(null, src).then((atlas) => {\n\t\t\tconst map = {};\n\t\t\tconst w = atlas.tex.width;\n\t\t\tconst h = atlas.tex.height;\n\t\t\tfor (const name in data) {\n\t\t\t\tconst info = data[name];\n\t\t\t\tconst spr = {\n\t\t\t\t\ttex: atlas.tex,\n\t\t\t\t\tframes: slice(info.sliceX, info.sliceY, info.x / w, info.y / h, info.width / w, info.height / h),\n\t\t\t\t\tanims: info.anims,\n\t\t\t\t}\n\t\t\t\tassets.sprites[name] = spr;\n\t\t\t\tmap[name] = spr;\n\t\t\t}\n\t\t\treturn map;\n\t\t}));\n\t}\n\n\t// load a sprite to asset manager\n\tfunction loadSprite(\n\t\tname: string | null,\n\t\tsrc: SpriteLoadSrc,\n\t\topt: SpriteLoadOpt = {\n\t\t\tsliceX: 1,\n\t\t\tsliceY: 1,\n\t\t\tanims: {},\n\t\t},\n\t): Promise<SpriteData> {\n\n\t\t// synchronously load sprite from local pixel data\n\t\tfunction loadRawSprite(\n\t\t\tname: string | null,\n\t\t\tsrc: GfxTexData,\n\t\t\topt: SpriteLoadOpt = {\n\t\t\t\tsliceX: 1,\n\t\t\t\tsliceY: 1,\n\t\t\t\tanims: {},\n\t\t\t},\n\t\t) {\n\n\t\t\tconst tex = gfx.makeTex(src, opt);\n\t\t\tconst frames = slice(opt.sliceX || 1, opt.sliceY || 1);\n\n\t\t\tconst sprite = {\n\t\t\t\ttex: tex,\n\t\t\t\tframes: frames,\n\t\t\t\tanims: opt.anims || {},\n\t\t\t};\n\n\t\t\tif (name) {\n\t\t\t\tassets.sprites[name] = sprite;\n\t\t\t}\n\n\t\t\treturn sprite;\n\n\t\t}\n\n\t\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\t\tif (!src) {\n\t\t\t\treturn reject(`expected sprite src for \"${name}\"`);\n\t\t\t}\n\n\t\t\t// from url\n\t\t\tif (typeof(src) === \"string\") {\n\t\t\t\tconst path = isDataUrl(src) ? src : assets.loadRoot + src;\n\t\t\t\tloadImg(path)\n\t\t\t\t\t.then((img) => resolve(loadRawSprite(name, img, opt)))\n\t\t\t\t\t.catch(reject);\n\t\t\t} else {\n\t\t\t\tresolve(loadRawSprite(name, src, opt));\n\t\t\t}\n\n\t\t}));\n\n\t}\n\n\t// TODO: accept raw json\n\tfunction loadPedit(name: string, src: string): Promise<SpriteData> {\n\n\t\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\t\tfetch(loadRoot() + src)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then(async (data) => {\n\n\t\t\t\t\tconst images = await Promise.all(data.frames.map(loadImg));\n\t\t\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\t\t\tcanvas.width = data.width;\n\t\t\t\t\tcanvas.height = data.height * data.frames.length;\n\n\t\t\t\t\tconst ctx = canvas.getContext(\"2d\");\n\n\t\t\t\t\timages.forEach((img: HTMLImageElement, i) => {\n\t\t\t\t\t\tctx.drawImage(img, 0, i * data.height);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn loadSprite(name, canvas, {\n\t\t\t\t\t\tsliceY: data.frames.length,\n\t\t\t\t\t\tanims: data.anims,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.then(resolve)\n\t\t\t\t.catch(reject)\n\t\t\t\t;\n\n\t\t}));\n\n\t}\n\n\t// TODO: accept raw json\n\tfunction loadAseprite(\n\t\tname: string | null,\n\t\timgSrc: SpriteLoadSrc,\n\t\tjsonSrc: string\n\t): Promise<SpriteData> {\n\n\t\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\t\tconst jsonPath = loadRoot() + jsonSrc;\n\n\t\t\tloadSprite(name, imgSrc)\n\t\t\t\t.then((sprite: SpriteData) => {\n\t\t\t\t\tfetch(jsonPath)\n\t\t\t\t\t\t.then((res) => res.json())\n\t\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\t\tconst size = data.meta.size;\n\t\t\t\t\t\t\tsprite.frames = data.frames.map((f: any) => {\n\t\t\t\t\t\t\t\treturn quad(\n\t\t\t\t\t\t\t\t\tf.frame.x / size.w,\n\t\t\t\t\t\t\t\t\tf.frame.y / size.h,\n\t\t\t\t\t\t\t\t\tf.frame.w / size.w,\n\t\t\t\t\t\t\t\t\tf.frame.h / size.h,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tfor (const anim of data.meta.frameTags) {\n\t\t\t\t\t\t\t\tif (anim.from === anim.to) {\n\t\t\t\t\t\t\t\t\tsprite.anims[anim.name] = anim.from\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsprite.anims[anim.name] = {\n\t\t\t\t\t\t\t\t\t\tfrom: anim.from,\n\t\t\t\t\t\t\t\t\t\tto: anim.to,\n\t\t\t\t\t\t\t\t\t\t// TODO: let users define these\n\t\t\t\t\t\t\t\t\t\tspeed: 10,\n\t\t\t\t\t\t\t\t\t\tloop: true,\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresolve(sprite);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(reject)\n\t\t\t\t\t\t;\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\n\t\t}));\n\n\t}\n\n\tfunction loadShader(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t\tisUrl: boolean = false,\n\t): Promise<ShaderData> {\n\n\t\tfunction loadRawShader(\n\t\t\tname: string | null,\n\t\t\tvert: string | null,\n\t\t\tfrag: string | null,\n\t\t): ShaderData {\n\t\t\tconst shader = gfx.makeShader(vert, frag);\n\t\t\tif (name) {\n\t\t\t\tassets.shaders[name] = shader;\n\t\t\t}\n\t\t\treturn shader;\n\t\t}\n\n\t\treturn load(new Promise<ShaderData>((resolve, reject) => {\n\n\t\t\tif (!vert && !frag) {\n\t\t\t\treturn reject(\"no shader\");\n\t\t\t}\n\n\t\t\tfunction resolveUrl(url?: string) {\n\t\t\t\treturn url ?\n\t\t\t\t\tfetch(assets.loadRoot + url)\n\t\t\t\t\t\t.then((r) => {\n\t\t\t\t\t\t\tif (r.ok) {\n\t\t\t\t\t\t\t\treturn r.text();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new Error(`failed to load ${url}`)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(reject)\n\t\t\t\t\t: new Promise((r) => r(null));\n\t\t\t}\n\n\t\t\tif (isUrl) {\n\t\t\t\tPromise.all([resolveUrl(vert), resolveUrl(frag)])\n\t\t\t\t\t.then(([vcode, fcode]: [string | null, string | null]) => {\n\t\t\t\t\t\tresolve(loadRawShader(name, vcode, fcode));\n\t\t\t\t\t})\n\t\t\t\t\t.catch(reject);\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(loadRawShader(name, vert, frag));\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}));\n\n\t}\n\n\t// TODO: accept dataurl\n\t// load a sound to asset manager\n\tfunction loadSound(\n\t\tname: string | null,\n\t\tsrc: string,\n\t): Promise<SoundData> {\n\n\t\tconst url = assets.loadRoot + src;\n\n\t\treturn load(new Promise<SoundData>((resolve, reject) => {\n\n\t\t\tif (!src) {\n\t\t\t\treturn reject(`expected sound src for \"${name}\"`);\n\t\t\t}\n\n\t\t\t// from url\n\t\t\tif (typeof(src) === \"string\") {\n\t\t\t\tfetch(url)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\t\treturn res.arrayBuffer();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(`failed to load ${url}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\treturn new Promise((resolve2, reject2) => {\n\t\t\t\t\t\t\taudio.ctx.decodeAudioData(data, resolve2, reject2);\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.then((buf: AudioBuffer) => {\n\t\t\t\t\t\tconst snd = {\n\t\t\t\t\t\t\tbuf: buf,\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (name) {\n\t\t\t\t\t\t\tassets.sounds[name] = snd;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolve(snd);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(reject);\n\t\t\t}\n\n\t\t}));\n\n\t}\n\n\tfunction loadBean(name: string = \"bean\"): Promise<SpriteData> {\n\t\treturn loadSprite(name, beanSrc);\n\t}\n\n\tloadFont(\n\t\t\"apl386\",\n\t\tapl386Src,\n\t\t45,\n\t\t74,\n\t);\n\n\tloadFont(\n\t\t\"apl386o\",\n\t\tapl386oSrc,\n\t\t45,\n\t\t74,\n\t);\n\n\tloadFont(\n\t\t\"sink\",\n\t\tsinkSrc,\n\t\t6,\n\t\t8,\n\t\t{\n\t\t\tchars: `█☺☻♥♦♣♠●○▪□■◘♪♫≡►◄⌂ÞÀß×¥↑↓→←◌●▼▲ !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_\\`abcdefghijklmnopqrstuvwxyz{|}~Χ░▒▓ḀḁḂ│┬┤┌┐ḃḄ┼ḅḆḇḈḉḊḋḌ─├┴└┘ḍḎ⁞ḏḐḑḒḓḔḕḖḗḘ▄ḙḚḛḜ…ḝḞḟḠḡḢḣḤḥḦ▌▐ḧḨḩḪḫḬḭḮḯḰḱḲḳḴḵḶḷḸḹḺḻḼḽḾḿṀṁṂṃṄṅṆṇṈṉṊṋṌṍṎṏṐṑṒṓṔṕṖṗṘṙṚṛṜṝṞṟṠṡṢṣṤṥṦṧṨṩṪṫṬṭṮṯṰṱṲṳṴṵṶṷṸṹṺṻṼ`,\n\t\t}\n\t);\n\n\tloadFont(\n\t\t\"sinko\",\n\t\tsinkoSrc,\n\t\t8,\n\t\t10,\n\t);\n\n\treturn {\n\t\tloadRoot,\n\t\tloadSprite,\n\t\tloadSpriteAtlas,\n\t\tloadPedit,\n\t\tloadAseprite,\n\t\tloadBean,\n\t\tloadSound,\n\t\tloadFont,\n\t\tloadShader,\n\t\tloadProgress,\n\t\tload,\n\t\tsprites: assets.sprites,\n\t\tfonts: assets.fonts,\n\t\tsounds: assets.sounds,\n\t\tshaders: assets.shaders,\n\t};\n\n}\n\nexport {\n\tAssetsOpt,\n\tAssets,\n\tassetsInit,\n\tASCII_CHARS,\n\tCP437_CHARS,\n};\n","import {\n\tvec2,\n\trgb,\n\tmap,\n} from \"./math\";\n\nimport {\n\tAssets,\n} from \"./assets\";\n\nimport {\n\tGfx,\n} from \"./gfx\";\n\ntype Log = {\n\ttype: \"info\" | \"error\",\n\tmsg: string,\n};\n\ntype LoggerOpt = {\n\tmax?: number,\n\ttime?: () => number,\n};\n\ntype Logger = {\n\tdraw(),\n\tinfo(msg: string),\n\terror(msg: string),\n\tclear(),\n};\n\nconst LOG_SIZE = 16;\n\nfunction loggerInit(gfx: Gfx, assets: Assets, opt: LoggerOpt = {}): Logger {\n\n\tlet logs: Log[] = [];\n\tconst max = opt.max ?? 1;\n\n\t// TODO: draw rects first to reduce draw calls\n\tfunction draw() {\n\n\t\tif (logs.length > max) {\n\t\t\tlogs = logs.slice(0, max);\n\t\t}\n\n\t\tconst pos = vec2(0, gfx.height());\n\n\t\tlogs.forEach((log, i) => {\n\n\t\t\tconst txtAlpha = map(i, 0, max, 1, 0.5);\n\t\t\tconst bgAlpha = map(i, 0, max, 0.8, 0.2);\n\n\t\t\tconst col = (() => {\n\t\t\t\tswitch (log.type) {\n\t\t\t\t\tcase \"info\": return rgb(255, 255, 255);\n\t\t\t\t\tcase \"error\": return rgb(255, 0, 127);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tconst ftext = gfx.fmtText({\n\t\t\t\ttext: log.msg,\n\t\t\t\tfont: assets.fonts[\"sink\"],\n\t\t\t\tpos: pos,\n\t\t\t\torigin: \"botleft\",\n\t\t\t\tcolor: col,\n\t\t\t\tsize: LOG_SIZE / gfx.scale(),\n\t\t\t\twidth: gfx.width(),\n\t\t\t\topacity: txtAlpha,\n\t\t\t});\n\n\t\t\tgfx.drawRect({\n\t\t\t\tpos: pos,\n\t\t\t\twidth: ftext.width,\n\t\t\t\theight: ftext.height,\n\t\t\t\torigin: \"botleft\",\n\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\topacity: bgAlpha,\n\t\t\t});\n\n\t\t\tgfx.drawFmtText(ftext);\n\t\t\tpos.y -= ftext.height;\n\n\t\t});\n\n\t}\n\n\tfunction error(msg: string) {\n\t\tlogs.unshift({\n\t\t\ttype: \"error\",\n\t\t\tmsg: msg,\n\t\t});\n\t}\n\n\tfunction info(msg: string) {\n\t\tlogs.unshift({\n\t\t\ttype: \"info\",\n\t\t\tmsg: msg,\n\t\t});\n\t}\n\n\tfunction clear() {\n\t\tlogs = [];\n\t}\n\n\treturn {\n\t\tinfo,\n\t\terror,\n\t\tdraw,\n\t\tclear,\n\t};\n\n}\n\nexport {\n\tloggerInit,\n};\n","// explosion\n\nimport {\n\tCompList,\n\tVec2,\n\tComp,\n\tKaboomCtx,\n} from \"../types\";\n\n// @ts-ignore\nimport kaSrc from \"./ka.png\";\n// @ts-ignore\nimport boomSrc from \"./boom.png\";\n\ninterface BoomOpt {\n\t/**\n\t * Animation speed.\n\t */\n\tspeed?: number,\n\t/**\n\t * Scale.\n\t */\n\tscale?: number,\n\t/**\n\t * Additional ka components.\n\t */\n\tkaComps?: () => CompList<any>,\n\t/**\n\t * Additional boom components.\n\t */\n\tboomComps?: () => CompList<any>,\n}\n\ninterface Kaboom {\n\t/**\n\t * Remove kaboom.\n\t */\n\tdestroy(): void,\n}\n\ninterface ExplodeComp extends Comp {\n}\n\ninterface KaboomPlug {\n\taddKaboom(pos: Vec2, opt?: BoomOpt): Kaboom,\n}\n\nexport default (k: KaboomCtx) => {\n\n\tfunction explode(speed: number = 2, size: number = 1): ExplodeComp {\n\t\tlet time = 0;\n\t\treturn {\n\t\t\tid: \"explode\",\n\t\t\trequire: [ \"scale\", ],\n\t\t\tupdate() {\n\t\t\t\tconst s = Math.sin(time * speed) * size;\n\t\t\t\tif (s < 0) {\n\t\t\t\t\tk.destroy(this);\n\t\t\t\t}\n\t\t\t\tthis.scale = k.vec2(s);\n\t\t\t\ttime += k.dt();\n\t\t\t},\n\t\t};\n\t}\n\n\tlet kaSprite = null;\n\tlet boomSprite = null;\n\n\tk.loadSprite(null, kaSrc).then((spr) => kaSprite = spr);\n\tk.loadSprite(null, boomSrc).then((spr) => boomSprite = spr);\n\n\tfunction addKaboom(pos: Vec2, opt: BoomOpt = {}): Kaboom {\n\n\t\tconst speed = (opt.speed || 1) * 5;\n\t\tconst scale = opt.scale || 1;\n\n\t\tconst boom = k.add([\n\t\t\tk.pos(pos),\n\t\t\tk.sprite(boomSprite),\n\t\t\tk.scale(0),\n\t\t\tk.stay(),\n\t\t\tk.origin(\"center\"),\n\t\t\texplode(speed, scale),\n\t\t\t...(opt.boomComps ?? (() => []))(),\n\t\t]);\n\n\t\tconst ka = k.add([\n\t\t\tk.pos(pos),\n\t\t\tk.sprite(kaSprite),\n\t\t\tk.scale(0),\n\t\t\tk.stay(),\n\t\t\tk.origin(\"center\"),\n\t\t\tk.timer(0.4 / speed, () => ka.use(explode(speed, scale))),\n\t\t\t...(opt.kaComps ?? (() => []))(),\n\t\t]);\n\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\tk.destroy(ka);\n\t\t\t\tk.destroy(boom);\n\t\t\t},\n\t\t};\n\n\t}\n\n\treturn {\n\t\taddKaboom,\n\t};\n\n};\n","import {\n\tvec2,\n\tmat4,\n\tquad,\n\trgb,\n\thsl2rgb,\n\trng,\n\trand,\n\trandi,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\ttestAreaRect,\n\ttestAreaLine,\n\ttestAreaCircle,\n\ttestAreaPolygon,\n\ttestAreaPoint,\n\ttestAreaArea,\n\ttestLineLineT,\n\ttestRectRect2,\n\ttestLineLine,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestLinePolygon,\n\ttestPolygonPolygon,\n\ttestCircleCircle,\n\ttestCirclePoint,\n\ttestRectPolygon,\n\tminkDiff,\n\tdir,\n\tdeg2rad,\n\trad2deg,\n\tisVec2,\n} from \"./math\";\n\nimport {\n\toriginPt,\n\tgfxInit,\n} from \"./gfx\";\n\nimport {\n\tappInit,\n} from \"./app\";\n\nimport {\n\taudioInit,\n} from \"./audio\";\n\nimport {\n\tassetsInit,\n\tASCII_CHARS,\n\tCP437_CHARS,\n} from \"./assets\";\n\nimport {\n\tloggerInit,\n} from \"./logger\";\n\nimport {\n\tIDList,\n\tdownloadURL,\n\tdownloadBlob,\n} from \"./utils\";\n\nimport {\n\tKaboomCtx,\n\tKaboomOpt,\n\tAudioPlay,\n\tAudioPlayOpt,\n\tVec2,\n\tMat4,\n\tDrawSpriteOpt,\n\tDrawTextOpt,\n\tGameObj,\n\tTimer,\n\tEventCanceller,\n\tSceneID,\n\tSceneDef,\n\tCompList,\n\tComp,\n\tTag,\n\tKey,\n\tMouseButton,\n\tTouchID,\n\tCollision,\n\tPosComp,\n\tScaleComp,\n\tRotateComp,\n\tColorComp,\n\tOpacityComp,\n\tOrigin,\n\tOriginComp,\n\tLayerComp,\n\tZComp,\n\tFollowComp,\n\tMoveComp,\n\tCleanupComp,\n\tAreaCompOpt,\n\tAreaComp,\n\tArea,\n\tSpriteData,\n\tSpriteComp,\n\tSpriteCompOpt,\n\tGfxTexture,\n\tQuad,\n\tSpriteAnimPlayOpt,\n\tTextComp,\n\tTextCompOpt,\n\tRectComp,\n\tRectCompOpt,\n\tUVQuadComp,\n\tCircleComp,\n\tColor,\n\tOutlineComp,\n\tTimerComp,\n\tBodyComp,\n\tBodyCompOpt,\n\tUniform,\n\tShaderComp,\n\tSolidComp,\n\tFixedComp,\n\tStayComp,\n\tHealthComp,\n\tLifespanComp,\n\tLifespanCompOpt,\n\tStateComp,\n\tDebug,\n\tKaboomPlugin,\n\tMergeObj,\n\tLevel,\n\tLevelOpt,\n\tCursor,\n\tRecording,\n} from \"./types\";\n\nimport kaboomPlugin from \"./plugins/kaboom\";\n\nexport default (gopt: KaboomOpt = {}): KaboomCtx => {\n\nconst audio = audioInit();\n\nconst app = appInit({\n\twidth: gopt.width,\n\theight: gopt.height,\n\tscale: gopt.scale,\n\tcrisp: gopt.crisp,\n\tcanvas: gopt.canvas,\n\troot: gopt.root,\n\tstretch: gopt.stretch,\n\ttouchToMouse: gopt.touchToMouse ?? true,\n\taudioCtx: audio.ctx,\n});\n\nconst gfx = gfxInit(app.gl, {\n\tbackground: gopt.background ? rgb(gopt.background) : undefined,\n\twidth: gopt.width,\n\theight: gopt.height,\n\tscale: gopt.scale,\n\ttexFilter: gopt.texFilter,\n\tstretch: gopt.stretch,\n\tletterbox: gopt.letterbox,\n});\n\nconst {\n\twidth,\n\theight,\n} = gfx;\n\nconst assets = assetsInit(gfx, audio, {\n\terrHandler: (err: string) => {\n\t\tlogger.error(err);\n\t},\n});\n\nconst logger = loggerInit(gfx, assets, {\n\tmax: gopt.logMax,\n});\n\nconst DEF_FONT = \"apl386o\";\nconst DBG_FONT = \"sink\";\n\nfunction dt() {\n\treturn app.dt() * debug.timeScale;\n}\n\n// TODO: clean\nfunction play(id: string, opt: AudioPlayOpt = {}): AudioPlay {\n\tconst pb = audio.play({\n\t\tbuf: new AudioBuffer({\n\t\t\tlength: 1,\n\t\t\tnumberOfChannels: 1,\n\t\t\tsampleRate: 44100\n\t\t}),\n\t});\n\tonLoad(() => {\n\t\tconst snd = assets.sounds[id];\n\t\tif (!snd) {\n\t\t\tthrow new Error(`sound not found: \"${id}\"`);\n\t\t}\n\t\tconst pb2 = audio.play(snd, opt);\n\t\tfor (const k in pb2) {\n\t\t\tpb[k] = pb2[k];\n\t\t}\n\t});\n\treturn pb;\n}\n\nfunction mousePos(): Vec2 {\n\treturn app.mousePos();\n}\n\nfunction mouseWorldPos(): Vec2 {\n\treturn game.camMousePos;\n}\n\n// wrapper around gfx.drawTexture to integrate with sprite assets mananger / frame anim\nfunction drawSprite(opt: DrawSpriteOpt) {\n\tif (!opt.sprite) {\n\t\tthrow new Error(`drawSprite() requires property \"sprite\"`);\n\t}\n\tconst spr = (() => {\n\t\tif (typeof opt.sprite === \"string\") {\n\t\t\treturn assets.sprites[opt.sprite];\n\t\t} else {\n\t\t\treturn opt.sprite;\n\t\t}\n\t})();\n\tif (!spr) {\n\t\tthrow new Error(`sprite not found: \"${opt.sprite}\"`);\n\t}\n\tconst q = spr.frames[opt.frame ?? 0];\n\tif (!q) {\n\t\tthrow new Error(`frame not found: ${opt.frame ?? 0}`);\n\t}\n\tgfx.drawTexture({\n\t\t...opt,\n\t\ttex: spr.tex,\n\t\tquad: q.scale(opt.quad || quad(0, 0, 1, 1)),\n\t});\n}\n\n// wrapper around gfx.drawText to integrate with font assets mananger / default font\nfunction drawText(opt: DrawTextOpt) {\n\t// @ts-ignore\n\tconst fid = opt.font ?? DEF_FONT;\n\tconst font = assets.fonts[fid];\n\tif (!font) {\n\t\tthrow new Error(`font not found: ${fid}`);\n\t}\n\tgfx.drawText({\n\t\t...opt,\n\t\tfont: font,\n\t});\n}\n\nconst DEF_GRAVITY = 1600;\nconst DEF_ORIGIN = \"topleft\";\n\ninterface Game {\n\tloaded: boolean,\n\tevents: Record<string, IDList<() => void>>,\n\tobjEvents: Record<string, IDList<TaggedEvent>>,\n\tobjs: IDList<GameObj>,\n\ttimers: IDList<Timer>,\n\tcam: Camera,\n\tcamMousePos: Vec2,\n\tcamMatrix: Mat4,\n\tgravity: number,\n\tlayers: Record<string, number>,\n\tdefLayer: string | null,\n\ton<F>(ev: string, cb: F): EventCanceller,\n\ttrigger(ev: string, ...args),\n\tscenes: Record<SceneID, SceneDef>,\n\tpaused: boolean,\n};\n\ntype Camera = {\n\tpos: Vec2,\n\tscale: Vec2,\n\tangle: number,\n\tshake: number,\n};\n\ntype Layer = {\n\torder: number,\n}\n\ntype TaggedEvent = {\n\ttag: string,\n\tcb: (...args) => void,\n};\n\ntype KeyEvent = {\n\tkey: string,\n\tcb(),\n};\n\ntype MouseInputEvent = {\n\tcb(),\n};\n\ntype LoadEvent = () => void;\ntype NextFrameEvent = () => void;\ntype MouseEvent = () => void;\ntype CharEvent = (ch: string) => void;\n\nconst game: Game = {\n\n\tloaded: false,\n\n\t// event callbacks\n\tevents: {},\n\tobjEvents: {},\n\n\t// in game pool\n\tobjs: new IDList(),\n\ttimers: new IDList(),\n\n\t// cam\n\tcam: {\n\t\tpos: center(),\n\t\tscale: vec2(1),\n\t\tangle: 0,\n\t\tshake: 0,\n\t},\n\n\tcamMousePos: app.mousePos(),\n\tcamMatrix: mat4(),\n\n\t// misc\n\tlayers: {},\n\tdefLayer: null,\n\tgravity: DEF_GRAVITY,\n\n\ton<F>(ev: string, cb: F): EventCanceller {\n\t\tif (!this.events[ev]) {\n\t\t\tthis.events[ev] = new IDList();\n\t\t}\n\t\treturn this.events[ev].pushd(cb);\n\t},\n\n\ttrigger(ev: string, ...args) {\n\t\tif (this.events[ev]) {\n\t\t\tthis.events[ev].forEach((cb) => cb(...args));\n\t\t}\n\t},\n\n\tscenes: {},\n\tpaused: false,\n\n};\n\nfunction layers(list: string[], def?: string) {\n\n\tlist.forEach((name, idx) => {\n\t\tgame.layers[name] = idx + 1;\n\t});\n\n\tif (def) {\n\t\tgame.defLayer = def;\n\t}\n\n}\n\nfunction camPos(...pos): Vec2 {\n\tif (pos.length > 0) {\n\t\tgame.cam.pos = vec2(...pos);\n\t}\n\treturn game.cam.pos.clone();\n}\n\nfunction camScale(...scale): Vec2 {\n\tif (scale.length > 0) {\n\t\tgame.cam.scale = vec2(...scale);\n\t}\n\treturn game.cam.scale.clone();\n}\n\nfunction camRot(angle: number): number {\n\tif (angle !== undefined) {\n\t\tgame.cam.angle = angle;\n\t}\n\treturn game.cam.angle;\n}\n\nfunction shake(intensity: number = 12) {\n\tgame.cam.shake = intensity;\n}\n\nfunction toScreen(p: Vec2): Vec2 {\n\treturn game.camMatrix.multVec2(p);\n}\n\nfunction toWorld(p: Vec2): Vec2 {\n\treturn game.camMatrix.invert().multVec2(p);\n}\n\nconst COMP_DESC = new Set([\n\t\"id\",\n\t\"require\",\n]);\n\nconst COMP_EVENTS = new Set([\n\t\"add\",\n\t\"load\",\n\t\"update\",\n\t\"draw\",\n\t\"destroy\",\n\t\"inspect\",\n]);\n\nfunction make<T>(comps: CompList<T>): GameObj<T> {\n\n\tconst compStates = new Map();\n\tconst customState = {};\n\tconst events = {};\n\n\tconst obj = {\n\n\t\t_id: null,\n\t\thidden: false,\n\t\tpaused: false,\n\n\t\t// use a comp, or tag\n\t\tuse(comp: Comp | Tag) {\n\n\t\t\tif (!comp) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// tag\n\t\t\tif (typeof comp === \"string\") {\n\t\t\t\treturn this.use({\n\t\t\t\t\tid: comp\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// clear if overwrite\n\t\t\tif (comp.id) {\n\t\t\t\tthis.unuse(comp.id);\n\t\t\t\tcompStates.set(comp.id, {});\n\t\t\t}\n\n\t\t\t// state source location\n\t\t\tconst state = comp.id ? compStates.get(comp.id) : customState;\n\n\t\t\tstate.cleanups = [];\n\n\t\t\tfor (const k in comp) {\n\n\t\t\t\tif (COMP_DESC.has(k)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// event / custom method\n\t\t\t\tif (typeof comp[k] === \"function\") {\n\t\t\t\t\tconst func = comp[k].bind(this);\n\t\t\t\t\tif (COMP_EVENTS.has(k)) {\n\t\t\t\t\t\tstate.cleanups.push(this.on(k, func));\n\t\t\t\t\t\tstate[k] = func;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate[k] = func;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstate[k] = comp[k];\n\t\t\t\t}\n\n\t\t\t\tif (this[k] === undefined) {\n\t\t\t\t\t// assign comp fields to game obj\n\t\t\t\t\tObject.defineProperty(this, k, {\n\t\t\t\t\t\tget: () => state[k],\n\t\t\t\t\t\tset: (val) => state[k] = val,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst checkDeps = () => {\n\t\t\t\tif (!comp.require) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfor (const dep of comp.require) {\n\t\t\t\t\tif (!this.c(dep)) {\n\t\t\t\t\t\tthrow new Error(`comp '${comp.id}' requires comp '${dep}'`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// check deps or run add event\n\t\t\tif (this.exists()) {\n\t\t\t\tif (comp.add) {\n\t\t\t\t\tcomp.add.call(this);\n\t\t\t\t}\n\t\t\t\tif (comp.load) {\n\t\t\t\t\tonLoad(() => comp.load.call(this));\n\t\t\t\t}\n\t\t\t\tcheckDeps();\n\t\t\t} else {\n\t\t\t\tif (comp.require) {\n\t\t\t\t\tstate.cleanups.push(this.on(\"add\", () => {\n\t\t\t\t\t\tcheckDeps();\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\tunuse(id: Tag) {\n\t\t\tif (compStates.has(id)) {\n\t\t\t\tconst comp = compStates.get(id);\n\t\t\t\tcomp.cleanups.forEach((f) => f());\n\t\t\t\tfor (const k in comp) {\n\t\t\t\t\tdelete comp[k];\n\t\t\t\t}\n\t\t\t}\n\t\t\tcompStates.delete(id);\n\t\t},\n\n\t\tc(id: Tag): Comp {\n\t\t\treturn compStates.get(id);\n\t\t},\n\n\t\texists(): boolean {\n\t\t\treturn this._id !== null;\n\t\t},\n\n\t\tis(tag: Tag | Tag[]): boolean {\n\t\t\tif (tag === \"*\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (Array.isArray(tag)) {\n\t\t\t\tfor (const t of tag) {\n\t\t\t\t\tif (!this.c(t)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn this.c(tag) != null;\n\t\t\t}\n\t\t},\n\n\t\ton(ev: string, cb): EventCanceller {\n\t\t\tif (!events[ev]) {\n\t\t\t\tevents[ev] = new IDList();\n\t\t\t}\n\t\t\treturn events[ev].pushd(cb);\n\t\t},\n\n\t\taction(...args): EventCanceller {\n\t\t\treturn this.onUpdate(...args);\n\t\t},\n\n\t\ttrigger(ev: string, ...args): void {\n\n\t\t\tif (events[ev]) {\n\t\t\t\tevents[ev].forEach((cb) => cb.call(this, ...args));\n\t\t\t}\n\n\t\t\tconst gEvents = game.objEvents[ev];\n\n\t\t\tif (gEvents) {\n\t\t\t\tgEvents.forEach((e) => {\n\t\t\t\t\tif (this.is(e.tag)) {\n\t\t\t\t\t\te.cb(this, ...args);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t},\n\n\t\tdestroy() {\n\n\t\t\tif (!this.exists()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.trigger(\"destroy\");\n\t\t\tgame.objs.delete(this._id);\n\t\t\tthis._id = null;\n\n\t\t},\n\n\t\tinspect() {\n\t\t\tconst info = {};\n\t\t\tfor (const [tag, comp] of compStates) {\n\t\t\t\tinfo[tag] = comp.inspect ? comp.inspect() : null;\n\t\t\t}\n\t\t\treturn info;\n\t\t},\n\n\t\tonUpdate(cb: () => void): EventCanceller {\n\t\t\treturn this.on(\"update\", cb);\n\t\t},\n\n\t\tonDraw(cb: () => void): EventCanceller {\n\t\t\treturn this.on(\"draw\", cb);\n\t\t},\n\n\t\tonDestroy(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"destroy\", action);\n\t\t},\n\n\t};\n\n\tfor (const comp of comps) {\n\t\tobj.use(comp);\n\t}\n\n\treturn obj as unknown as GameObj<T>;\n\n}\n\nfunction add<T>(comps: CompList<T>): GameObj<T> {\n\tconst obj = make(comps);\n\tobj._id = game.objs.push(obj);\n\tobj.trigger(\"add\");\n\tonLoad(() => obj.trigger(\"load\"));\n\treturn obj;\n}\n\nfunction readd(obj: GameObj): GameObj {\n\tif (!obj.exists()) {\n\t\treturn;\n\t}\n\tgame.objs.delete(obj._id);\n\tobj._id = game.objs.push(obj);\n\treturn obj;\n}\n\n// add an event to a tag\nfunction on(event: string, tag: Tag, cb: (obj: GameObj, ...args) => void): EventCanceller {\n\tif (!game.objEvents[event]) {\n\t\tgame.objEvents[event] = new IDList();\n\t}\n\treturn game.objEvents[event].pushd({\n\t\ttag: tag,\n\t\tcb: cb,\n\t});\n}\n\n// TODO: detect if is currently in another action?\n// add update event to a tag or global update\nfunction onUpdate(tag: Tag | (() => void), cb?: (obj: GameObj) => void): EventCanceller {\n\tif (typeof tag === \"function\" && cb === undefined) {\n\t\treturn add([{ update: tag, }]).destroy;\n\t} else if (typeof tag === \"string\") {\n\t\treturn on(\"update\", tag, cb);\n\t}\n}\n\n// add draw event to a tag or global draw\nfunction onDraw(tag: Tag | (() => void), cb?: (obj: GameObj) => void) {\n\tif (typeof tag === \"function\" && cb === undefined) {\n\t\treturn add([{ draw: tag, }]).destroy;\n\t} else if (typeof tag === \"string\") {\n\t\treturn on(\"draw\", tag, cb);\n\t}\n}\n\n// add an event that runs with objs with t1 collides with objs with t2\nfunction onCollide(\n\tt1: Tag,\n\tt2: Tag,\n\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n): EventCanceller {\n\tconst e1 = on(\"collide\", t1, (a, b, col) => b.is(t2) && f(a, b, col));\n\tconst e2 = on(\"collide\", t2, (a, b, col) => b.is(t1) && f(b, a, col));\n\tconst e3 = onUpdate(t1, (o1: GameObj) => {\n\t\tif (!o1.area) {\n\t\t\tthrow new Error(\"onCollide() requires the object to have area() component\");\n\t\t}\n\t\to1._checkCollisions(t2, (o2) => {\n\t\t\tf(o1, o2);\n\t\t});\n\t});\n\treturn () => [e1, e2, e3].forEach((f) => f());\n}\n\n// add an event that runs when objs with tag t is clicked\nfunction onClick(tag: Tag | (() => void), cb?: (obj: GameObj) => void): EventCanceller {\n\tif (typeof tag === \"function\") {\n\t\treturn onMousePress(tag);\n\t} else {\n\t\treturn onUpdate(tag, (o: GameObj) => {\n\t\t\tif (!o.area) throw new Error(\"onClick() requires the object to have area() component\");\n\t\t\tif (o.isClicked()) {\n\t\t\t\tcb(o);\n\t\t\t}\n\t\t});\n\t}\n}\n\n// add an event that runs when objs with tag t is hovered\nfunction onHover(t: string, onHover: (obj: GameObj) => void, onNotHover?: (obj: GameObj) => void): EventCanceller {\n\treturn onUpdate(t, (o: GameObj) => {\n\t\tif (!o.area) throw new Error(\"onHover() requires the object to have area() component\");\n\t\tif (o.isHovering()) {\n\t\t\tonHover(o);\n\t\t} else {\n\t\t\tif (onNotHover) {\n\t\t\t\tonNotHover(o);\n\t\t\t}\n\t\t}\n\t});\n}\n\n// add an event that'd be run after t\nfunction wait(t: number, f?: () => void): Promise<void> {\n\treturn new Promise((resolve) => {\n\t\tgame.timers.push({\n\t\t\ttime: t,\n\t\t\taction: () => {\n\t\t\t\tif (f) {\n\t\t\t\t\tf();\n\t\t\t\t}\n\t\t\t\tresolve();\n\t\t\t},\n\t\t});\n\t});\n}\n\n// add an event that's run every t seconds\nfunction loop(t: number, f: () => void): EventCanceller {\n\n\tlet stopped = false;\n\n\tconst newF = () => {\n\t\tif (stopped) {\n\t\t\treturn;\n\t\t}\n\t\tf();\n\t\twait(t, newF);\n\t};\n\n\tnewF();\n\n\treturn () => stopped = true;\n\n}\n\n// input callbacks\nfunction onKeyDown(k: Key | Key[], f: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyDown(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} {\n\t\treturn game.on(\"input\", () => app.isKeyDown(k) && f());\n\t}\n}\n\nfunction onKeyPress(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyPress(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => app.isKeyPressed() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => app.isKeyPressed(k) && f());\n\t}\n}\n\nfunction onKeyPressRepeat(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyPressRepeat(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => app.isKeyPressed() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => app.isKeyPressedRepeat(k) && f());\n\t}\n}\n\nfunction onKeyRelease(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyRelease(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => app.isKeyReleased() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => app.isKeyReleased(k) && f());\n\t}\n}\n\nfunction onMouseDown(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => app.isMouseDown() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => app.isMouseDown(m) && action(mousePos()));\n\t}\n}\n\nfunction onMousePress(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => app.isMousePressed() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => app.isMousePressed(m) && action(mousePos()));\n\t}\n}\n\nfunction onMouseRelease(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => app.isMouseReleased() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => app.isMouseReleased(m) && action(mousePos()));\n\t}\n}\n\nfunction onMouseMove(f: (pos: Vec2, dpos: Vec2) => void): EventCanceller {\n\treturn game.on(\"input\", () => app.isMouseMoved() && f(mousePos(), app.mouseDeltaPos()));\n}\n\nfunction onCharInput(f: (ch: string) => void): EventCanceller {\n\treturn game.on(\"input\", () => app.charInputted().forEach((ch) => f(ch)));\n}\n\n// TODO: put this in app.ts's and handle in game loop\napp.canvas.addEventListener(\"touchstart\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchStart\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\napp.canvas.addEventListener(\"touchmove\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchMove\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\napp.canvas.addEventListener(\"touchmove\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchEnd\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\nfunction onTouchStart(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchStart\", f);\n}\n\nfunction onTouchMove(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchMove\", f);\n}\n\nfunction onTouchEnd(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchEnd\", f);\n}\n\nfunction enterDebugMode() {\n\n\tonKeyPress(\"f1\", () => {\n\t\tdebug.inspect = !debug.inspect;\n\t});\n\n\tonKeyPress(\"f2\", () => {\n\t\tdebug.clearLog();\n\t});\n\n\tonKeyPress(\"f8\", () => {\n\t\tdebug.paused = !debug.paused;\n\t});\n\n\tonKeyPress(\"f7\", () => {\n\t\tdebug.timeScale = toFixed(clamp(debug.timeScale - 0.2, 0, 2), 1);\n\t});\n\n\tonKeyPress(\"f9\", () => {\n\t\tdebug.timeScale = toFixed(clamp(debug.timeScale + 0.2, 0, 2), 1);\n\t});\n\n\tonKeyPress(\"f10\", () => {\n\t\tdebug.stepFrame();\n\t});\n\n\tonKeyPress(\"f5\", () => {\n\t\tdownloadURL(app.screenshot(), \"kaboom.png\");\n\t});\n\n\tonKeyPress(\"f6\", () => {\n\t\tif (debug.curRecording) {\n\t\t\tdebug.curRecording.download();\n\t\t\tdebug.curRecording = null;\n\t\t} else {\n\t\t\tdebug.curRecording = record();\n\t\t}\n\t});\n\n}\n\nfunction enterBurpMode() {\n\tonKeyPress(\"b\", audio.burp);\n}\n\n// TODO: cache sorted list\n// get all objects with tag\nfunction get(t?: Tag | Tag[]): GameObj[] {\n\n\tconst objs = [...game.objs.values()].sort((o1, o2) => {\n\n\t\tconst l1 = game.layers[o1.layer ?? game.defLayer] ?? 0;\n\t\tconst l2 = game.layers[o2.layer ?? game.defLayer] ?? 0;\n\n\t\t// if on same layer, use \"z\" comp to decide which is on top, if given\n\t\tif (l1 == l2) {\n\t\t\treturn (o1.z ?? 0) - (o2.z ?? 0);\n\t\t} else {\n\t\t\treturn l1 - l2;\n\t\t}\n\n\t});\n\n\tif (!t) {\n\t\treturn objs;\n\t} else {\n\t\treturn objs.filter(obj => obj.is(t));\n\t}\n\n}\n\n// apply a function to all objects currently in game with tag t\nfunction every<T>(t: Tag | Tag[] | ((obj: GameObj) => T), f?: (obj: GameObj) => T) {\n\tif (typeof t === \"function\" && f === undefined) {\n\t\treturn get().forEach((obj) => obj.exists() && t(obj));\n\t} else if (typeof t === \"string\" || Array.isArray(t)) {\n\t\treturn get(t).forEach((obj) => obj.exists() && f(obj));\n\t}\n}\n\n// every but in reverse order\nfunction revery<T>(t: Tag | Tag[] | ((obj: GameObj) => T), f?: (obj: GameObj) => T) {\n\tif (typeof t === \"function\" && f === undefined) {\n\t\treturn get().reverse().forEach((obj) => obj.exists() && t(obj));\n\t} else if (typeof t === \"string\" || Array.isArray(t)) {\n\t\treturn get(t).reverse().forEach((obj) => obj.exists() && f(obj));\n\t}\n}\n\n// destroy an obj\nfunction destroy(obj: GameObj) {\n\tobj.destroy();\n}\n\n// destroy all obj with the tag\nfunction destroyAll(t: string) {\n\tevery(t, destroy);\n}\n\n// get / set gravity\nfunction gravity(g?: number): number {\n\tif (g !== undefined) {\n\t\tgame.gravity = g;\n\t}\n\treturn game.gravity;\n}\n\nfunction regCursor(c: Cursor, draw: string | ((mpos: Vec2) => void)) {\n\t// TODO\n}\n\nfunction makeCollision(target: GameObj<any>, dis: Vec2): Collision {\n\treturn {\n\t\ttarget: target,\n\t\tdisplacement: dis,\n\t\tisTop: () => dis.y > 0,\n\t\tisBottom: () => dis.y < 0,\n\t\tisLeft: () => dis.x > 0,\n\t\tisRight: () => dis.x < 0,\n\t};\n}\n\n// TODO: manage global velocity here?\nfunction pos(...args): PosComp {\n\n\treturn {\n\n\t\tid: \"pos\",\n\t\tpos: vec2(...args),\n\n\t\t// TODO: clean\n\t\tmoveBy(...args): Collision | null {\n\n\t\t\tconst p = vec2(...args);\n\t\t\tlet dx = p.x;\n\t\t\tlet dy = p.y;\n\t\t\tlet col = null;\n\n\t\t\tif (this.solid && this.area?.shape === \"rect\") {\n\n\t\t\t\tlet a1 = this.worldArea();\n\n\t\t\t\t// TODO: definitely shouln't iterate through all solid objs\n\t\t\t\tevery((other) => {\n\n\t\t\t\t\t// make sure we still exist, don't check with self, and only\n\t\t\t\t\t// check with other solid objects\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.exists()\n\t\t\t\t\t\t|| other === this\n\t\t\t\t\t\t|| !other.solid\n\t\t\t\t\t\t|| other.area?.shape !== \"rect\"\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst a2 = other.worldArea();\n\t\t\t\t\tlet md = minkDiff(a2, a1);\n\n\t\t\t\t\t// if they're already overlapping, push them away first\n\t\t\t\t\tif (testRectPoint(md, vec2(0))) {\n\n\t\t\t\t\t\tlet dist = Math.min(\n\t\t\t\t\t\t\tMath.abs(md.p1.x),\n\t\t\t\t\t\t\tMath.abs(md.p2.x),\n\t\t\t\t\t\t\tMath.abs(md.p1.y),\n\t\t\t\t\t\t\tMath.abs(md.p2.y),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst res = (() => {\n\t\t\t\t\t\t\tswitch (dist) {\n\t\t\t\t\t\t\t\tcase Math.abs(md.p1.x): return vec2(dist, 0);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p2.x): return vec2(-dist, 0);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p1.y): return vec2(0, dist);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p2.y): return vec2(0, -dist);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})();\n\n\t\t\t\t\t\tthis.pos = this.pos.sub(res);\n\n\t\t\t\t\t\t// calculate new mink diff\n\t\t\t\t\t\ta1 = this.worldArea();\n\t\t\t\t\t\tmd = minkDiff(a2, a1);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst ray = { p1: vec2(0), p2: vec2(dx, dy) };\n\t\t\t\t\tlet minT = 1;\n\t\t\t\t\tconst p1 = md.p1;\n\t\t\t\t\tconst p2 = vec2(md.p1.x, md.p2.y);\n\t\t\t\t\tconst p3 = md.p2;\n\t\t\t\t\tconst p4 = vec2(md.p2.x, md.p1.y);\n\t\t\t\t\tlet numCols = 0;\n\t\t\t\t\tconst lines = {\n\t\t\t\t\t\t\"right\": { p1: p1, p2: p2, },\n\t\t\t\t\t\t\"top\": { p1: p2, p2: p3, },\n\t\t\t\t\t\t\"left\": { p1: p3, p2: p4, },\n\t\t\t\t\t\t\"bottom\": { p1: p4, p2: p1, },\n\t\t\t\t\t};\n\n\t\t\t\t\tfor (const s in lines) {\n\t\t\t\t\t\tconst line = lines[s];\n\t\t\t\t\t\t// if moving along a side, we forgive\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t(dx === 0 && line.p1.x === 0 && line.p2.x === 0)\n\t\t\t\t\t\t\t||\n\t\t\t\t\t\t\t(dy === 0 && line.p1.y === 0 && line.p2.y === 0)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tminT = 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst t = testLineLineT(ray, line);\n\t\t\t\t\t\tif (t != null) {\n\t\t\t\t\t\t\tnumCols++;\n\t\t\t\t\t\t\tif (t < minT) {\n\t\t\t\t\t\t\t\tminT = t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// if moving away, we forgive\n\t\t\t\t\tif (\n\t\t\t\t\t\tminT < 1\n\t\t\t\t\t\t&& !(minT === 0 && numCols == 1 && !testRectPoint(md, vec2(dx, dy)))\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst dis = vec2(-dx * (1 - minT), -dy * (1 - minT));\n\t\t\t\t\t\tdx *= minT;\n\t\t\t\t\t\tdy *= minT;\n\t\t\t\t\t\tcol = makeCollision(other, dis);\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t\tthis.pos.x += dx;\n\t\t\tthis.pos.y += dy;\n\n\t\t\tif (col) {\n\t\t\t\tthis.trigger(\"collide\", col.target, col);\n\t\t\t\tcol.target.trigger(\"collide\", this, makeCollision(this, col.displacement.scale(-1)));\n\t\t\t}\n\n\t\t\treturn col;\n\n\t\t},\n\n\t\t// move with velocity (pixels per second)\n\t\tmove(...args): Collision | null {\n\t\t\treturn this.moveBy(vec2(...args).scale(dt()));\n\t\t},\n\n\t\t// move to a destination, with optional speed\n\t\tmoveTo(...args) {\n\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\treturn this.moveTo(vec2(args[0], args[1]), args[2]);\n\t\t\t}\n\t\t\tconst dest = args[0];\n\t\t\tconst speed = args[1];\n\t\t\tif (speed === undefined) {\n\t\t\t\tthis.pos = vec2(dest);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst diff = dest.sub(this.pos);\n\t\t\tif (diff.len() <= speed * dt()) {\n\t\t\t\tthis.pos = vec2(dest);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.move(diff.unit().scale(speed));\n\t\t},\n\n\t\t// get the screen position (transformed by camera)\n\t\tscreenPos(): Vec2 {\n\t\t\tif (this.fixed) {\n\t\t\t\treturn this.pos;\n\t\t\t} else {\n\t\t\t\treturn toScreen(this.pos);\n\t\t\t}\n\t\t},\n\n\t\tinspect() {\n\t\t\treturn `(${Math.round(this.pos.x)}, ${Math.round(this.pos.y)})`;\n\t\t},\n\n\t};\n\n};\n\n// TODO: allow single number assignment\nfunction scale(...args): ScaleComp {\n\tif (args.length === 0) {\n\t\treturn scale(1);\n\t}\n\treturn {\n\t\tid: \"scale\",\n\t\tscale: vec2(...args),\n\t\tscaleTo(...args) {\n\t\t\tthis.scale = vec2(...args);\n\t\t},\n\t\tinspect() {\n\t\t\tif (typeof this.scale === \"number\") {\n\t\t\t\treturn `${toFixed(this.scale, 2)}`;\n\t\t\t} else {\n\t\t\t\treturn `(${toFixed(this.scale.x, 2)}, ${toFixed(this.scale.y, 2)})`;\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction rotate(r: number): RotateComp {\n\treturn {\n\t\tid: \"rotate\",\n\t\tangle: r ?? 0,\n\t\tinspect() {\n\t\t\treturn `${Math.round(this.angle)}`;\n\t\t},\n\t};\n}\n\nfunction color(...args): ColorComp {\n\treturn {\n\t\tid: \"color\",\n\t\tcolor: rgb(...args),\n\t\tinspect() {\n\t\t\treturn this.color.str();\n\t\t},\n\t};\n}\n\nfunction toFixed(n: number, f: number) {\n\treturn Number(n.toFixed(f));\n}\n\nfunction opacity(a: number): OpacityComp {\n\treturn {\n\t\tid: \"opacity\",\n\t\topacity: a ?? 1,\n\t\tinspect() {\n\t\t\treturn `${toFixed(this.opacity, 2)}`;\n\t\t},\n\t};\n}\n\nfunction origin(o: Origin | Vec2): OriginComp {\n\tif (!o) {\n\t\tthrow new Error(\"please define an origin\");\n\t}\n\treturn {\n\t\tid: \"origin\",\n\t\torigin: o,\n\t\tinspect() {\n\t\t\tif (typeof this.origin === \"string\") {\n\t\t\t\treturn this.origin;\n\t\t\t} else {\n\t\t\t\treturn this.origin.str();\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction layer(l: string): LayerComp {\n\treturn {\n\t\tid: \"layer\",\n\t\tlayer: l,\n\t\tinspect() {\n\t\t\treturn this.layer ?? game.defLayer;\n\t\t},\n\t};\n}\n\nfunction z(z: number): ZComp {\n\treturn {\n\t\tid: \"z\",\n\t\tz: z,\n\t\tinspect() {\n\t\t\treturn `${this.z}`;\n\t\t},\n\t};\n}\n\nfunction follow(obj: GameObj, offset?: Vec2): FollowComp {\n\treturn {\n\t\tid: \"follow\",\n\t\trequire: [ \"pos\", ],\n\t\tfollow: {\n\t\t\tobj: obj,\n\t\t\toffset: offset ?? vec2(0),\n\t\t},\n\t\tadd() {\n\t\t\tif (obj.exists()) {\n\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset);\n\t\t\t}\n\t\t},\n\t\tupdate() {\n\t\t\tif (obj.exists()) {\n\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset);\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction move(direction: number | Vec2, speed: number): MoveComp {\n\tconst d = typeof direction === \"number\" ? dir(direction) : direction.unit();\n\treturn {\n\t\tid: \"move\",\n\t\trequire: [ \"pos\", ],\n\t\tupdate() {\n\t\t\tthis.move(d.scale(speed));\n\t\t},\n\t};\n}\n\nfunction cleanup(time: number = 0): CleanupComp {\n\tlet timer = 0;\n\treturn {\n\t\tid: \"cleanup\",\n\t\trequire: [ \"pos\", \"area\", ],\n\t\tupdate() {\n\t\t\tconst screenRect = {\n\t\t\t\tp1: vec2(0, 0),\n\t\t\t\tp2: vec2(width(), height()),\n\t\t\t}\n\t\t\tif (testAreaRect(this.screenArea(), screenRect)) {\n\t\t\t\ttimer = 0;\n\t\t\t} else {\n\t\t\t\ttimer += dt();\n\t\t\t\tif (timer >= time) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction area(opt: AreaCompOpt = {}): AreaComp {\n\n\tconst colliding = {};\n\n\treturn {\n\n\t\tid: \"area\",\n\n\t\tadd() {\n\t\t\tif (this.area.cursor) {\n\t\t\t\tthis.hovers(() => {\n\t\t\t\t\tapp.cursor(this.area.cursor);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tarea: {\n\t\t\tshape: \"rect\",\n\t\t\toffset: opt.offset ?? vec2(0),\n\t\t\twidth: opt.width,\n\t\t\theight: opt.height,\n\t\t\tscale: opt.scale ?? vec2(1),\n\t\t\tcursor: opt.cursor,\n\t\t},\n\n\t\tisClicked(): boolean {\n\t\t\treturn app.isMousePressed() && this.isHovering();\n\t\t},\n\n\t\tisHovering() {\n\t\t\tconst mpos = this.fixed ? mousePos() : mouseWorldPos();\n\t\t\treturn this.hasPoint(mpos);\n\t\t},\n\n\t\tisColliding(other) {\n\t\t\tif (!other.area || !other.exists()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = other.worldArea();\n\t\t\treturn testAreaArea(a1, a2);\n\t\t},\n\n\t\tisTouching(other) {\n\t\t\tif (!other.area || !other.exists()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// TODO: support other shapes\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = other.worldArea();\n\t\t\treturn testRectRect2(a1, a2);\n\t\t},\n\n\t\tonClick(f: () => void): EventCanceller {\n\t\t\treturn this.onUpdate(() => {\n\t\t\t\tif (this.isClicked()) {\n\t\t\t\t\tf();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonHover(onHover: () => void, onNotHover: () => void): EventCanceller {\n\t\t\treturn this.onUpdate(() => {\n\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\tonHover();\n\t\t\t\t} else {\n\t\t\t\t\tif (onNotHover) {\n\t\t\t\t\t\tonNotHover();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonCollide(tag: Tag, f: (o: GameObj, col?: Collision) => void): EventCanceller {\n\t\t\tconst e1 = this.onUpdate(() => this._checkCollisions(tag, f));\n\t\t\tconst e2 = this.on(\"collide\", (obj, col) => obj.is(tag) && f(obj, col));\n\t\t\treturn () => [e1, e2].forEach((f) => f());\n\t\t},\n\n\t\tclicks(...args) {\n\t\t\treturn this.onClick(...args);\n\t\t},\n\n\t\thovers(...args) {\n\t\t\treturn this.onHover(...args);\n\t\t},\n\n\t\tcollides(...args) {\n\t\t\treturn this.onCollide(...args);\n\t\t},\n\n\t\thasPoint(pt: Vec2): boolean {\n\t\t\treturn testAreaPoint(this.worldArea(), pt);\n\t\t},\n\n\t\t// push an obj out of another if they're overlapped\n\t\tpushOut(obj: GameObj): Vec2 | null {\n\n\t\t\tif (obj === this) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// TODO: support other shapes\n\t\t\tif (obj.area?.shape !== \"rect\") {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = obj.worldArea();\n\t\t\tconst md = minkDiff(a1, a2);\n\n\t\t\tif (!testRectPoint(md, vec2(0))) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet dist = Math.min(\n\t\t\t\tMath.abs(md.p1.x),\n\t\t\t\tMath.abs(md.p2.x),\n\t\t\t\tMath.abs(md.p1.y),\n\t\t\t\tMath.abs(md.p2.y),\n\t\t\t);\n\n\t\t\tconst res = (() => {\n\t\t\t\tswitch (dist) {\n\t\t\t\t\tcase Math.abs(md.p1.x): return vec2(dist, 0);\n\t\t\t\t\tcase Math.abs(md.p2.x): return vec2(-dist, 0);\n\t\t\t\t\tcase Math.abs(md.p1.y): return vec2(0, dist);\n\t\t\t\t\tcase Math.abs(md.p2.y): return vec2(0, -dist);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tthis.pos = this.pos.add(res);\n\n\t\t},\n\n\t\t// push object out of other solid objects\n\t\tpushOutAll() {\n\t\t\tevery(this.pushOut);\n\t\t},\n\n\t\t// @ts-ignore\n\t\t_checkCollisions(tag: Tag) {\n\n\t\t\tevery(tag, (obj) => {\n\n\t\t\t\tif (this === obj || !this.exists() || colliding[obj._id]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.isColliding(obj)) {\n\t\t\t\t\tthis.trigger(\"collide\", obj, null);\n\t\t\t\t\tcolliding[obj._id] = obj;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tfor (const id in colliding) {\n\t\t\t\tconst obj = colliding[id];\n\t\t\t\tif (!this.isColliding(obj)) {\n\t\t\t\t\tdelete colliding[id];\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\t// TODO: cache\n\t\t// TODO: use matrix mult for more accuracy and rotation?\n\t\tworldArea(): Area {\n\n\t\t\tlet w = this.area.width ?? this.width;\n\t\t\tlet h = this.area.height ?? this.height;\n\n\t\t\tif (w == null || h == null) {\n\t\t\t\tthrow new Error(\"failed to get area dimension\");\n\t\t\t}\n\n\t\t\tconst scale = vec2(this.scale ?? 1).scale(this.area.scale);\n\n\t\t\tw *= scale.x;\n\t\t\th *= scale.y;\n\n\t\t\tconst orig = originPt(this.origin || DEF_ORIGIN);\n\t\t\tconst pos = (this.pos ?? vec2(0))\n\t\t\t\t.add(this.area.offset)\n\t\t\t\t.sub(orig.add(1, 1).scale(0.5).scale(w, h));\n\n\t\t\treturn {\n\t\t\t\tshape: \"rect\",\n\t\t\t\tp1: pos,\n\t\t\t\tp2: vec2(pos.x + w, pos.y + h),\n\t\t\t};\n\n\t\t},\n\n\t\tscreenArea(): Area {\n\t\t\tconst area = this.worldArea();\n\t\t\tif (this.fixed) {\n\t\t\t\treturn area;\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tshape: \"rect\",\n\t\t\t\t\tp1: game.camMatrix.multVec2(area.p1),\n\t\t\t\t\tp2: game.camMatrix.multVec2(area.p2),\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\n\t};\n\n}\n\n// make the list of common render properties from the \"pos\", \"scale\", \"color\", \"opacity\", \"rotate\", \"origin\", \"outline\", and \"shader\" components of a character\nfunction getRenderProps(obj: GameObj<any>) {\n\treturn {\n\t\tpos: obj.pos,\n\t\tscale: obj.scale,\n\t\tcolor: obj.color,\n\t\topacity: obj.opacity,\n\t\tangle: obj.angle,\n\t\torigin: obj.origin,\n\t\toutline: obj.outline,\n\t\tshader: assets.shaders[obj.shader],\n\t\tuniform: obj.uniform,\n\t};\n}\n\ninterface SpriteCurAnim {\n\tname: string,\n\ttimer: number,\n\tloop: boolean,\n\tspeed: number,\n\tpingpong: boolean,\n\tonEnd: () => void,\n}\n\n// TODO: clean\nfunction sprite(id: string | SpriteData, opt: SpriteCompOpt = {}): SpriteComp {\n\n\tlet spr = null;\n\tlet curAnim: SpriteCurAnim | null = null;\n\n\tfunction calcTexScale(tex: GfxTexture, q: Quad, w?: number, h?: number): Vec2 {\n\t\tconst scale = vec2(1, 1);\n\t\tif (w && h) {\n\t\t\tscale.x = w / (tex.width * q.w);\n\t\t\tscale.y = h / (tex.height * q.h);\n\t\t} else if (w) {\n\t\t\tscale.x = w / (tex.width * q.w);\n\t\t\tscale.y = scale.x;\n\t\t} else if (h) {\n\t\t\tscale.y = h / (tex.height * q.h);\n\t\t\tscale.x = scale.y;\n\t\t}\n\t\treturn scale;\n\t}\n\n\treturn {\n\n\t\tid: \"sprite\",\n\t\t// TODO: allow update\n\t\twidth: 0,\n\t\theight: 0,\n\t\tframe: opt.frame || 0,\n\t\tquad: opt.quad || quad(0, 0, 1, 1),\n\t\tanimSpeed: opt.animSpeed ?? 1,\n\n\t\tload() {\n\n\t\t\tif (typeof id === \"string\") {\n\t\t\t\tspr = assets.sprites[id];\n\t\t\t} else {\n\t\t\t\tspr = id;\n\t\t\t}\n\n\t\t\tif (!spr) {\n\t\t\t\tthrow new Error(`sprite not found: \"${id}\"`);\n\t\t\t}\n\n\t\t\tlet q = { ...spr.frames[0] };\n\n\t\t\tif (opt.quad) {\n\t\t\t\tq = q.scale(opt.quad);\n\t\t\t}\n\n\t\t\tconst scale = calcTexScale(spr.tex, q, opt.width, opt.height);\n\n\t\t\tthis.width = spr.tex.width * q.w * scale.x;\n\t\t\tthis.height = spr.tex.height * q.h * scale.y;\n\n\t\t\tif (opt.anim) {\n\t\t\t\tthis.play(opt.anim);\n\t\t\t}\n\n\t\t},\n\n\t\tdraw() {\n\t\t\tdrawSprite({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\tsprite: spr,\n\t\t\t\tframe: this.frame,\n\t\t\t\tquad: this.quad,\n\t\t\t\tflipX: opt.flipX,\n\t\t\t\tflipY: opt.flipY,\n\t\t\t\ttiled: opt.tiled,\n\t\t\t\twidth: opt.width,\n\t\t\t\theight: opt.height,\n\t\t\t});\n\t\t},\n\n\t\tupdate() {\n\n\t\t\tif (!curAnim) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst anim = spr.anims[curAnim.name];\n\n\t\t\tif (typeof anim === \"number\") {\n\t\t\t\tthis.frame = anim;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (anim.speed === 0) {\n\t\t\t\tthrow new Error(\"sprite anim speed cannot be 0\");\n\t\t\t}\n\n\t\t\tcurAnim.timer += dt() * this.animSpeed;\n\n\t\t\tif (curAnim.timer >= (1 / curAnim.speed)) {\n\t\t\t\tcurAnim.timer = 0;\n\t\t\t\t// TODO: clean up\n\t\t\t\tif (anim.from > anim.to) {\n\t\t\t\t\tthis.frame--;\n\t\t\t\t\tif (this.frame < anim.to) {\n\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\tthis.frame = anim.from;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.frame++;\n\t\t\t\t\t\t\tcurAnim.onEnd();\n\t\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.frame++;\n\t\t\t\t\tif (this.frame > anim.to) {\n\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\tthis.frame = anim.from;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.frame--;\n\t\t\t\t\t\t\tcurAnim.onEnd();\n\t\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\t// TODO: this opt should be used instead of the sprite data opt, if given\n\t\tplay(name: string, opt: SpriteAnimPlayOpt = {}) {\n\n\t\t\tif (!spr) {\n\t\t\t\tonLoad(() => {\n\t\t\t\t\tthis.play(name);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst anim = spr.anims[name];\n\n\t\t\tif (anim == null) {\n\t\t\t\tthrow new Error(`anim not found: ${name}`);\n\t\t\t}\n\n\t\t\tif (curAnim) {\n\t\t\t\tthis.stop();\n\t\t\t}\n\n\t\t\tcurAnim = {\n\t\t\t\tname: name,\n\t\t\t\ttimer: 0,\n\t\t\t\tloop: opt.loop ?? anim.loop ?? false,\n\t\t\t\tpingpong: opt.pingpong ?? anim.pingpong ?? false,\n\t\t\t\tspeed: opt.speed ?? anim.speed ?? 10,\n\t\t\t\tonEnd: opt.onEnd ?? (() => {}),\n\t\t\t};\n\n\t\t\tif (typeof anim === \"number\") {\n\t\t\t\tthis.frame = anim;\n\t\t\t} else {\n\t\t\t\tthis.frame = anim.from;\n\t\t\t}\n\n\t\t\t// TODO: \"animPlay\" is deprecated\n\t\t\tthis.trigger(\"animPlay\", name);\n\t\t\tthis.trigger(\"animStart\", name);\n\n\t\t},\n\n\t\tstop() {\n\t\t\tif (!curAnim) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst prevAnim = curAnim.name;\n\t\t\tcurAnim = null;\n\t\t\tthis.trigger(\"animEnd\", prevAnim);\n\t\t},\n\n\t\tnumFrames() {\n\t\t\tif (!spr) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn spr.frames.length;\n\t\t},\n\n\t\tcurAnim() {\n\t\t\treturn curAnim?.name;\n\t\t},\n\n\t\tflipX(b: boolean) {\n\t\t\topt.flipX = b;\n\t\t},\n\n\t\tflipY(b: boolean) {\n\t\t\topt.flipY = b;\n\t\t},\n\n\t\tonAnimEnd(name: string, action: () => void): EventCanceller {\n\t\t\treturn this.on(\"animEnd\", (anim) => {\n\t\t\t\tif (anim === name) {\n\t\t\t\t\taction();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonAnimStart(name: string, action: () => void): EventCanceller {\n\t\t\treturn this.on(\"animStart\", (anim) => {\n\t\t\t\tif (anim === name) {\n\t\t\t\t\taction();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tinspect() {\n\t\t\tlet msg = \"\";\n\t\t\tif (typeof id === \"string\") {\n\t\t\t\tmsg += JSON.stringify(id);\n\t\t\t} else {\n\t\t\t\tmsg += \"[blob]\";\n\t\t\t}\n\t\t\treturn msg;\n\t\t},\n\n\t};\n\n}\n\nfunction text(t: string, opt: TextCompOpt = {}): TextComp {\n\n\tfunction update() {\n\n\t\tconst name = this.font ?? gopt.font ?? DEF_FONT;\n\t\tconst font = assets.fonts[name];\n\n\t\tif (!font) {\n\t\t\tthrow new Error(`font not found: \"${name}\"`);\n\t\t}\n\n\t\tconst ftext = gfx.fmtText({\n\t\t\t...getRenderProps(this),\n\t\t\ttext: this.text + \"\",\n\t\t\tsize: this.textSize,\n\t\t\tfont: font,\n\t\t\twidth: opt.width,\n\t\t\ttransform: opt.transform,\n\t\t});\n\n\t\tthis.width = ftext.width / (this.scale?.x || 1);\n\t\tthis.height = ftext.height / (this.scale?.y || 1);\n\n\t\treturn ftext;\n\n\t};\n\n\treturn {\n\n\t\tid: \"text\",\n\t\ttext: t,\n\t\ttextSize: opt.size,\n\t\tfont: opt.font,\n\t\twidth: 0,\n\t\theight: 0,\n\n\t\tload() {\n\t\t\tupdate.call(this);\n\t\t},\n\n\t\tdraw() {\n\t\t\tgfx.drawFmtText(update.call(this));\n\t\t},\n\n\t};\n\n}\n\nfunction rect(w: number, h: number, opt: RectCompOpt = {}): RectComp {\n\treturn {\n\t\tid: \"rect\",\n\t\twidth: w,\n\t\theight: h,\n\t\tradius: opt.radius || 0,\n\t\tdraw() {\n\t\t\tgfx.drawRect({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height,\n\t\t\t\tradius: this.radius,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`;\n\t\t},\n\t};\n}\n\nfunction uvquad(w: number, h: number): UVQuadComp {\n\treturn {\n\t\tid: \"rect\",\n\t\twidth: w,\n\t\theight: h,\n\t\tdraw() {\n\t\t\tgfx.drawUVQuad({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`;\n\t\t},\n\t};\n}\n\nfunction circle(radius: number): CircleComp {\n\treturn {\n\t\tid: \"circle\",\n\t\tradius: radius,\n\t\tdraw() {\n\t\t\tgfx.drawCircle({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\tradius: this.radius,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.radius)}`;\n\t\t},\n\t};\n}\n\nfunction outline(width: number = 1, color: Color = rgb(0, 0, 0)): OutlineComp {\n\treturn {\n\t\tid: \"outline\",\n\t\toutline: {\n\t\t\twidth,\n\t\t\tcolor,\n\t\t},\n\t};\n}\n\nfunction timer(n?: number, action?: () => void): TimerComp {\n\tconst timers: IDList<Timer> = new IDList();\n\tif (n && action) {\n\t\ttimers.pushd({\n\t\t\ttime: n,\n\t\t\taction: action,\n\t\t});\n\t}\n\treturn {\n\t\tid: \"timer\",\n\t\twait(n: number, action: () => void): EventCanceller {\n\t\t\treturn timers.pushd({\n\t\t\t\ttime: n,\n\t\t\t\taction: action,\n\t\t\t});\n\t\t},\n\t\tupdate() {\n\t\t\ttimers.forEach((timer, id) => {\n\t\t\t\ttimer.time -= dt();\n\t\t\t\tif (timer.time <= 0) {\n\t\t\t\t\ttimer.action.call(this);\n\t\t\t\t\ttimers.delete(id);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t};\n}\n\n// maximum y velocity with body()\nconst DEF_JUMP_FORCE = 640;\nconst MAX_VEL = 65536;\n\n// TODO: land on wall\nfunction body(opt: BodyCompOpt = {}): BodyComp {\n\n\tlet velY = 0;\n\tlet curPlatform: GameObj | null = null;\n\tlet lastPlatformPos = null;\n\tlet canDouble = true;\n\n\treturn {\n\n\t\tid: \"body\",\n\t\trequire: [ \"pos\", \"area\", ],\n\t\tjumpForce: opt.jumpForce ?? DEF_JUMP_FORCE,\n\t\tweight: opt.weight ?? 1,\n\t\tsolid: opt.solid ?? true,\n\n\t\tupdate() {\n\n\t\t\tlet justFall = false;\n\n\t\t\t// check if loses current platform\n\t\t\tif (curPlatform) {\n\n\t\t\t\tconst a1 = this.worldArea();\n\t\t\t\tconst a2 = curPlatform.worldArea();\n\t\t\t\tconst y1 = a1.p2.y;\n\t\t\t\tconst y2 = a2.p1.y;\n\t\t\t\tconst x1 = a1.p1.x;\n\t\t\t\tconst x2 = a1.p2.x;\n\t\t\t\tconst x3 = a2.p1.x;\n\t\t\t\tconst x4 = a2.p2.x;\n\n\t\t\t\tif (\n\t\t\t\t\t!curPlatform.exists()\n\t\t\t\t\t|| y1 !== y2\n\t\t\t\t\t|| x2 < x3\n\t\t\t\t\t|| x1 > x4\n\t\t\t\t) {\n\t\t\t\t\tthis.trigger(\"fall\", curPlatform);\n\t\t\t\t\tcurPlatform = null;\n\t\t\t\t\tlastPlatformPos = null;\n\t\t\t\t\tjustFall = true;\n\t\t\t\t} else {\n\t\t\t\t\tif (lastPlatformPos && curPlatform.pos) {\n\t\t\t\t\t\t// TODO: moveBy?\n\t\t\t\t\t\t// sticky platform\n\t\t\t\t\t\tthis.pos = this.pos.add(curPlatform.pos.sub(lastPlatformPos));\n\t\t\t\t\t\tlastPlatformPos = curPlatform.pos.clone();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!curPlatform) {\n\n\t\t\t\tconst col = this.move(0, velY);\n\n\t\t\t\t// check if grounded to a new platform\n\t\t\t\tif (col) {\n\t\t\t\t\tif (col.isBottom()) {\n\t\t\t\t\t\tcurPlatform = col.target;\n\t\t\t\t\t\tconst oy = velY;\n\t\t\t\t\t\tvelY = 0;\n\t\t\t\t\t\tif (curPlatform.pos) {\n\t\t\t\t\t\t\tlastPlatformPos = curPlatform.pos.clone();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!justFall) {\n\t\t\t\t\t\t\tthis.trigger(\"ground\", curPlatform);\n\t\t\t\t\t\t\tcanDouble = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (col.isTop()) {\n\t\t\t\t\t\tvelY = 0;\n\t\t\t\t\t\tthis.trigger(\"headbutt\", col.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvelY += gravity() * this.weight * dt();\n\t\t\t\tvelY = Math.min(velY, opt.maxVel ?? MAX_VEL);\n\n\t\t\t}\n\n\t\t},\n\n\t\tcurPlatform(): GameObj | null {\n\t\t\treturn curPlatform;\n\t\t},\n\n\t\tisGrounded() {\n\t\t\treturn curPlatform !== null;\n\t\t},\n\n\t\tgrounded(): boolean {\n\t\t\treturn this.isGrounded();\n\t\t},\n\n\t\tisFalling(): boolean {\n\t\t\treturn velY > 0;\n\t\t},\n\n\t\tfalling(): boolean {\n\t\t\treturn this.isFalling();\n\t\t},\n\n\t\tjump(force: number) {\n\t\t\tcurPlatform = null;\n\t\t\tlastPlatformPos = null;\n\t\t\tvelY = -force || -this.jumpForce;\n\t\t},\n\n\t\tdoubleJump(force: number) {\n\t\t\tif (this.isGrounded()) {\n\t\t\t\tthis.jump(force);\n\t\t\t} else if (canDouble) {\n\t\t\t\tcanDouble = false;\n\t\t\t\tthis.jump(force);\n\t\t\t\tthis.trigger(\"doubleJump\");\n\t\t\t}\n\t\t},\n\n\t\tonGround(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"ground\", action);\n\t\t},\n\n\t\tonFall(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"fall\", action);\n\t\t},\n\n\t\tonHeadbutt(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"headbutt\", action);\n\t\t},\n\n\t\tonDoubleJump(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"doubleJump\", action);\n\t\t},\n\n\t};\n\n}\n\nfunction shader(id: string, uniform: Uniform = {}): ShaderComp {\n\tconst shader = assets.shaders[id];\n\treturn {\n\t\tid: \"shader\",\n\t\tshader: id,\n\t\tuniform: uniform,\n\t};\n}\n\nfunction solid(): SolidComp {\n\treturn {\n\t\tid: \"solid\",\n\t\trequire: [ \"area\", ],\n\t\tsolid: true,\n\t};\n}\n\nfunction fixed(): FixedComp {\n\treturn {\n\t\tid: \"fixed\",\n\t\tfixed: true,\n\t};\n}\n\nfunction stay(): StayComp {\n\treturn {\n\t\tid: \"stay\",\n\t\tstay: true,\n\t};\n}\n\nfunction health(hp: number): HealthComp {\n\tif (hp == null) {\n\t\tthrow new Error(\"health() requires the initial amount of hp\");\n\t}\n\treturn {\n\t\tid: \"health\",\n\t\thurt(n: number = 1) {\n\t\t\tthis.setHP(hp - n);\n\t\t\tthis.trigger(\"hurt\");\n\t\t},\n\t\theal(n: number = 1) {\n\t\t\tthis.setHP(hp + n);\n\t\t\tthis.trigger(\"heal\");\n\t\t},\n\t\thp(): number {\n\t\t\treturn hp;\n\t\t},\n\t\tsetHP(n: number) {\n\t\t\thp = n;\n\t\t\tif (hp <= 0) {\n\t\t\t\tthis.trigger(\"death\");\n\t\t\t}\n\t\t},\n\t\tonHurt(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"hurt\", action);\n\t\t},\n\t\tonHeal(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"heal\", action);\n\t\t},\n\t\tonDeath(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"death\", action);\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${hp}`;\n\t\t},\n\t};\n}\n\nfunction lifespan(time: number, opt: LifespanCompOpt = {}): LifespanComp {\n\tif (time == null) {\n\t\tthrow new Error(\"lifespan() requires time\");\n\t}\n\tlet timer = 0;\n\tconst fade = opt.fade ?? 0;\n\tconst startFade = Math.max((time - fade), 0);\n\treturn {\n\t\tid: \"lifespan\",\n\t\tupdate() {\n\t\t\ttimer += dt();\n\t\t\t// TODO: don't assume 1 as start opacity\n\t\t\tif (timer >= startFade) {\n\t\t\t\tthis.opacity = map(timer, startFade, time, 1, 0);\n\t\t\t}\n\t\t\tif (timer >= time) {\n\t\t\t\tthis.destroy();\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction state(initState: string, stateList?: string[]): StateComp {\n\n\tif (!initState) {\n\t\tthrow new Error(\"state() requires an initial state\");\n\t}\n\n\tconst events = {};\n\n\tfunction initStateHook(state: string) {\n\t\tif (!events[state]) {\n\t\t\tevents[state] = {\n\t\t\t\tenter: [],\n\t\t\t\tleave: [],\n\t\t\t\tupdate: [],\n\t\t\t\tdraw: [],\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction on(event, state, action) {\n\t\tinitStateHook(state);\n\t\tevents[state][event].push(action);\n\t}\n\n\tfunction trigger(event, state, ...args) {\n\t\tinitStateHook(state);\n\t\tevents[state][event].forEach((action) => action(...args));\n\t}\n\n\treturn {\n\t\tid: \"state\",\n\t\tstate: initState,\n\t\tenterState(state: string, ...args) {\n\t\t\tif (stateList && !stateList.includes(state)) {\n\t\t\t\tthrow new Error(`State not found: ${state}`);\n\t\t\t}\n\t\t\ttrigger(\"leave\", this.state, ...args);\n\t\t\tthis.state = state;\n\t\t\ttrigger(\"enter\", this.state, ...args);\n\t\t},\n\t\tonStateEnter(state: string, action: () => void) {\n\t\t\ton(\"enter\", state, action);\n\t\t},\n\t\tonStateUpdate(state: string, action: () => void) {\n\t\t\ton(\"update\", state, action);\n\t\t},\n\t\tonStateDraw(state: string, action: () => void) {\n\t\t\ton(\"draw\", state, action);\n\t\t},\n\t\tonStateLeave(state: string, action: () => void) {\n\t\t\ton(\"leave\", state, action);\n\t\t},\n\t\tupdate() {\n\t\t\ttrigger(\"update\", this.state);\n\t\t},\n\t\tdraw() {\n\t\t\ttrigger(\"draw\", this.state);\n\t\t},\n\t};\n\n}\n\nconst debug: Debug = {\n\tinspect: false,\n\ttimeScale: 1,\n\tshowLog: true,\n\tfps: app.fps,\n\tobjCount(): number {\n\t\treturn game.objs.size;\n\t},\n\tstepFrame: updateFrame,\n\tdrawCalls: gfx.drawCalls,\n\tclearLog: logger.clear,\n\tlog: (msg) => logger.info(`[${app.time().toFixed(2)}] ${msg}`),\n\terror: (msg) => logger.error(`[${app.time().toFixed(2)}] ${msg}`),\n\tcurRecording: null,\n\tget paused() {\n\t\treturn game.paused;\n\t},\n\tset paused(v) {\n\t\tgame.paused = v;\n\t\tif (v) {\n\t\t\taudio.ctx.suspend();\n\t\t} else {\n\t\t\taudio.ctx.resume();\n\t\t}\n\t}\n};\n\nfunction onLoad(cb: () => void): void {\n\tif (game.loaded) {\n\t\tcb();\n\t} else {\n\t\tgame.on(\"load\", cb);\n\t}\n}\n\nfunction scene(id: SceneID, def: SceneDef) {\n\tgame.scenes[id] = def;\n}\n\nfunction go(id: SceneID, ...args) {\n\n\tif (!game.scenes[id]) {\n\t\tthrow new Error(`scene not found: ${id}`);\n\t}\n\n\tconst cancel = game.on(\"updateStart\", () => {\n\n\t\tgame.events = {};\n\n\t\tgame.objEvents = {\n\t\t\tadd: new IDList(),\n\t\t\tupdate: new IDList(),\n\t\t\tdraw: new IDList(),\n\t\t\tdestroy: new IDList(),\n\t\t};\n\n\t\tgame.objs.forEach((obj) => {\n\t\t\tif (!obj.stay) {\n\t\t\t\tdestroy(obj);\n\t\t\t}\n\t\t});\n\n\t\tgame.timers = new IDList();\n\n\t\t// cam\n\t\tgame.cam = {\n\t\t\tpos: center(),\n\t\t\tscale: vec2(1, 1),\n\t\t\tangle: 0,\n\t\t\tshake: 0,\n\t\t};\n\n\t\tgame.camMousePos = app.mousePos();\n\t\tgame.camMatrix = mat4();\n\n\t\tgame.layers = {};\n\t\tgame.defLayer = null;\n\t\tgame.gravity = DEF_GRAVITY;\n\n\t\tgame.scenes[id](...args);\n\n\t\tif (gopt.debug !== false) {\n\t\t\tenterDebugMode();\n\t\t}\n\n\t\tif (gopt.burp) {\n\t\t\tenterBurpMode();\n\t\t}\n\n\t\tcancel();\n\n\t});\n\n}\n\nfunction getData<T>(key: string, def?: T): T {\n\ttry {\n\t\treturn JSON.parse(window.localStorage[key]);\n\t} catch {\n\t\tif (def) {\n\t\t\tsetData(key, def);\n\t\t\treturn def;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nfunction setData(key: string, data: any) {\n\twindow.localStorage[key] = JSON.stringify(data);\n}\n\nfunction plug<T>(plugin: KaboomPlugin<T>): MergeObj<T> & KaboomCtx {\n\tconst funcs = plugin(ctx);\n\tfor (const k in funcs) {\n\t\t// @ts-ignore\n\t\tctx[k] = funcs[k];\n\t\tif (gopt.global !== false) {\n\t\t\t// @ts-ignore\n\t\t\twindow[k] = funcs[k];\n\t\t}\n\t}\n\treturn ctx as unknown as MergeObj<T> & KaboomCtx;\n}\n\nfunction center(): Vec2 {\n\treturn vec2(width() / 2, height() / 2);\n}\n\nfunction grid(level: Level, p: Vec2) {\n\n\treturn {\n\n\t\tid: \"grid\",\n\t\tgridPos: p.clone(),\n\n\t\tsetGridPos(...args) {\n\t\t\tconst p = vec2(...args);\n\t\t\tthis.gridPos = p.clone();\n\t\t\tthis.pos = vec2(\n\t\t\t\tlevel.offset().x + this.gridPos.x * level.gridWidth(),\n\t\t\t\tlevel.offset().y + this.gridPos.y * level.gridHeight()\n\t\t\t);\n\t\t},\n\n\t\tmoveLeft() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(-1, 0)));\n\t\t},\n\n\t\tmoveRight() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(1, 0)));\n\t\t},\n\n\t\tmoveUp() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(0, -1)));\n\t\t},\n\n\t\tmoveDown() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(0, 1)));\n\t\t},\n\n\t};\n\n}\n\nfunction addLevel(map: string[], opt: LevelOpt): Level {\n\n\tif (!opt.width || !opt.height) {\n\t\tthrow new Error(\"Must provide level grid width & height.\");\n\t}\n\n\tconst objs: GameObj[] = [];\n\tconst offset = vec2(opt.pos || vec2(0));\n\tlet longRow = 0;\n\n\tconst level = {\n\n\t\toffset() {\n\t\t\treturn offset.clone();\n\t\t},\n\n\t\tgridWidth() {\n\t\t\treturn opt.width;\n\t\t},\n\n\t\tgridHeight() {\n\t\t\treturn opt.height;\n\t\t},\n\n\t\tgetPos(...args): Vec2 {\n\t\t\tconst p = vec2(...args);\n\t\t\treturn vec2(\n\t\t\t\toffset.x + p.x * opt.width,\n\t\t\t\toffset.y + p.y * opt.height\n\t\t\t);\n\t\t},\n\n\t\tspawn(sym: string, ...args): GameObj {\n\n\t\t\tconst p = vec2(...args);\n\n\t\t\tconst comps = (() => {\n\t\t\t\tif (opt[sym]) {\n\t\t\t\t\tif (typeof opt[sym] !== \"function\") {\n\t\t\t\t\t\tthrow new Error(\"level symbol def must be a function returning a component list\");\n\t\t\t\t\t}\n\t\t\t\t\treturn opt[sym](p);\n\t\t\t\t} else if (opt.any) {\n\t\t\t\t\treturn opt.any(sym, p);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tif (!comps) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst posComp = vec2(\n\t\t\t\toffset.x + p.x * opt.width,\n\t\t\t\toffset.y + p.y * opt.height\n\t\t\t);\n\n\t\t\tfor (const comp of comps) {\n\t\t\t\tif (comp.id === \"pos\") {\n\t\t\t\t\tposComp.x += comp.pos.x;\n\t\t\t\t\tposComp.y += comp.pos.y;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcomps.push(pos(posComp));\n\t\t\tcomps.push(grid(this, p));\n\n\t\t\tconst obj = add(comps);\n\n\t\t\tobjs.push(obj);\n\n\t\t\treturn obj;\n\n\t\t},\n\n\t\twidth() {\n\t\t\treturn longRow * opt.width;\n\t\t},\n\n\t\theight() {\n\t\t\treturn map.length * opt.height;\n\t\t},\n\n\t\tdestroy() {\n\t\t\tfor (const obj of objs) {\n\t\t\t\tdestroy(obj);\n\t\t\t}\n\t\t},\n\n\t};\n\n\tmap.forEach((row, i) => {\n\n\t\tconst syms = row.split(\"\");\n\n\t\tlongRow = Math.max(syms.length, longRow);\n\n\t\tsyms.forEach((sym, j) => {\n\t\t\tlevel.spawn(sym, vec2(j, i));\n\t\t});\n\n\t});\n\n\treturn level;\n\n}\n\nfunction record(frameRate?): Recording {\n\n\tconst stream = app.canvas.captureStream(frameRate);\n\tconst audioDest = audio.ctx.createMediaStreamDestination();\n\n\taudio.masterNode.connect(audioDest)\n\n\tconst audioStream = audioDest.stream;\n\tconst [firstAudioTrack] = audioStream.getAudioTracks();\n\n\t// TODO: Enabling audio results in empty video if no audio received\n\t// stream.addTrack(firstAudioTrack);\n\n\tconst recorder = new MediaRecorder(stream);\n\tconst chunks = [];\n\n\trecorder.ondataavailable = (e) => {\n\t\tif (e.data.size > 0) {\n\t\t\tchunks.push(e.data);\n\t\t}\n\t};\n\n\trecorder.onerror = (e) => {\n\t\taudio.masterNode.disconnect(audioDest)\n\t\tstream.getTracks().forEach(t => t.stop());\n\t};\n\n\trecorder.start();\n\n\treturn {\n\n\t\tresume() {\n\t\t\trecorder.resume();\n\t\t},\n\n\t\tpause() {\n\t\t\trecorder.pause();\n\t\t},\n\n\t\tdownload(filename = \"kaboom.mp4\") {\n\n\t\t\trecorder.onstop = () => {\n\t\t\t\tdownloadBlob(new Blob(chunks, {\n\t\t\t\t\ttype: \"video/mp4\",\n\t\t\t\t}), filename);\n\t\t\t}\n\n\t\t\trecorder.stop();\n\t\t\t// cleanup\n\t\t\taudio.masterNode.disconnect(audioDest)\n\t\t\tstream.getTracks().forEach(t => t.stop());\n\n\t\t}\n\t};\n\n}\n\nconst ctx: KaboomCtx = {\n\t// asset load\n\tloadRoot: assets.loadRoot,\n\tloadSprite: assets.loadSprite,\n\tloadSpriteAtlas: assets.loadSpriteAtlas,\n\tloadSound: assets.loadSound,\n\tloadFont: assets.loadFont,\n\tloadShader: assets.loadShader,\n\tloadAseprite: assets.loadAseprite,\n\tloadPedit: assets.loadPedit,\n\tloadBean: assets.loadBean,\n\tload: assets.load,\n\t// query\n\twidth,\n\theight,\n\tcenter,\n\tdt,\n\ttime: app.time,\n\tscreenshot: app.screenshot,\n\trecord: record,\n\tfocused: app.isFocused,\n\tisFocused: app.isFocused,\n\tfocus: app.focus,\n\tcursor: app.cursor,\n\tregCursor,\n\tfullscreen: app.fullscreen,\n\tisFullscreen: app.isFullscreen,\n\tonLoad,\n\tready: onLoad,\n\tisTouch: () => app.isTouch,\n\t// misc\n\tlayers,\n\tcamPos,\n\tcamScale,\n\tcamRot,\n\tshake,\n\ttoScreen,\n\ttoWorld,\n\tgravity,\n\t// obj\n\tadd,\n\treadd,\n\tdestroy,\n\tdestroyAll,\n\tget,\n\tevery,\n\trevery,\n\t// comps\n\tpos,\n\tscale,\n\trotate,\n\tcolor,\n\topacity,\n\torigin,\n\tlayer,\n\tarea,\n\tsprite,\n\ttext,\n\trect,\n\tcircle,\n\tuvquad,\n\toutline,\n\tbody,\n\tshader,\n\ttimer,\n\tsolid,\n\tfixed,\n\tstay,\n\thealth,\n\tlifespan,\n\tz,\n\tmove,\n\tcleanup,\n\tfollow,\n\tstate,\n\t// group events\n\ton,\n\tonUpdate,\n\tonDraw,\n\tonCollide,\n\tonClick,\n\tonHover,\n\taction: onUpdate,\n\trender: onDraw,\n\tcollides: onCollide,\n\tclicks: onClick,\n\thovers: onHover,\n\t// input\n\tonKeyDown,\n\tonKeyPress,\n\tonKeyPressRepeat,\n\tonKeyRelease,\n\tonMouseDown,\n\tonMousePress,\n\tonMouseRelease,\n\tonMouseMove,\n\tonCharInput,\n\tonTouchStart,\n\tonTouchMove,\n\tonTouchEnd,\n\tkeyDown: onKeyDown,\n\tkeyPress: onKeyPress,\n\tkeyPressRep: onKeyPressRepeat,\n\tkeyRelease: onKeyRelease,\n\tmouseDown: onMouseDown,\n\tmouseClick: onMousePress,\n\tmouseRelease: onMouseRelease,\n\tmouseMove: onMouseMove,\n\tcharInput: onCharInput,\n\ttouchStart: onTouchStart,\n\ttouchMove: onTouchMove,\n\ttouchEnd: onTouchEnd,\n\tmousePos,\n\tmouseWorldPos,\n\tmouseDeltaPos: app.mouseDeltaPos,\n\tisKeyDown: app.isKeyDown,\n\tisKeyPressed: app.isKeyPressed,\n\tisKeyPressedRepeat: app.isKeyPressedRepeat,\n\tisKeyReleased: app.isKeyReleased,\n\tisMouseDown: app.isMouseDown,\n\tisMousePressed: app.isMousePressed,\n\tisMouseReleased: app.isMouseReleased,\n\tisMouseMoved: app.isMouseMoved,\n\tkeyIsDown: app.isKeyDown,\n\tkeyIsPressed: app.isKeyPressed,\n\tkeyIsPressedRep: app.isKeyPressedRepeat,\n\tkeyIsReleased: app.isKeyReleased,\n\tmouseIsDown: app.isMouseDown,\n\tmouseIsClicked: app.isMousePressed,\n\tmouseIsReleased: app.isMouseReleased,\n\tmouseIsMoved: app.isMouseMoved,\n\t// timer\n\tloop,\n\twait,\n\t// audio\n\tplay,\n\tvolume: audio.volume,\n\tburp: audio.burp,\n\taudioCtx: audio.ctx,\n\t// math\n\trng,\n\trand,\n\trandi,\n\trandSeed,\n\tvec2,\n\tdir,\n\trgb,\n\thsl2rgb,\n\tquad,\n\tchoose,\n\tchance,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\tdeg2rad,\n\trad2deg,\n\ttestAreaRect,\n\ttestAreaLine,\n\ttestAreaCircle,\n\ttestAreaPolygon,\n\ttestAreaPoint,\n\ttestAreaArea,\n\ttestLineLine,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestLinePolygon,\n\ttestPolygonPolygon,\n\ttestCircleCircle,\n\ttestCirclePoint,\n\ttestRectPolygon,\n\t// raw draw\n\tdrawSprite,\n\tdrawText,\n\t// TODO: wrap these to use assets lib for the \"shader\" prop\n\tdrawRect: gfx.drawRect,\n\tdrawLine: gfx.drawLine,\n\tdrawLines: gfx.drawLines,\n\tdrawTriangle: gfx.drawTriangle,\n\tdrawCircle: gfx.drawCircle,\n\tdrawEllipse: gfx.drawEllipse,\n\tdrawUVQuad: gfx.drawUVQuad,\n\tdrawPolygon: gfx.drawPolygon,\n\tpushTransform: gfx.pushTransform,\n\tpopTransform: gfx.popTransform,\n\tpushTranslate: gfx.pushTranslate,\n\tpushRotate: gfx.pushRotateZ,\n\tpushScale: gfx.pushScale,\n\t// debug\n\tdebug,\n\t// scene\n\tscene,\n\tgo,\n\t// level\n\taddLevel,\n\t// storage\n\tgetData,\n\tsetData,\n\t// plugin\n\tplug,\n\t// char sets\n\tASCII_CHARS,\n\tCP437_CHARS,\n\t// dirs\n\tLEFT: vec2(-1, 0),\n\tRIGHT: vec2(1, 0),\n\tUP: vec2(0, -1),\n\tDOWN: vec2(0, 1),\n\t// colors\n\tRED: rgb(255, 0, 0),\n\tGREEN: rgb(0, 255, 0),\n\tBLUE: rgb(0, 0, 255),\n\tYELLOW: rgb(255, 255, 0),\n\tMAGENTA: rgb(255, 0, 255),\n\tCYAN: rgb(0, 255, 255),\n\tWHITE: rgb(255, 255, 255),\n\tBLACK: rgb(0, 0, 0),\n\t// dom\n\tcanvas: app.canvas,\n};\n\nplug(kaboomPlugin);\n\nif (gopt.plugins) {\n\tgopt.plugins.forEach(plug);\n}\n\nif (gopt.global !== false) {\n\tfor (const k in ctx) {\n\t\twindow[k] = ctx[k];\n\t}\n}\n\nlet numFrames = 0;\n\nfunction frames() {\n\treturn numFrames;\n}\n\nfunction updateFrame() {\n\n\tgame.trigger(\"updateStart\");\n\n\t// update timers\n\tgame.timers.forEach((t, id) => {\n\t\tt.time -= dt();\n\t\tif (t.time <= 0) {\n\t\t\t// TODO: some timer action causes crash on FF when dt is really high, not sure why\n\t\t\tt.action();\n\t\t\tgame.timers.delete(id);\n\t\t}\n\t});\n\n\t// update every obj\n\trevery((obj) => {\n\t\tif (!obj.paused) {\n\t\t\tobj.trigger(\"update\", obj);\n\t\t}\n\t});\n\n}\n\nfunction drawFrame() {\n\n\t// calculate camera matrix\n\tconst size = vec2(width(), height());\n\tconst cam = game.cam;\n\tconst shake = dir(rand(0, 360)).scale(cam.shake);\n\n\tcam.shake = lerp(cam.shake, 0, 5 * dt());\n\tgame.camMatrix = mat4()\n\t\t.translate(size.scale(0.5))\n\t\t.scale(cam.scale)\n\t\t.rotateZ(cam.angle)\n\t\t.translate(size.scale(-0.5))\n\t\t.translate(cam.pos.scale(-1).add(size.scale(0.5)).add(shake))\n\t\t;\n\n\t// draw every obj\n\tevery((obj) => {\n\n\t\tif (!obj.hidden) {\n\n\t\t\tgfx.pushTransform();\n\n\t\t\tif (!obj.fixed) {\n\t\t\t\tgfx.applyMatrix(game.camMatrix);\n\t\t\t}\n\n\t\t\tobj.trigger(\"draw\");\n\t\t\tgfx.popTransform();\n\n\t\t}\n\n\t});\n\n}\n\nfunction drawLoadScreen() {\n\n\t// if assets are not fully loaded, draw a progress bar\n\tconst progress = assets.loadProgress();\n\n\tif (progress === 1) {\n\t\tgame.loaded = true;\n\t\tgame.trigger(\"load\");\n\t} else {\n\n\t\tconst w = width() / 2;\n\t\tconst h = 24 / gfx.scale();\n\t\tconst pos = vec2(width() / 2, height() / 2).sub(vec2(w / 2, h / 2));\n\n\t\tgfx.drawRect({\n\t\t\tpos: vec2(0),\n\t\t\twidth: width(),\n\t\t\theight: height(),\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t});\n\n\t\tgfx.drawRect({\n\t\t\tpos: pos,\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tfill: false,\n\t\t\toutline: {\n\t\t\t\twidth: 4 / gfx.scale(),\n\t\t\t},\n\t\t});\n\n\t\tgfx.drawRect({\n\t\t\tpos: pos,\n\t\t\twidth: w * progress,\n\t\t\theight: h,\n\t\t});\n\n\t}\n\n}\n\nfunction drawDebug() {\n\n\tif (debug.inspect) {\n\n\t\tlet inspecting = null;\n\t\tconst font = assets.fonts[DBG_FONT];\n\t\tconst lcolor = rgb(gopt.inspectColor ?? [0, 0, 255]);\n\n\t\tfunction drawInspectTxt(pos, txt) {\n\n\t\t\tconst s = app.scale;\n\t\t\tconst pad = vec2(8);\n\n\t\t\tgfx.pushTransform();\n\t\t\tgfx.pushTranslate(pos);\n\t\t\tgfx.pushScale(1 / s);\n\n\t\t\tconst ftxt = gfx.fmtText({\n\t\t\t\ttext: txt,\n\t\t\t\tfont: font,\n\t\t\t\tsize: 16,\n\t\t\t\tpos: pad,\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t});\n\n\t\t\tconst bw = ftxt.width + pad.x * 2;\n\t\t\tconst bh = ftxt.height + pad.x * 2;\n\n\t\t\tif (pos.x + bw / s >= width()) {\n\t\t\t\tgfx.pushTranslate(vec2(-bw, 0));\n\t\t\t}\n\n\t\t\tif (pos.y + bh / s >= height()) {\n\t\t\t\tgfx.pushTranslate(vec2(0, -bh));\n\t\t\t}\n\n\t\t\tgfx.drawRect({\n\t\t\t\twidth: bw,\n\t\t\t\theight: bh,\n\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\tradius: 4,\n\t\t\t\topacity: 0.8,\n\t\t\t});\n\n\t\t\tgfx.drawFmtText(ftxt);\n\t\t\tgfx.popTransform();\n\n\t\t}\n\n\t\t// draw area outline\n\t\tevery((obj) => {\n\n\t\t\tif (!obj.area) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (obj.hidden) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst scale = gfx.scale() * (obj.fixed ? 1: (game.cam.scale.x + game.cam.scale.y) / 2);\n\n\t\t\tif (!obj.fixed) {\n\t\t\t\tgfx.pushTransform();\n\t\t\t\tgfx.applyMatrix(game.camMatrix);\n\t\t\t}\n\n\t\t\tif (!inspecting) {\n\t\t\t\tif (obj.isHovering()) {\n\t\t\t\t\tinspecting = obj;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst lwidth = (inspecting === obj ? 8 : 4) / scale;\n\t\t\tconst a = obj.worldArea();\n\t\t\tconst w = a.p2.x - a.p1.x;\n\t\t\tconst h = a.p2.y - a.p1.y;\n\n\t\t\tgfx.drawRect({\n\t\t\t\tpos: a.p1,\n\t\t\t\twidth: w,\n\t\t\t\theight: h,\n\t\t\t\toutline: {\n\t\t\t\t\twidth: lwidth,\n\t\t\t\t\tcolor: lcolor,\n\t\t\t\t},\n\t\t\t\tfill: false,\n\t\t\t});\n\n\t\t\tif (!obj.fixed) {\n\t\t\t\tgfx.popTransform();\n\t\t\t}\n\n\t\t});\n\n\t\tif (inspecting) {\n\n\t\t\tconst lines = [];\n\t\t\tconst data = inspecting.inspect();\n\n\t\t\tfor (const tag in data) {\n\t\t\t\tif (data[tag]) {\n\t\t\t\t\tlines.push(`${tag}: ${data[tag]}`);\n\t\t\t\t} else {\n\t\t\t\t\tlines.push(`${tag}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdrawInspectTxt(mousePos(), lines.join(\"\\n\"));\n\n\t\t}\n\n\t\tdrawInspectTxt(vec2(8 / app.scale), `FPS: ${app.fps()}`);\n\n\t}\n\n\tif (debug.paused) {\n\n\t\t// top right corner\n\t\tgfx.pushTransform();\n\t\tgfx.pushTranslate(width(), 0);\n\t\tgfx.pushScale(1 / app.scale);\n\t\tgfx.pushTranslate(-8, 8);\n\n\t\tconst size = 32;\n\n\t\t// bg\n\t\tgfx.drawRect({\n\t\t\twidth: size,\n\t\t\theight: size,\n\t\t\torigin: \"topright\",\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t\topacity: 0.8,\n\t\t\tradius: 4,\n\t\t});\n\n\t\t// pause icon\n\t\tfor (let i = 1; i <= 2; i++) {\n\t\t\tgfx.drawRect({\n\t\t\t\twidth: 4,\n\t\t\t\theight: size * 0.6,\n\t\t\t\torigin: \"center\",\n\t\t\t\tpos: vec2(-size / 3 * i, size * 0.5),\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\tradius: 2,\n\t\t\t});\n\t\t}\n\n\t\tgfx.popTransform();\n\n\t}\n\n\tif (debug.timeScale !== 1) {\n\n\t\t// bottom right corner\n\t\tgfx.pushTransform();\n\t\tgfx.pushTranslate(width(), height());\n\t\tgfx.pushScale(1 / app.scale);\n\t\tgfx.pushTranslate(-8, -8);\n\n\t\tconst pad = 8;\n\n\t\t// format text first to get text size\n\t\tconst ftxt = gfx.fmtText({\n\t\t\ttext: debug.timeScale.toFixed(1),\n\t\t\tfont: assets.fonts[DBG_FONT],\n\t\t\tsize: 16,\n\t\t\tcolor: rgb(255, 255, 255),\n\t\t\tpos: vec2(-pad),\n\t\t\torigin: \"botright\",\n\t\t});\n\n\t\t// bg\n\t\tgfx.drawRect({\n\t\t\twidth: ftxt.width + pad * 2 + pad * 4,\n\t\t\theight: ftxt.height + pad * 2,\n\t\t\torigin: \"botright\",\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t\topacity: 0.8,\n\t\t\tradius: 4,\n\t\t});\n\n\t\t// fast forward / slow down icon\n\t\tfor (let i = 0; i < 2; i++) {\n\t\t\tconst flipped = debug.timeScale < 1;\n\t\t\tgfx.drawTriangle({\n\t\t\t\tp1: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad),\n\t\t\t\tp2: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad - ftxt.height),\n\t\t\t\tp3: vec2(-ftxt.width - pad * (flipped ? 3.5 : 2), -pad - ftxt.height / 2),\n\t\t\t\tpos: vec2(-i * pad * 1 + (flipped ? -pad * 0.5 : 0), 0),\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t});\n\t\t}\n\n\t\t// text\n\t\tgfx.drawFmtText(ftxt);\n\n\t\tgfx.popTransform();\n\n\t}\n\n\tif (debug.curRecording) {\n\n\t\tgfx.pushTransform();\n\t\tgfx.pushTranslate(0, height());\n\t\tgfx.pushScale(1 / app.scale);\n\t\tgfx.pushTranslate(24, -24);\n\n\t\tgfx.drawCircle({\n\t\t\tradius: 12,\n\t\t\tcolor: rgb(255, 0, 0),\n\t\t\topacity: wave(0, 1, app.time() * 4),\n\t\t});\n\n\t\tgfx.popTransform();\n\n\t}\n\n\tif (debug.showLog) {\n\t\tlogger.draw();\n\t}\n\n}\n\napp.run(() => {\n\n\tnumFrames++;\n\n\tif (!game.loaded) {\n\t\tgfx.frameStart();\n\t\tdrawLoadScreen();\n\t\tgfx.frameEnd();\n\t} else {\n\n\t\t// TODO: this gives the latest mousePos in input handlers but uses cam matrix from last frame\n\t\tgame.camMousePos = game.camMatrix.invert().multVec2(app.mousePos());\n\t\tgame.trigger(\"input\");\n\n\t\tif (!debug.paused && gopt.debug !== false) {\n\t\t\tupdateFrame();\n\t\t}\n\n\t\tgfx.frameStart();\n\t\tdrawFrame();\n\n\t\tif (gopt.debug !== false) {\n\t\t\tdrawDebug();\n\t\t}\n\n\t\tgfx.frameEnd();\n\n\t}\n\n});\n\nif (gopt.debug !== false) {\n\tenterDebugMode();\n}\n\nif (gopt.burp) {\n\tenterBurpMode();\n}\n\nwindow.addEventListener(\"error\", (e) => {\n\tlogger.error(`Error: ${e.error.message}`);\n\tapp.quit();\n\tapp.run(() => {\n\t\tif (assets.loadProgress() === 1) {\n\t\t\tgfx.frameStart();\n\t\t\tlogger.draw();\n\t\t\tgfx.frameEnd();\n\t\t}\n\t});\n});\n\nreturn ctx;\n\n};\n","import kaboom from 'kaboom';\n\n// Start game\nkaboom();\nloadRoot('https://raw.githubusercontent.com/replit/kaboom/f6443b9de1fd15aa2bc5125fd20873b349b72f8d/assets/');\n// Load assets\nloadSprite('bean', '/sprites/bean.png');\nloadSprite('coin', '/sprites/coin.png');\nloadSprite('spike', '/sprites/spike.png');\nloadSprite('grass', '/sprites/grass.png');\nloadSprite('ghosty', '/sprites/ghosty.png');\nloadSprite('portal', '/sprites/portal.png');\nloadSound('score', '/sounds/score.mp3');\nloadSound('portal', '/sounds/portal.mp3');\n\nconst SPEED = 480;\n\n// Design 2 levels\nconst LEVELS = [\n  [\n    '     $          ',\n    '@   $ $  ^     >',\n    '=   ========   =',\n  ],\n  [\n    '@  ^ $$ >',\n    '=========',\n  ],\n  [\n    '@   $   >',\n    '=   =   =',\n  ],\n];\n\nscene('game', ({levelIdx, score}) => {\n  gravity(2400);\n\n  const level = addLevel(LEVELS[levelIdx || 0], {\n    'width': 64,\n    'height': 64,\n    'pos': vec2(100, 200),\n    '@': () => [\n      sprite('bean'),\n      area(),\n      body(),\n      origin('bot'),\n      'player',\n    ],\n    '=': () => [\n      sprite('grass'),\n      area(),\n      solid(),\n      origin('bot'),\n    ],\n    '$': () => [\n      sprite('coin'),\n      area(),\n      origin('bot'),\n      'coin',\n    ],\n    '^': () => [\n      sprite('spike'),\n      area(),\n      origin('bot'),\n      'danger',\n    ],\n    '>': () => [\n      sprite('portal'),\n      area(),\n      origin('bot'),\n      'portal',\n    ],\n  });\n\n  // Get the player object from tag\n  const player = get('player')[0];\n\n  // Movements\n  onKeyPress('space', () => {\n    if (player.isGrounded()) {\n      player.jump();\n    }\n  });\n\n  onKeyDown('left', () => {\n    player.move(-SPEED, 0);\n  });\n\n  onKeyDown('right', () => {\n    player.move(SPEED, 0);\n  });\n\n  player.onCollide('danger', () => {\n    player.pos = level.getPos(0, 0);\n    go('lose');\n  });\n\n  player.onCollide('coin', (coin) => {\n    destroy(coin);\n    play('score');\n    score++;\n    scoreLabel.text = score;\n  });\n\n  // Fall death\n  player.onUpdate(() => {\n    if (player.pos.y >= 480) {\n      go('lose');\n    }\n  });\n\n  // Enter the next level on portal\n  player.onCollide('portal', () => {\n    play('portal');\n    if (levelIdx < LEVELS.length - 1) {\n      // If there's a next level, go() to the same scene but load the next level\n      go('game', {\n        levelIdx: levelIdx + 1,\n        score: score,\n      });\n    } else {\n      // Otherwise we have reached the end of game, go to 'win' scene!\n      go('win', {score: score});\n    }\n  });\n\n  // Score counter text\n  const scoreLabel = add([\n    text(score),\n    pos(12),\n  ]);\n});\n\nscene('lose', () => {\n  add([\n    text('Perdiste'),\n    pos(12),\n  ]);\n\n  onKeyPress(start);\n});\n\nscene('win', ({score}) => {\n  add([\n    text(`You grabbed ${score} coins!!!`, {\n      width: width(),\n    }),\n    pos(12),\n  ]);\n  onKeyPress(start);\n});\n\n\n/**\n * Start the game\n */\nfunction start() {\n  // Start with the 'game' scene, with initial parameters\n  go('game', {\n    levelIdx: 0,\n    score: 0,\n  });\n}\n\nstart();\n"],"names":["$f59b734641f0ebec$var$jt","Object","defineProperty","$f59b734641f0ebec$var$cn","defineProperties","$f59b734641f0ebec$var$ln","getOwnPropertyDescriptors","$f59b734641f0ebec$var$Qt","getOwnPropertySymbols","$f59b734641f0ebec$var$dn","prototype","hasOwnProperty","$f59b734641f0ebec$var$hn","propertyIsEnumerable","$f59b734641f0ebec$var$Bt","e","r","t","enumerable","configurable","writable","value","$f59b734641f0ebec$var$ne","call","$f59b734641f0ebec$var$se","$f59b734641f0ebec$var$i","$f59b734641f0ebec$var$tr","Uint8Array","a","length","U","S","v","D","charCodeAt","V","A","L","$f59b734641f0ebec$var$Ce","Math","PI","$f59b734641f0ebec$var$Tt","$f59b734641f0ebec$var$pe","min","max","$f59b734641f0ebec$var$Ne","$f59b734641f0ebec$var$Oe","$f59b734641f0ebec$var$rr","$f59b734641f0ebec$var$u","$f59b734641f0ebec$var$We","x","y","Array","isArray","apply","clone","this","add","sub","scale","dist","sqrt","len","unit","normal","dot","angle","atan2","lerp","toFixed","eq","str","$f59b734641f0ebec$var$ot","cos","sin","$f59b734641f0ebec$var$Se","z","xy","$f59b734641f0ebec$var$nr","$f59b734641f0ebec$var$qe","g","b","$f59b734641f0ebec$var$sr","m","$f59b734641f0ebec$var$I","lighten","darken","invert","mult","$f59b734641f0ebec$var$ir","N","round","$f59b734641f0ebec$var$de","w","h","$f59b734641f0ebec$var$le","multVec4","multVec3","multVec2","translate","rotateX","rotateY","rotateZ","Y","ie","j","oe","J","ue","ye","P","T","_","$f59b734641f0ebec$var$St","$f59b734641f0ebec$var$Pt","$f59b734641f0ebec$var$Dt","Date","now","seed","gen","$f59b734641f0ebec$var$ar","$f59b734641f0ebec$var$je","$f59b734641f0ebec$var$Rt","floor","$f59b734641f0ebec$var$ur","$f59b734641f0ebec$var$cr","$f59b734641f0ebec$var$lr","p2","p1","$f59b734641f0ebec$var$At","$f59b734641f0ebec$var$Mt","$f59b734641f0ebec$var$Pe","$f59b734641f0ebec$var$at","$f59b734641f0ebec$var$Be","$f59b734641f0ebec$var$mt","$f59b734641f0ebec$var$dr","$f59b734641f0ebec$var$ut","$f59b734641f0ebec$var$lt","$f59b734641f0ebec$var$hr","$f59b734641f0ebec$var$fr","$f59b734641f0ebec$var$Qe","$f59b734641f0ebec$var$$e","$f59b734641f0ebec$var$ct","center","radius","$f59b734641f0ebec$var$Vt","$f59b734641f0ebec$var$mr","$f59b734641f0ebec$var$pn","$f59b734641f0ebec$var$dt","shape","pts","pt","Error","$f59b734641f0ebec$var$kt","Boolean","$f59b734641f0ebec$var$It","$f59b734641f0ebec$var$Lt","$f59b734641f0ebec$var$ht","$f59b734641f0ebec$var$Ft","$f59b734641f0ebec$var$ft","$f59b734641f0ebec$var$he","Map","super","$f59b734641f0ebec$var$Kt","_lastID","push","r1","set","pushd","r2","delete","$f59b734641f0ebec$var$Ot","keys","$f59b734641f0ebec$var$_t","document","createElement","body","appendChild","setAttribute","href","download","click","removeChild","$f59b734641f0ebec$var$pr","URL","createObjectURL","revokeObjectURL","$f59b734641f0ebec$var$yn","C","o","$f59b734641f0ebec$var$Xt","$f59b734641f0ebec$var$Wt","f","ImageData","Uint8ClampedArray","background","enable","BLEND","SCISSOR_TEST","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","R","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","$f59b734641f0ebec$var$yt","DYNAMIC_DRAW","ELEMENT_ARRAY_BUFFER","E","wrap","filter","drawCalls","defShader","curShader","curTex","curUniform","vbuf","vqueue","iqueue","transform","transformStack","bgTex","width","height","createTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texFilter","LINEAR","NEAREST","REPEAT","CLAMP_TO_EDGE","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","bindTexture","bind","unbind","replace","$f59b734641f0ebec$var$bn","createShader","VERTEX_SHADER","FRAGMENT_SHADER","shaderSource","compileShader","getShaderInfoLog","O","createProgram","attachShader","bindAttribLocation","linkProgram","getProgramInfoLog","useProgram","bindAttribs","vertexAttribPointer","FLOAT","$f59b734641f0ebec$var$Ke","enableVertexAttribArray","send","H","re","Z","ee","getUniformLocation","uniform1f","uniformMatrix4fv","Float32Array","uniform4f","uniform3f","uniform2f","split","entries","map","qw","qh","defTex","forEach","pos","uv","color","opacity","bufferSubData","ibuf","Uint16Array","drawElements","TRIANGLES","UNSIGNED_SHORT","COLOR_BUFFER_BIT","Ee","ce","quad","xe","lastDrawCalls","pop","$f59b734641f0ebec$var$Ge","origin","flipX","flipY","shader","uniform","tex","ceil","X","k","W","x1","p3","$","F","radiusY","radiusX","ae","start","end","resolution","offset","fill","flat","indices","outline","text","font","size","Ae","fe","be","me","ge","slice","Ye","Me","Ve","et","Ut","ze","tt","gt","Ze","Te","rt","nt","Je","wt","xt","we","ch","Ue","chars","G","De","Re","stretch","letterbox","drawingBufferWidth","drawingBufferHeight","scissor","viewport","bt","log","q","makeShader","makeFont","drawTexture","drawText","drawFmtText","drawRect","drawLine","drawLines","drawTriangle","drawCircle","drawEllipse","drawPolygon","drawUVQuad","fmtText","frameStart","frameEnd","pushTranslate","pushScale","pushRotateX","pushRotateY","pushRotateZ","pushTransform","popTransform","applyMatrix","$f59b734641f0ebec$var$Ur","$f59b734641f0ebec$var$Un","requestFullscreen","webkitRequestFullscreen","$f59b734641f0ebec$var$gn","exitFullscreen","webkitExitFullScreen","$f59b734641f0ebec$var$wn","fullscreenElement","webkitFullscreenElement","$f59b734641f0ebec$var$gr","root","style","margin","documentElement","canvas","keyStates","charInputted","isMouseMoved","isKeyPressed","isKeyPressedRepeat","mouseStates","mousePos","mouseDeltaPos","time","realTime","skipTime","dt","isTouch","loopID","stopped","fps","fpsBuf","fpsTimer","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","parentElement","offsetWidth","offsetHeight","join","antialias","stencil","alpha","preserveDrawingBuffer","window","navigator","maxTouchPoints","addEventListener","offsetX","offsetY","movementX","movementY","toDataURL","cursor","visibilityState","requestAnimationFrame","reduce","ce2","ce1","cancelAnimationFrame","button","key","toLowerCase","includes","preventDefault","repeat","touchToMouse","touches","clientX","clientY","left","audioCtx","resume","suspend","gl","isKeyDown","isKeyReleased","isMouseDown","isMousePressed","isMouseReleased","activeElement","focus","$f59b734641f0ebec$var$br","AudioContext","webkitAudioContext","createGain","destination","AudioBuffer","sampleRate","gain","createBufferSource","buffer","buf","loop","connect","seek","currentTime","stop","pause","play","playbackRate","detune","isPaused","paused","isStopped","speed","volume","unloop","duration","$f59b734641f0ebec$var$wr","ctx","masterNode","$f59b734641f0ebec$var$vr","Image","src","crossOrigin","Promise","onload","onerror","startsWith","$f59b734641f0ebec$var$Ar","lastLoaderID","loadRoot","loaders","sprites","sounds","shaders","catch","errHandler","console","error","finally","$f59b734641f0ebec$var$$t","$f59b734641f0ebec$var$Rr","then","makeTex","$f59b734641f0ebec$var$qt","fonts","fetch","json","frames","sliceX","sliceY","anims","next","throw","done","resolve","$f59b734641f0ebec$var$er","all","getContext","drawImage","meta","frame","F1","frameTags","from","to","name","ok","arrayBuffer","decodeAudioData","loadSpriteAtlas","loadBean","loadSound","loadFont","loadProgress","$f59b734641f0ebec$var$Mr","type","msg","sink","draw","clear","$f59b734641f0ebec$var$Ir","id","require","update","destroy","vec2","sprite","stay","boomComps","timer","use","kaComps","loadSprite","addKaboom","Jt","n","logMax","Q","timeScale","s","c","numberOfChannels","_e","l","camMousePos","loaded","events","objEvents","objs","timers","cam","vt","shake","camMatrix","layers","gravity","on","defLayer","Set","_id","unuse","d","get","cleanups","m1","has","M","p","exists","load","onUpdate","trigger","is","tag","cb","inspect","onDraw","area","_checkCollisions","isClicked","isHovering","clearLog","stepFrame","screenshot","burp","values","B","K","layer","reverse","solid","worldArea","Nt","ve","abs","Fe","te","ke","Ie","Le","st","it","Ht","right","top","bottom","Ct","target","displacement","moveBy","moveTo","move","screenPos","fixed","Number","obj","follow","screenArea","hovers","hasPoint","onClick","onCollide","onHover","pushOut","isColliding","l2","animSpeed","anim","He","tiled","onEnd","pingpong","numFrames","curAnim","onAnimEnd","JSON","stringify","Or","textSize","_r","Wr","$r","action","changedTouches","identifier","Lr","Fr","Xr","qr","jumpForce","weight","isBottom","isTop","maxVel","curPlatform","isGrounded","grounded","falling","isFalling","jump","doubleJump","Jr","Hr","Nr","jr","hurt","setHP","hp","fade","Kr","enter","state","enterState","onStateEnter","onStateLeave","zr","Zr","Qr","showLog","objCount","Zt","info","curRecording","en","tn","scenes","debug","rn","parse","localStorage","Gt","Xe","global","setGridPos","gridPos","gridWidth","gridHeight","moveLeft","moveRight","moveUp","moveDown","sn","getPos","any","nn","spawn","Yt","stream","getAudioTracks","MediaRecorder","ondataavailable","data","disconnect","getTracks","onstop","Blob","Et","loadShader","loadAseprite","loadPedit","record","focused","isFocused","regCursor","fullscreen","isFullscreen","onLoad","ready","camPos","camScale","camRot","toScreen","toWorld","readd","destroyAll","every","revery","rotate","rect","circle","uvquad","health","lifespan","cleanup","render","collides","clicks","onKeyDown","onKeyPress","onKeyPressRepeat","onKeyRelease","onMouseDown","onMousePress","onMouseRelease","onMouseMove","onCharInput","onTouchStart","onTouchMove","onTouchEnd","keyDown","keyPress","keyPressRep","keyRelease","mouseDown","mouseClick","mouseRelease","mouseMove","charInput","touchStart","touchMove","touchEnd","mouseWorldPos","keyIsDown","keyIsPressed","keyIsPressedRep","keyIsReleased","mouseIsDown","mouseIsClicked","mouseIsReleased","mouseIsMoved","wait","rng","rand","randi","randSeed","dir","rgb","hsl2rgb","choose","chance","mapc","wave","deg2rad","rad2deg","testAreaRect","testAreaLine","testAreaPolygon","testAreaPoint","testAreaArea","testRectRect","testRectPoint","testLinePolygon","testPolygonPolygon","testCircleCircle","testRectPolygon","drawSprite","RED","GREEN","BLUE","MAGENTA","CYAN","plugins","n1","inspectColor","hidden","an","$f59b734641f0ebec$export$2e2bcd8739ae039","$c8eaf4acd6fbca2f$var$LEVELS","$c8eaf4acd6fbca2f$var$start","go","levelIdx","score","scene","level","addLevel","player","coin","scoreLabel"],"version":3,"file":"index.247185ea.js.map"}